
<!-- Data context for Opaque Surfaces and other tables with different views (Attic, Cathedral Ceilings, Slab

Opaque Surfaces XSLT: -->

				<xsl:for-each
					select="//Model[@Name='Proposed']/Proj/Zone/ExtWall | //Model[@Name='Proposed']/Proj/Zone/IntWall | //Model[@Name='Proposed']/Proj/Zone/CeilingBelowAttic | 
					//Model[@Name='Proposed']/Proj/Zone/ExteriorFloor | //Model[@Name='Proposed']/Proj/Zone/FloorOverCrawl | //Model[@Name='Proposed']/Proj/Zone/InteriorFloor | 
					//Model[@Name='Proposed']/Proj/Garage/ExtWall | //Model[@Name='Proposed']/Proj/Garage/IntWall | //Model[@Name='Proposed']/Proj/Garage/CeilingBelowAttic | 
					//Model[@Name='Proposed']/Proj/Garage/FloorOverCrawl | //Model[@Name='Proposed']/Proj/Garage/ExteriorFloor|//Model[@Name='Proposed']/Proj/Zone/InteriorFloor|
					//Model[@Name='Proposed']/Proj/Zone/InteriorCeiling | //Model[@Name='Proposed']/Proj/Zone/UndWall">
					<fo:table-row>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Name/text())">
									<xsl:value-of select="Name/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:choose>
									<xsl:when test="Outside">
										<xsl:value-of select="concat(../Name, '&gt;&gt;',Outside)"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="../Name"/>
									</xsl:otherwise>
								</xsl:choose>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Construction)">
									<xsl:value-of select="Construction"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<xsl:choose>
								<xsl:when test="not(Azimuth)">
									<xsl:call-template name="na"/>
								</xsl:when>
								<xsl:otherwise>
									<fo:block>
										<xsl:value-of select="Azimuth"/>
									</fo:block>

								</xsl:otherwise>
							</xsl:choose>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<xsl:choose>
								<xsl:when test="not(Orientation)">
									<xsl:call-template name="na"/>
								</xsl:when>
								<xsl:otherwise>
									<fo:block>
										<xsl:value-of select="Orientation"/>
									</fo:block>

								</xsl:otherwise>
							</xsl:choose>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Area/text())">
									<xsl:value-of select="Area/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<xsl:choose>
								<xsl:when test="not(ChildAreaSum)">
									<xsl:call-template name="na"/>
								</xsl:when>
								<xsl:otherwise>
									<fo:block>
										<xsl:value-of select="ChildAreaSum"/>
									</fo:block>

								</xsl:otherwise>
							</xsl:choose>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<xsl:choose>
								<xsl:when test="not(Tilt)">
									<xsl:call-template name="na"/>
								</xsl:when>
								<xsl:otherwise>
									<fo:block>
										<xsl:value-of select="Tilt/text()"/>
									</fo:block>

								</xsl:otherwise>
							</xsl:choose>
						</fo:table-cell>
					</fo:table-row>
				</xsl:for-each>
				
<!--Cathedral Ceiling XSLT: -->

				<xsl:for-each
					select="//Model[@Name='Proposed']/Proj/Zone/CathedralCeiling | //Model[@Name='Proposed']/Proj/Garage/CathedralCeiling">
					<fo:table-row>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Name/text())">
									<xsl:value-of select="Name/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(../Name/text())">
									<xsl:value-of select="../Name/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Construction/text())">
									<xsl:value-of select="Construction/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Orientation/text())">
									<xsl:value-of select="Orientation/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Area/text())">
									<xsl:value-of select="Area/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(ChildAreaSum)">
									<xsl:value-of select="ChildAreaSum"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(RoofRise/text())">
									<xsl:value-of select="RoofRise/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:value-of select="round(RoofPitch*100) div 100"/>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:value-of select="round(RoofTilt*100) div 100"/>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(RoofSolReflect/text())">
									<xsl:value-of select="RoofSolReflect/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(RoofEmiss/text())">
									<xsl:value-of select="RoofEmiss/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(FramingFactor/text())">
									<xsl:value-of select="FramingFactor/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
					</fo:table-row>
				</xsl:for-each>
				
<!-- Attic XSLT:  -->
				
								<xsl:for-each select="//Model[@Name='Proposed']/Proj/Attic">
					<fo:table-row>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Name/text())">
									<xsl:value-of select="Name/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Construction)">
									<xsl:value-of select="Construction"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Type)">
									<xsl:value-of select="Type"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(RoofRise/text())">
									<xsl:value-of select="RoofRise/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(RoofSolReflect/text())">
									<xsl:value-of select="RoofSolReflect/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(RoofEmiss/text())">
									<xsl:value-of select="RoofEmiss/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:variable name="getCons" select="Construction"/>
								<xsl:variable name="getRadBar"
									select="//Model[@Name='Proposed']/Cons[Name=$getCons]/RadiantBarrier"/>
								<xsl:choose>
									<xsl:when test="$getRadBar=1"> Yes </xsl:when>
									<xsl:otherwise>No</xsl:otherwise>
								</xsl:choose>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:choose>
									<xsl:when test="SolReflSpclFtrs&gt;=2">Yes</xsl:when>
									<xsl:otherwise>No</xsl:otherwise>
								</xsl:choose>
							</fo:block>
						</fo:table-cell>
					</fo:table-row>
				</xsl:for-each>
				
<!-- Slab XSLT: -->

				<xsl:for-each
					select="//Model[@Name='Proposed']/Proj/Zone/SlabFloor | //Model[@Name='Proposed']/Proj/Garage/SlabFloor | //Model[@Name='Proposed']/Proj/Zone/UndFloor">
					<fo:table-row>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Name/text())">
									<xsl:value-of select="Name/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(../Name/text())">
									<xsl:value-of select="../Name/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(Area/text())">
									<xsl:value-of select="Area/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:choose>
									<xsl:when test="Perimeter">
										<xsl:value-of select="Perimeter"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="na"/>
									</xsl:otherwise>
								</xsl:choose>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:choose>
									<xsl:when test="EdgeInsulation=1">
										<xsl:value-of
											select="concat('R-',EdgeInsulRValue,', ',EdgeInsulDepth,' inches')"
										/>
									</xsl:when>
									<xsl:otherwise>None</xsl:otherwise>
								</xsl:choose>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:if test="string(CarpetedFrac/text())">
									<xsl:value-of select="CarpetedFrac/text()"/>
								</xsl:if>
							</fo:block>
						</fo:table-cell>
						<fo:table-cell xsl:use-attribute-sets="numberCell">
							<fo:block>
								<xsl:variable name="slabheat" select="(HeatedSlab/text())"/>
								<xsl:choose>
									<xsl:when test="$slabheat = '1'">Yes</xsl:when>
									<xsl:otherwise>No</xsl:otherwise>
								</xsl:choose>
							</fo:block>
						</fo:table-cell>
					</fo:table-row>
				</xsl:for-each>
				

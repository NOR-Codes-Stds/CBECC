; -------------------------------------------------------------------------
; Rules pertaining to:   Simulation and Compliance Analysis Results
; CEC Title-24 Residential Energy Code
; -------------------------------------------------------------------------
; Copyright (c) 2012-2014, California Energy Commission
; Copyright (c) 2012-2014, Wrightsoft Corporation
; All rights reserved.
; Redistribution and use in source and binary forms, with or without modification,
; are permitted provided that the following conditions are met:
; - Redistributions of source code must retain the above copyright notice, this
;   list of conditions and the following disclaimer.
; - Redistributions in binary form must reproduce the above copyright notice, this
;   list of conditions, the following disclaimer in the documentation and/or other
;   materials provided with the distribution.
; - Neither the name of the California Energy Commission nor the names of its
;   contributors may be used to endorse or promote products derived from this
;   software without specific prior written permission.
; DISCLAIMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
; THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
; NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION,
; WRIGHTSOFT CORPORATION, ITRON, INC. OR ANY OTHER AUTHOR OR COPYRIGHT HOLDER OF
; THIS SOFTWARE (COLLECTIVELY, THE "AUTHORS") BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
; OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
; OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
; ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  EACH LICENSEE AND SUBLICENSEE OF THE
; SOFTWARE AGREES NOT TO ASSERT ANY CLAIM AGAINST ANY OF THE AUTHORS RELATING TO
; THIS SOFTWARE, WHETHER DUE TO PERFORMANCE ISSUES, TITLE OR INFRINGEMENT ISSUES,
; STRICT LIABILITY OR OTHERWISE.
; -------------------------------------------------------------------------

; SAC 11/26/19 - while integrating 2022 CO2 emissions tables - replaced all hard-coded conversions (incl. 0.907185) w/ new Proj properties (CO2ElecTableMult & CO2FuelTableMult) that vary by code vintage
; SAC 11/26/19 - renamed elec CO2 emissions table CA19_Carbon_Elec -> CA_Carbon_Elec to ccommodate multiple code vintage support via table file references in main rule definitions file
; 'HPHtg' -> 'HPBU' - SAC 07/02/21

;*************************************************************************  - SAC 10/2/17
RULELIST "CARes_ProposedResults_Carbon" 1 0 1 1
;*************************************************************************
  ; Space Heating (& heating fan)
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
   "Calculate Carbon - Elec   - SpcHt"    Proj:RunResults[1]:PropElecCarbon[1]   = {   if (LocalRef( RunResults[1]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "HtgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - SpcHt"    Proj:RunResults[1]:PropNatGasCarbon[1] = {   if (LocalRef( RunResults[1]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - SpcHt"    Proj:RunResults[1]:PropOtherCarbon[1]  = {   if (LocalRef( RunResults[1]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - SpcHt"    Proj:RunResults[1]:PropTotalCarbon[1]  = {   RunResults[1]:PropElecCarbon[1] + RunResults[1]:PropNatGasCarbon[1] + RunResults[1]:PropOtherCarbon[1]  }

  ; Space Cooling (& cooling fan)
   "Calculate Carbon - Elec   - SpcCl"    Proj:RunResults[2]:PropElecCarbon[1]   = {   if (LocalRef( RunResults[2]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ClgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Clg", "FanC" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - SpcCl"    Proj:RunResults[2]:PropNatGasCarbon[1] = {   if (LocalRef( RunResults[2]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - SpcCl"    Proj:RunResults[2]:PropOtherCarbon[1]  = {   if (LocalRef( RunResults[2]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - SpcCl"    Proj:RunResults[2]:PropTotalCarbon[1]  = {   RunResults[2]:PropElecCarbon[1] + RunResults[2]:PropNatGasCarbon[1] + RunResults[2]:PropOtherCarbon[1]  }

  ; IAQ Ventilation Fans
   "Calculate Carbon - Elec   - IAQVent"  Proj:RunResults[3]:PropElecCarbon[1]   = {   if (LocalRef( RunResults[3]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "IAQVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "FanV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - IAQVent"  Proj:RunResults[3]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon - Other  - IAQVent"  Proj:RunResults[3]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon - Total  - IAQVent"  Proj:RunResults[3]:PropTotalCarbon[1]  = {   RunResults[3]:PropElecCarbon[1]  }

  ; Other HVAC (aux & misc fans)
   ; SAC 11/15/18 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
   ; SAC 1/27/19 - switched if check from "LocalRef( RunResults[4]:PropElecEnergy[1] )" to "HourlyResultSum( RunID, "MtrElec", "User1" )" since OthrHVAC would already have been re-allocated to SpcHt & SpcCl by now (tic #1053)
   "Calculate Carbon - Elec   - OthrHVAC" Proj:RunResults[4]:PropElecCarbon[1]   = {   if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "OHVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "User1" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - OthrHVAC" Proj:RunResults[4]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon - Other  - OthrHVAC" Proj:RunResults[4]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon - Total  - OthrHVAC" Proj:RunResults[4]:PropTotalCarbon[1]  = {   RunResults[4]:PropElecCarbon[1]  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC Prop Carbon use across SpcHt & SpcCl by fuel based on ratio of total carbon (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - PropCarbon"  Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResults[4]:PropTotalCarbon[1] != 0 )==0) then  0
                                                                        else if (IfValidAnd( RunResults[1]:PropTotalCarbon[1] == 0 ) .AND.
                                                                                 IfValidAnd( RunResults[2]:PropTotalCarbon[1] == 0 )) then  0.5
                                                                        else   ValidOr( RunResults[1]:PropTotalCarbon[1], 0 ) / 
                                                                              (ValidOr( RunResults[1]:PropTotalCarbon[1], 0 ) + ValidOr( RunResults[2]:PropTotalCarbon[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - SpcHt"		Proj:RunResults[1]:PropElecCarbon[1]	= {   if (IfValidAnd( RunResults[4]:PropElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[1]:PropElecCarbon[1] + (RunResults[4]:PropElecCarbon[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcHt"		Proj:RunResults[1]:PropTotalCarbon[1]	= {	LocalRef( RunResults[1]:PropElecCarbon[1] ) + LocalRef( RunResults[1]:PropNatGasCarbon[1] ) + LocalRef( RunResults[1]:PropOtherCarbon[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - SpcCl"		Proj:RunResults[2]:PropElecCarbon[1]	= {   if (IfValidAnd( RunResults[4]:PropElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[2]:PropElecCarbon[1] + (RunResults[4]:PropElecCarbon[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcCl"		Proj:RunResults[2]:PropTotalCarbon[1]	= {	LocalRef( RunResults[2]:PropElecCarbon[1] ) + LocalRef( RunResults[2]:PropNatGasCarbon[1] ) + LocalRef( RunResults[2]:PropOtherCarbon[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - OthrHVAC"	Proj:RunResults[4]:PropElecCarbon[1]	= {	0  }
	"ZERO-OUT         - TOTAL  - OthrHVAC"	Proj:RunResults[4]:PropTotalCarbon[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC PropCarbon

  ; Water Heating
   ; SAC 2/27/18 - added "DhwMFL" enduse following each reference to "DHWPmp"
   ; SAC 1/8/19 - summed in CSE enduse 'User2' to each elec DHW results retrieval (to capture HPWH XBU energy)
   "Calculate Carbon - Elec   - WtrHt"    Proj:RunResults[5]:PropElecCarbon[1]   = {   if (LocalRef( RunResults[5]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else if (CSEinclDHWMFL_EU)
			 			  																							then  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412 / CondFloorArea
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon - NatGas - WtrHt"    Proj:RunResults[5]:PropNatGasCarbon[1] = {   if (LocalRef( RunResults[5]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - WtrHt"    Proj:RunResults[5]:PropOtherCarbon[1]  = {   if (LocalRef( RunResults[5]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - WtrHt"    Proj:RunResults[5]:PropTotalCarbon[1]  = {   RunResults[5]:PropElecCarbon[1] + RunResults[5]:PropNatGasCarbon[1] + RunResults[5]:PropOtherCarbon[1]  }

  ; Inside Lighting
   "Calculate Carbon - Elec   - InsLtg"   Proj:RunResults[6]:PropElecCarbon[1]   = {   if (LocalRef( RunResults[6]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ILtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Lit" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - InsLtg"   Proj:RunResults[6]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon - Other  - InsLtg"   Proj:RunResults[6]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon - Total  - InsLtg"   Proj:RunResults[6]:PropTotalCarbon[1]  = {   RunResults[6]:PropElecCarbon[1]  }

  ; Appliances & Cooking
   "Calculate Carbon - Elec   - AppCkg"   Proj:RunResults[7]:PropElecCarbon[1]   = {   if (LocalRef( RunResults[7]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "AppEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - AppCkg"   Proj:RunResults[7]:PropNatGasCarbon[1] = {   if (LocalRef( RunResults[7]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - AppCkg"   Proj:RunResults[7]:PropOtherCarbon[1]  = {   if (LocalRef( RunResults[7]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - AppCkg"   Proj:RunResults[7]:PropTotalCarbon[1]  = {   RunResults[7]:PropElecCarbon[1] + RunResults[7]:PropNatGasCarbon[1] + RunResults[7]:PropOtherCarbon[1]  }

  ; Plug Loads
   "Calculate Carbon - Elec   - Plugs"    Proj:RunResults[8]:PropElecCarbon[1]   = {   if (LocalRef( RunResults[8]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "RcpEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Rcp" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - Plugs"    Proj:RunResults[8]:PropNatGasCarbon[1] = {   if (LocalRef( RunResults[8]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - Plugs"    Proj:RunResults[8]:PropOtherCarbon[1]  = {   if (LocalRef( RunResults[8]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - Plugs"    Proj:RunResults[8]:PropTotalCarbon[1]  = {   RunResults[8]:PropElecCarbon[1] + RunResults[8]:PropNatGasCarbon[1] + RunResults[8]:PropOtherCarbon[1]  }

  ; Exterior
   "Calculate Carbon - Elec   - Ext"      Proj:RunResults[9]:PropElecCarbon[1]   = {   if (LocalRef( RunResults[9]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ExtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Ext" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - Ext"      Proj:RunResults[9]:PropNatGasCarbon[1] = {   if (LocalRef( RunResults[9]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - Ext"      Proj:RunResults[9]:PropOtherCarbon[1]  = {   if (LocalRef( RunResults[9]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - Ext"      Proj:RunResults[9]:PropTotalCarbon[1]  = {   RunResults[9]:PropElecCarbon[1] + RunResults[9]:PropNatGasCarbon[1] + RunResults[9]:PropOtherCarbon[1]  }

;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[1]:PropPVScaleFactor > 0 )==0) then  MessageBox( "RunID: %s, PropPVScaleFactor undefined", "Proposed" )
;                           else  MessageBox( "RunID: %s, ResultSummary[1]:PropPVScaleFactor = %g", RunID, ResultSummary[1]:PropPVScaleFactor )  endif  }
;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[1]:TargetDRtgPVMult > 0 )==0) then  MessageBox( "RunID: %s, TargetDRtgPVMult undefined", RunID )
;                           else  MessageBox( "RunID: %s, ResultSummary[1]:TargetDRtgPVMult = %g", RunID, ResultSummary[1]:TargetDRtgPVMult )  endif  }
;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[1]:PropPVScaleFactor != 1 )==0 .OR.
;                               ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND. IfValidAnd( ResultSummary[1]:TargetDRtgPVMult > 0 ) )) then  UNCHANGED
;                           else  MessageBox( "%s PV scaling of %g", RunID, ResultSummary[1]:PropPVScaleFactor )  endif  }
  ; PV
   "Store negative PV 8760"               Proj:RunResults[13]:Action              ={   if (IfValidAnd( ResultSummary[1]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                           ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                             IfValidAnd( ResultSummary[1]:TargetDRtgPVMult > 0 ) )) then UNCHANGED
                                                                                       else  ApplyHourlyResultMultipliers( "NegPV", "none", -1.0, 1, "none", 0, 0, "Proposed", "MtrElec",   "PV" )
                                                                                       endif  }
   "Store scaled PV 8760"                 Proj:RunResults[13]:Action              ={   if (IfValidAnd( ResultSummary[1]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                           ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                             IfValidAnd( ResultSummary[1]:TargetDRtgPVMult > 0 ) ))
                                                                                       then  ApplyHourlyResultMultipliers( "ScldPV", "none",                                1.0, 1, "none", 0, 0, "Proposed", "MtrElec",   "PV" )
                                                                                       else  ApplyHourlyResultMultipliers( "ScldPV", "none", ResultSummary[1]:PropPVScaleFactor, 1, "none", 0, 0, "Proposed", "MtrElec",   "PV" )
                                                                                       endif  }
   "Calculate Carbon - Elec   - PV"       Proj:RunResults[13]:PropElecCarbon[1]   ={   if (LocalRef( RunResults[13]:PropElecEnergy[1]   ) > -0.0001) then  0
                                                                                       else if (CommunitySolarProjID > 0 .AND. IfValidAnd( CmntySlr_CO2 < 0 )) then  CmntySlr_CO2 * PVWDCSizeMultiplier[1] / 1000 / CondFloorArea
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "PVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "ScldPV" ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon - NatGas - PV"       Proj:RunResults[13]:PropNatGasCarbon[1] ={   0  }
   "Calculate Carbon - Other  - PV"       Proj:RunResults[13]:PropOtherCarbon[1]  ={   0  }
   "Calculate Carbon - Total  - PV"       Proj:RunResults[13]:PropTotalCarbon[1]  ={   RunResults[13]:PropElecCarbon[1]  }

  ; Battery
;   "Store negative BT 8760"    Proj:RunResults[14]:Action    ={   if (IfValidAnd( RunResults[14]:PropElecEnergy > 0 )==0) then UNCHANGED
;                                                                  else  ApplyHourlyResultMultipliers_Neg( "NegBT", "none", -1.0, 1, "none", 0, 0, "Proposed", "MtrElec",   "BT" )
;                                                                  endif  }
   "Calculate Carbon - Elec   - Battery"  Proj:RunResults[14]:PropElecCarbon[1]   ={   if (LocalRef( RunResults[14]:PropElecEnergy[1]   ) = 0) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "BTEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "BT" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - Battery"  Proj:RunResults[14]:PropNatGasCarbon[1] ={   0  }
   "Calculate Carbon - Other  - Battery"  Proj:RunResults[14]:PropOtherCarbon[1]  ={   0  }
   "Calculate Carbon - Total  - Battery"  Proj:RunResults[14]:PropTotalCarbon[1]  ={   RunResults[14]:PropElecCarbon[1]  }

  ; Compliance Total
   "Calculate Carbon - Elec   - Comp Ttl" Proj:RunResults[11]:PropElecCarbon[1]   ={	RunResults[1]:PropElecCarbon[1]   + RunResults[2]:PropElecCarbon[1]   + RunResults[3]:PropElecCarbon[1]   + RunResults[4]:PropElecCarbon[1]   + RunResults[5]:PropElecCarbon[1]     }
   "Calculate Carbon - NatGas - Comp Ttl" Proj:RunResults[11]:PropNatGasCarbon[1] ={	RunResults[1]:PropNatGasCarbon[1] + RunResults[2]:PropNatGasCarbon[1] + RunResults[3]:PropNatGasCarbon[1] + RunResults[4]:PropNatGasCarbon[1] + RunResults[5]:PropNatGasCarbon[1]   }
   "Calculate Carbon - Other  - Comp Ttl" Proj:RunResults[11]:PropOtherCarbon[1]  ={	RunResults[1]:PropOtherCarbon[1]  + RunResults[2]:PropOtherCarbon[1]  + RunResults[3]:PropOtherCarbon[1]  + RunResults[4]:PropOtherCarbon[1]  + RunResults[5]:PropOtherCarbon[1]    }
   "Calculate Carbon - TOTAL  - Comp Ttl" Proj:RunResults[11]:PropTotalCarbon[1]  ={	RunResults[1]:PropTotalCarbon[1]  + RunResults[2]:PropTotalCarbon[1]  + RunResults[3]:PropTotalCarbon[1]  + RunResults[4]:PropTotalCarbon[1]  + RunResults[5]:PropTotalCarbon[1]    }

  ; Total
   "Calculate Carbon - Elec   - Total"    Proj:RunResults[10]:PropElecCarbon[1]   ={	RunResults[11]:PropElecCarbon[1]   + RunResults[6]:PropElecCarbon[1]   + RunResults[7]:PropElecCarbon[1]   + RunResults[8]:PropElecCarbon[1]   + RunResults[9]:PropElecCarbon[1]   + RunResults[13]:PropElecCarbon[1]   + RunResults[14]:PropElecCarbon[1]     }
   "Calculate Carbon - NatGas - Total"    Proj:RunResults[10]:PropNatGasCarbon[1] ={	RunResults[11]:PropNatGasCarbon[1] + RunResults[6]:PropNatGasCarbon[1] + RunResults[7]:PropNatGasCarbon[1] + RunResults[8]:PropNatGasCarbon[1] + RunResults[9]:PropNatGasCarbon[1] + RunResults[13]:PropNatGasCarbon[1] + RunResults[14]:PropNatGasCarbon[1]   }
   "Calculate Carbon - Other  - Total"    Proj:RunResults[10]:PropOtherCarbon[1]  ={	RunResults[11]:PropOtherCarbon[1]  + RunResults[6]:PropOtherCarbon[1]  + RunResults[7]:PropOtherCarbon[1]  + RunResults[8]:PropOtherCarbon[1]  + RunResults[9]:PropOtherCarbon[1]  + RunResults[13]:PropOtherCarbon[1]  + RunResults[14]:PropOtherCarbon[1]    }
   "Calculate Carbon - TOTAL  - Total"    Proj:RunResults[10]:PropTotalCarbon[1]  ={	RunResults[11]:PropTotalCarbon[1]  + RunResults[6]:PropTotalCarbon[1]  + RunResults[7]:PropTotalCarbon[1]  + RunResults[8]:PropTotalCarbon[1]  + RunResults[9]:PropTotalCarbon[1]  + RunResults[13]:PropTotalCarbon[1]  + RunResults[14]:PropTotalCarbon[1]    }

  ; Summary values
   "Calculate PropElecCarbon[1]-elec"  Proj:ResultSummary[1]:PropElecCarbon[1]   = {   if (CommunitySolarProjID > 0 .AND. IfValidAnd( CmntySlr_CO2 < 0 ))
                                                                                       then  RunResults[10]:PropElecCarbon[1] * CondFloorArea
                                                                                       else if (IfValidAnd( ResultSummary[1]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                           ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                             IfValidAnd( ResultSummary[1]:TargetDRtgPVMult > 0 ) ))
                                                                                       then  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                       else  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                       endif endif  }
   "Calculate PropFuelCarbon[1]-othr"  Proj:ResultSummary[1]:PropFuelCarbon[1]   = {   (CondFloorArea * (RunResults[10]:PropNatGasCarbon[1] + RunResults[10]:PropOtherCarbon[1]))  }
   "Calculate PropFinalCarbon[1]"      Proj:ResultSummary[1]:PropFinalCarbon[1]  = {   ResultSummary[1]:PropElecCarbon[1] + ResultSummary[1]:PropFuelCarbon[1]  }
   "Calculate PropExportCarbon[1]"     Proj:ResultSummary[1]:PropExportCarbon[1] = {   if (IfValidAnd( ResultSummary[1]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                           ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                             IfValidAnd( ResultSummary[1]:TargetDRtgPVMult > 0 ) ))
                                                                                       then  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                       else  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                       endif  }
   "Calculate PropSelfConsCarbon[1]"   Proj:ResultSummary[1]:PropSelfConsCarbon[1] ={  if (IfValidAnd( RunResults[14]:PropElecEnergy[1] != 0 )==0)
                                                                                       then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                             ResultSummary[1]:PropExportCarbon[1]
                                                                                       else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                             ResultSummary[1]:PropExportCarbon[1]
                                                                                       endif  }
   "Calculate PropNoSolFlxCarbon[1]"   Proj:ResultSummary[1]:PropNoSolFlxCarbon[1] ={  (RunResults[10]:PropTotalCarbon[1] - RunResults[13]:PropTotalCarbon[1] - RunResults[14]:PropTotalCarbon[1]) * CondFloorArea  }
   "Calculate PropExclExpCarbon[1]"    Proj:ResultSummary[1]:PropExclExpCarbon[1]  = {
         ResultSummary[1]:PropNoSolFlxCarbon[1] - ResultSummary[1]:PropSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
END
;*************************************************************************


;*************************************************************************  - SAC 10/5/17
RULELIST "CARes_PropFlexResults_Carbon" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)

  ; PV 8760s
   "Store negative PV 8760"    Proj:RunResults[13]:Action    ={   if (IfValidAnd( ResultSummary[1]:PFlxPVScaleFactor > 0 )==0) then UNCHANGED
                                                                  else  ApplyHourlyResultMultipliers( "NegPV", "none", -1.0, 1, "none", 0, 0, "PropFlex", "MtrElec",   "PV" )
                                                                  endif  }
   "Store scaled PV 8760"      Proj:RunResults[13]:Action    ={   if (IfValidAnd( ResultSummary[1]:PFlxPVScaleFactor > 0 )==0)
                                                                  then  ApplyHourlyResultMultipliers( "ScldPV", "none",                                1.0, 1, "none", 0, 0, "PropFlex", "MtrElec",   "PV" )
                                                                  else  ApplyHourlyResultMultipliers( "ScldPV", "none", ResultSummary[1]:PFlxPVScaleFactor, 1, "none", 0, 0, "PropFlex", "MtrElec",   "PV" )
                                                                  endif  }
;   "Store negative BT 8760"    Proj:RunResults[14]:Action    ={   if (IfValidAnd( RunResults[14]:PFlxElecEnergy > 0 )==0) then UNCHANGED
;                                                                  else  ApplyHourlyResultMultipliers_Neg( "NegBT", "none", 1.0, 1, "none", 0, 0, "PropFlex", "MtrElec",   "BT" )
;                                                                  endif  }

  ; Summary PropFlex values
      ; SAC 2/3/19 - split out Elec & Fuel portions of PFlx carbon
   "Calculate PFlxElecCarbon[1]"       Proj:ResultSummary[1]:PFlxElecCarbon[1]   = {   if (IfValidAnd( ResultSummary[1]:PFlxPVScaleFactor > 0 )==0)
                                                                                       then  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                       else  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                       endif  }
   "Calculate PFlxExportCarbon[1]"     Proj:ResultSummary[1]:PFlxExportCarbon[1] = {   if (IfValidAnd( ResultSummary[1]:PFlxPVScaleFactor > 0 )==0)
                                                                                       then  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                       else  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                       endif  }
   "Calculate PFlxSelfConsCarbon[1]"   Proj:ResultSummary[1]:PFlxSelfConsCarbon[1] ={  if (IfValidAnd( RunResults[14]:PFlxElecEnergy[1] != 0 )==0)
                                                                                       then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex", "MtrElec",   "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                             ResultSummary[1]:PFlxExportCarbon[1]
                                                                                       else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                             ResultSummary[1]:PFlxExportCarbon[1]
                                                                                       endif  }

  ; calc & add in non-elec PropFlex carbon
   "Add into PFlxFuelCarbon[1] - NatGas - SpcHt"    Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[1]:PFlxNatGasEnergy[1] ) < 0.0001) then  0
         else  (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrNatGas", "Htg", "HPBU", "Aux" ))  endif  }
   "Add into PFlxFuelCarbon[1] - Other  - SpcHt"    Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[1]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[1]:PFlxFuelCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrOther",  "Htg", "HPBU", "Aux" ))  endif  }
   "Add into PFlxFuelCarbon[1] - NatGas - SpcCl"    Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[2]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[1]:PFlxFuelCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrNatGas", "Clg" ))  endif  }
   "Add into PFlxFuelCarbon[1] - Other  - SpcCl"    Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[2]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[1]:PFlxFuelCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrOther",  "Clg" ))  endif  }
   "Add into PFlxFuelCarbon[1] - NatGas - WtrHt"    Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[5]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[1]:PFlxFuelCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrNatGas", "Dhw", "DhwBU" ))  endif  }
   "Add into PFlxFuelCarbon[1] - Other  - WtrHt"    Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[5]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[1]:PFlxFuelCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrOther",  "Dhw", "DhwBU" ))  endif  }
   "Add into PFlxFuelCarbon[1] - NatGas - AppCkg"   Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[7]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[1]:PFlxFuelCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ))  endif  }
   "Add into PFlxFuelCarbon[1] - Other  - AppCkg"   Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[7]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[1]:PFlxFuelCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ))  endif  }
   "Add into PFlxFuelCarbon[1] - NatGas - Plugs"    Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[8]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[1]:PFlxFuelCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrNatGas", "Rcp" ))  endif  }
   "Add into PFlxFuelCarbon[1] - Other  - Plugs"    Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[8]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[1]:PFlxFuelCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrOther",  "Rcp" ))  endif  }
   "Add into PFlxFuelCarbon[1] - NatGas - Ext"      Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[9]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[1]:PFlxFuelCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrNatGas", "Ext" ))  endif  }
   "Add into PFlxFuelCarbon[1] - Other  - Ext"      Proj:ResultSummary[1]:PFlxFuelCarbon[1] = {
         if (LocalRef( RunResults[9]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[1]:PFlxFuelCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex", "MtrOther",  "Ext" ))  endif  }
   "Add into PFlxFinalCarbon[1]"       Proj:ResultSummary[1]:PFlxFinalCarbon[1] = {
         ResultSummary[1]:PFlxElecCarbon[1] + ResultSummary[1]:PFlxFuelCarbon[1]  }

      ; SAC 2/3/19 - calculate Elec & Fuel portions of PFlx carbon
   "Calculate PFlxElecCarbon[2] - credit to Prop run"    Proj:ResultSummary[1]:PFlxElecCarbon[2]   =
      {  if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[1]:PropElecCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[1]:PFlxElecCarbon[1] ) > 0)
         then  (PropFlexFrac * (ResultSummary[1]:PFlxElecCarbon[1] - ResultSummary[1]:PropElecCarbon[1]))
         else  UNDEFINED  endif  }
   "Calculate PFlxFuelCarbon[2] - credit to Prop run"    Proj:ResultSummary[1]:PFlxFuelCarbon[2]   =
      {  if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[1]:PropFuelCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[1]:PFlxFuelCarbon[1] ) > 0)
         then  (PropFlexFrac * (ResultSummary[1]:PFlxFuelCarbon[1] - ResultSummary[1]:PropFuelCarbon[1]))
         else  UNDEFINED  endif  }
   "Calculate PFlxFinalCarbon[2] - credit to Prop run"   Proj:ResultSummary[1]:PFlxFinalCarbon[2]   =
      {  if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[1]:PropFinalCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[1]:PFlxFinalCarbon[1] ) > 0)
         then  (PropFlexFrac * (ResultSummary[1]:PFlxFinalCarbon[1] - ResultSummary[1]:PropFinalCarbon[1]))
         else  UNDEFINED  endif  }

  ; Adjust Proposed Summary results based on PropFlex values
   "Adjust PropFinalCarbon[1]"      Proj:ResultSummary[1]:PropFinalCarbon[1]  = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[1]:PropFinalCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[1]:PFlxFinalCarbon[1] ) > 0)
         then  ResultSummary[1]:PropFinalCarbon[1] +
                  (PropFlexFrac * (ResultSummary[1]:PFlxFinalCarbon[1] -
                                   ResultSummary[1]:PropFinalCarbon[1]))
         else  UNCHANGED  endif  }
   "Adjust PropExportCarbon[1]"     Proj:ResultSummary[1]:PropExportCarbon[1] = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[1]:PropExportCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[1]:PFlxExportCarbon[1] ) > 0)
         then  ResultSummary[1]:PropExportCarbon[1] +
                  (PropFlexFrac * (ResultSummary[1]:PFlxExportCarbon[1] -
                                   ResultSummary[1]:PropExportCarbon[1]))
         else  UNCHANGED  endif  }
   "Adjust PropSelfConsCarbon[1]"   Proj:ResultSummary[1]:PropSelfConsCarbon[1] = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[1]:PropSelfConsCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[1]:PFlxSelfConsCarbon[1] ) > 0)
         then  ResultSummary[1]:PropSelfConsCarbon[1] +
                  (PropFlexFrac * (ResultSummary[1]:PFlxSelfConsCarbon[1] -
                                   ResultSummary[1]:PropSelfConsCarbon[1]))
         else  UNCHANGED  endif  }

   "Set PropSelfConsCO2Str[1]"      Proj:ResultSummary[1]:PropSelfConsCO2Str[1] =          ; SAC 7/17/20 (CommunitySolar)
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[1]:PropSelfConsCarbon[1], 2 )  endif  }
   "Set PropExportCO2Str[1]"        Proj:ResultSummary[1]:PropExportCO2Str[1] =  
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[1]:PropExportCarbon[1], 2 )  endif  }
END
;*************************************************************************


; ;*************************************************************************  - SAC 10/5/17
; RULELIST "CARes_StandardResults_Carbon" 1 0 1 1
; ;*************************************************************************
; ;"testing" Proj:Action = {  MessageBox( "Copying ScldPV results from StdMixedFuel to Std models" )  }
; "dbg" Proj:Action = {  PostMessageToLog( "   eval rulelist 'CARes_StandardResults_Carbon' to create ScldPV results from StdMixedFuel & copy to Std model" )  }
;   ; PV 8760s
;    "Store scaled PV 8760 from StdMixedFuel run"   Proj:Action  = {
;          ApplyHourlyResultMultipliers( "ScldPV", "none", ValidOr( ResultSummary[1]:StdMixedFuelPVMlt, 1.0 ), "none", 0, 0, "StdMixedFuel", "MtrElec",   "PV" )  }
; 
;   ; copy StdMixedFuel ScldPV hourly results into Std design
;    "Copy StdMixedFuel ScldPV hourly results into Std design"  Proj:Action  = {
;          CopyHourlyResults( "StdMixedFuel", "MtrElec", "ScldPV", "Standard", "MtrElec", "ScldPV" )  }
; ;"testing" Proj:Action = {  MessageBox( "Sum of Scaled SMF PV results = %g", HourlyResultSum( "Standard", "MtrElec", "ScldPV" ) )  }
; 
;    "Remaining Standard Carbon results"    Proj:Action  = {  EvalRulelist( "CARes_StandardResults_Carbon_2" )  }
; END
; 
; ;*************************************************************************  - SAC 10/5/17
; RULELIST "CARes_StandardResults_Carbon_2" 1 0 1 1
; replaced rules creating ScldPV results from StdMixedFuel run (above) w/ rules to calc carbon results on PV system simulated in Std Design run - SAC 1/9/18
;*************************************************************************  - SAC 10/5/17
RULELIST "CARes_StandardResults_Carbon" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
   "Calculate Carbon - Elec   - SpcHt"    Proj:RunResults[1]:StdElecCarbon[1]    = {   if (LocalRef( RunResults[1]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "HtgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - SpcHt"    Proj:RunResults[1]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResults[1]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - SpcHt"    Proj:RunResults[1]:StdOtherCarbon[1]   = {   if (LocalRef( RunResults[1]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - SpcHt"    Proj:RunResults[1]:StdTotalCarbon[1]   = {   RunResults[1]:StdElecCarbon[1] + RunResults[1]:StdNatGasCarbon[1] + RunResults[1]:StdOtherCarbon[1]  }

  ; Space Cooling (& cooling fan)
   "Calculate Carbon - Elec   - SpcCl"    Proj:RunResults[2]:StdElecCarbon[1]    = {   if (LocalRef( RunResults[2]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ClgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Clg", "FanC" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - SpcCl"    Proj:RunResults[2]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResults[2]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - SpcCl"    Proj:RunResults[2]:StdOtherCarbon[1]   = {   if (LocalRef( RunResults[2]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - SpcCl"    Proj:RunResults[2]:StdTotalCarbon[1]   = {   RunResults[2]:StdElecCarbon[1] + RunResults[2]:StdNatGasCarbon[1] + RunResults[2]:StdOtherCarbon[1]  }

  ; IAQ Ventilation Fans
   "Calculate Carbon - Elec   - IAQVent"  Proj:RunResults[3]:StdElecCarbon[1]    = {   if (LocalRef( RunResults[3]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "IAQVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "FanV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - IAQVent"  Proj:RunResults[3]:StdNatGasCarbon[1]  = {   0  }
   "Calculate Carbon - Other  - IAQVent"  Proj:RunResults[3]:StdOtherCarbon[1]   = {   0  }
   "Calculate Carbon - Total  - IAQVent"  Proj:RunResults[3]:StdTotalCarbon[1]   = {   RunResults[3]:StdElecCarbon[1]  }

  ; Other HVAC (aux & misc fans)
   ; SAC 11/15/18 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
   ; SAC 1/27/19 - switched if check from "LocalRef( RunResults[4]:StdElecEnergy[1] )" to "HourlyResultSum( RunID, "MtrElec", "User1" )" since OthrHVAC would already have been re-allocated to SpcHt & SpcCl by now (tic #1053)
   "Calculate Carbon - Elec   - OthrHVAC" Proj:RunResults[4]:StdElecCarbon[1]    = {   if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "OHVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "User1" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - OthrHVAC" Proj:RunResults[4]:StdNatGasCarbon[1]  = {   0  }
   "Calculate Carbon - Other  - OthrHVAC" Proj:RunResults[4]:StdOtherCarbon[1]   = {   0  }
   "Calculate Carbon - Total  - OthrHVAC" Proj:RunResults[4]:StdTotalCarbon[1]   = {   RunResults[4]:StdElecCarbon[1]  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC Std Carbon use across SpcHt & SpcCl by fuel based on ratio of total carbon (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - StdCarbon"   Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResults[4]:StdTotalCarbon[1] != 0 )==0) then  0
                                                                        else if (IfValidAnd( RunResults[1]:StdTotalCarbon[1] == 0 ) .AND.
                                                                                 IfValidAnd( RunResults[2]:StdTotalCarbon[1] == 0 )) then  0.5
                                                                        else   ValidOr( RunResults[1]:StdTotalCarbon[1], 0 ) / 
                                                                              (ValidOr( RunResults[1]:StdTotalCarbon[1], 0 ) + ValidOr( RunResults[2]:StdTotalCarbon[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - SpcHt"		Proj:RunResults[1]:StdElecCarbon[1]	   = {   if (IfValidAnd( RunResults[4]:StdElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[1]:StdElecCarbon[1] + (RunResults[4]:StdElecCarbon[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcHt"		Proj:RunResults[1]:StdTotalCarbon[1]	= {	LocalRef( RunResults[1]:StdElecCarbon[1] ) + LocalRef( RunResults[1]:StdNatGasCarbon[1] ) + LocalRef( RunResults[1]:StdOtherCarbon[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - SpcCl"		Proj:RunResults[2]:StdElecCarbon[1]	   = {   if (IfValidAnd( RunResults[4]:StdElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[2]:StdElecCarbon[1] + (RunResults[4]:StdElecCarbon[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcCl"		Proj:RunResults[2]:StdTotalCarbon[1]	= {	LocalRef( RunResults[2]:StdElecCarbon[1] ) + LocalRef( RunResults[2]:StdNatGasCarbon[1] ) + LocalRef( RunResults[2]:StdOtherCarbon[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - OthrHVAC"	Proj:RunResults[4]:StdElecCarbon[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - OthrHVAC"	Proj:RunResults[4]:StdTotalCarbon[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC StdCarbon

  ; Water Heating
   "Calculate Carbon - Elec   - WtrHt"    Proj:RunResults[5]:StdElecCarbon[1]    = {   if (LocalRef( RunResults[5]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else if (CSEinclDHWMFL_EU)
			 			  																							then  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412 / CondFloorArea
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon - NatGas - WtrHt"    Proj:RunResults[5]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResults[5]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - WtrHt"    Proj:RunResults[5]:StdOtherCarbon[1]   = {   if (LocalRef( RunResults[5]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - WtrHt"    Proj:RunResults[5]:StdTotalCarbon[1]   = {   RunResults[5]:StdElecCarbon[1] + RunResults[5]:StdNatGasCarbon[1] + RunResults[5]:StdOtherCarbon[1]  }

  ; Inside Lighting
   "Calculate Carbon - Elec   - InsLtg"   Proj:RunResults[6]:StdElecCarbon[1]    = {   if (LocalRef( RunResults[6]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ILtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Lit" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - InsLtg"   Proj:RunResults[6]:StdNatGasCarbon[1]  = {   0  }
   "Calculate Carbon - Other  - InsLtg"   Proj:RunResults[6]:StdOtherCarbon[1]   = {   0  }
   "Calculate Carbon - Total  - InsLtg"   Proj:RunResults[6]:StdTotalCarbon[1]   = {   RunResults[6]:StdElecCarbon[1]  }

  ; Appliances & Cooking
   "Calculate Carbon - Elec   - AppCkg"   Proj:RunResults[7]:StdElecCarbon[1]    = {   if (LocalRef( RunResults[7]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "AppEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - AppCkg"   Proj:RunResults[7]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResults[7]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - AppCkg"   Proj:RunResults[7]:StdOtherCarbon[1]   = {   if (LocalRef( RunResults[7]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - AppCkg"   Proj:RunResults[7]:StdTotalCarbon[1]   = {   RunResults[7]:StdElecCarbon[1] + RunResults[7]:StdNatGasCarbon[1] + RunResults[7]:StdOtherCarbon[1]  }

  ; Plug Loads
   "Calculate Carbon - Elec   - Plugs"    Proj:RunResults[8]:StdElecCarbon[1]    = {   if (LocalRef( RunResults[8]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "RcpEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Rcp" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - Plugs"    Proj:RunResults[8]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResults[8]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - Plugs"    Proj:RunResults[8]:StdOtherCarbon[1]   = {   if (LocalRef( RunResults[8]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - Plugs"    Proj:RunResults[8]:StdTotalCarbon[1]   = {   RunResults[8]:StdElecCarbon[1] + RunResults[8]:StdNatGasCarbon[1] + RunResults[8]:StdOtherCarbon[1]  }

  ; Exterior
   "Calculate Carbon - Elec   - Ext"      Proj:RunResults[9]:StdElecCarbon[1]    = {   if (LocalRef( RunResults[9]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ExtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Ext" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - Ext"      Proj:RunResults[9]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResults[9]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - Ext"      Proj:RunResults[9]:StdOtherCarbon[1]   = {   if (LocalRef( RunResults[9]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - Ext"      Proj:RunResults[9]:StdTotalCarbon[1]   = {   RunResults[9]:StdElecCarbon[1] + RunResults[9]:StdNatGasCarbon[1] + RunResults[9]:StdOtherCarbon[1]  }

;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[1]:StdPVScaleFactor != 1 )==0 .OR.
;                               ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND. IfValidAnd( ResultSummary[1]:TargetDRtgPVMult > 0 ) )) then  UNCHANGED
;                           else  MessageBox( "%s PV scaling of %g", RunID, ResultSummary[1]:StdPVScaleFactor )  endif  }
  ; PV
   "Calculate Carbon - Elec   - PV"       Proj:RunResults[13]:StdElecCarbon[1]   = {   if (LocalRef( RunResults[13]:StdElecEnergy[1]   ) > -0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "PVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "PV" ) / 3.412 / CondFloorArea  endif  }
;                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "PVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "ScldPV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - PV"       Proj:RunResults[13]:StdNatGasCarbon[1] = {   0  }
   "Calculate Carbon - Other  - PV"       Proj:RunResults[13]:StdOtherCarbon[1]  = {   0  }
   "Calculate Carbon - Total  - PV"       Proj:RunResults[13]:StdTotalCarbon[1]  = {   RunResults[13]:StdElecCarbon[1]  }

  ; Battery
   "Calculate Carbon - Elec   - Battery"  Proj:RunResults[14]:StdElecCarbon[1]   = {   if (LocalRef( RunResults[14]:StdElecEnergy[1]   ) = 0) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "BTEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "BT" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - Battery"  Proj:RunResults[14]:StdNatGasCarbon[1] = {   0  }
   "Calculate Carbon - Other  - Battery"  Proj:RunResults[14]:StdOtherCarbon[1]  = {   0  }
   "Calculate Carbon - Total  - Battery"  Proj:RunResults[14]:StdTotalCarbon[1]  = {   RunResults[14]:StdElecCarbon[1]  }

  ; Compliance Total
   "Calculate Carbon - Elec   - Comp Ttl" Proj:RunResults[11]:StdElecCarbon[1]   = {	RunResults[1]:StdElecCarbon[1]   + RunResults[2]:StdElecCarbon[1]   + RunResults[3]:StdElecCarbon[1]   + RunResults[4]:StdElecCarbon[1]   + RunResults[5]:StdElecCarbon[1]     }
   "Calculate Carbon - NatGas - Comp Ttl" Proj:RunResults[11]:StdNatGasCarbon[1] = {	RunResults[1]:StdNatGasCarbon[1] + RunResults[2]:StdNatGasCarbon[1] + RunResults[3]:StdNatGasCarbon[1] + RunResults[4]:StdNatGasCarbon[1] + RunResults[5]:StdNatGasCarbon[1]   }
   "Calculate Carbon - Other  - Comp Ttl" Proj:RunResults[11]:StdOtherCarbon[1]  = {	RunResults[1]:StdOtherCarbon[1]  + RunResults[2]:StdOtherCarbon[1]  + RunResults[3]:StdOtherCarbon[1]  + RunResults[4]:StdOtherCarbon[1]  + RunResults[5]:StdOtherCarbon[1]    }
   "Calculate Carbon - TOTAL  - Comp Ttl" Proj:RunResults[11]:StdTotalCarbon[1]  = {	RunResults[1]:StdTotalCarbon[1]  + RunResults[2]:StdTotalCarbon[1]  + RunResults[3]:StdTotalCarbon[1]  + RunResults[4]:StdTotalCarbon[1]  + RunResults[5]:StdTotalCarbon[1]    }

  ; Total
   "Calculate Carbon - Elec   - Total"    Proj:RunResults[10]:StdElecCarbon[1]   = {	RunResults[11]:StdElecCarbon[1]   + RunResults[6]:StdElecCarbon[1]   + RunResults[7]:StdElecCarbon[1]   + RunResults[8]:StdElecCarbon[1]   + RunResults[9]:StdElecCarbon[1]   + RunResults[13]:StdElecCarbon[1]   + RunResults[14]:StdElecCarbon[1]     }
   "Calculate Carbon - NatGas - Total"    Proj:RunResults[10]:StdNatGasCarbon[1] = {	RunResults[11]:StdNatGasCarbon[1] + RunResults[6]:StdNatGasCarbon[1] + RunResults[7]:StdNatGasCarbon[1] + RunResults[8]:StdNatGasCarbon[1] + RunResults[9]:StdNatGasCarbon[1] + RunResults[13]:StdNatGasCarbon[1] + RunResults[14]:StdNatGasCarbon[1]   }
   "Calculate Carbon - Other  - Total"    Proj:RunResults[10]:StdOtherCarbon[1]  = {	RunResults[11]:StdOtherCarbon[1]  + RunResults[6]:StdOtherCarbon[1]  + RunResults[7]:StdOtherCarbon[1]  + RunResults[8]:StdOtherCarbon[1]  + RunResults[9]:StdOtherCarbon[1]  + RunResults[13]:StdOtherCarbon[1]  + RunResults[14]:StdOtherCarbon[1]    }
   "Calculate Carbon - TOTAL  - Total"    Proj:RunResults[10]:StdTotalCarbon[1]  = {	RunResults[11]:StdTotalCarbon[1]  + RunResults[6]:StdTotalCarbon[1]  + RunResults[7]:StdTotalCarbon[1]  + RunResults[8]:StdTotalCarbon[1]  + RunResults[9]:StdTotalCarbon[1]  + RunResults[13]:StdTotalCarbon[1]  + RunResults[14]:StdTotalCarbon[1]    }

  ; Summary values
;   "Calculate StdFinalCarbon[1]-elec"  Proj:ResultSummary[1]:StdFinalCarbon[1]   = {   (ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Tot", "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) +
;                                                                                       (CondFloorArea * (RunResults[10]:StdNatGasCarbon[1] + RunResults[10]:StdOtherCarbon[1]))  }
   "Calculate StdFinalCarbon[1]-elec"  Proj:ResultSummary[1]:StdFinalCarbon[1]   = {   CondFloorArea * RunResults[10]:StdTotalCarbon[1]  }
;   "Calculate StdExportCarbon[1]"      Proj:ResultSummary[1]:StdExportCarbon[1]  = {    -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Tot", "ScldPV" ) * Proj:CO2ElecTableMult / 3.412  }
   "Calculate StdExportCarbon[1]"      Proj:ResultSummary[1]:StdExportCarbon[1]  = {    -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412  }
;   "Calculate StdSelfConsCarbon[1]"    Proj:ResultSummary[1]:StdSelfConsCarbon[1] = {  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
   "Calculate StdSelfConsCarbon[1]"    Proj:ResultSummary[1]:StdSelfConsCarbon[1] = {  if (IfValidAnd( RunResults[14]:StdElecEnergy[1] != 0 )==0)
                                                                                       then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "PV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                             ResultSummary[1]:StdExportCarbon[1]
                                                                                       else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "PV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                             ResultSummary[1]:StdExportCarbon[1]
                                                                                       endif  }
   "Calculate StdNoSolFlxCarbon[1]"    Proj:ResultSummary[1]:StdNoSolFlxCarbon[1] = {  (RunResults[10]:StdTotalCarbon[1] - RunResults[13]:StdTotalCarbon[1] - RunResults[14]:StdTotalCarbon[1]) * CondFloorArea  }
   "Calculate StdExclExpCarbon[1]"     Proj:ResultSummary[1]:StdExclExpCarbon[1]  = {
         ResultSummary[1]:StdNoSolFlxCarbon[1] - ResultSummary[1]:StdSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
END
;*************************************************************************

;*************************************************************************  - SAC 1/26/18
RULELIST "CARes_DesignRatingResults_Carbon" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
   "Calculate Carbon - Elec   - SpcHt"    Proj:RunResults[1]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResults[1]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "HtgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - SpcHt"    Proj:RunResults[1]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResults[1]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - SpcHt"    Proj:RunResults[1]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResults[1]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - SpcHt"    Proj:RunResults[1]:DRtgTotalCarbon[1]   = {  RunResults[1]:DRtgElecCarbon[1] + RunResults[1]:DRtgNatGasCarbon[1] + RunResults[1]:DRtgOtherCarbon[1]  }

  ; Space Cooling (& cooling fan)
   "Calculate Carbon - Elec   - SpcCl"    Proj:RunResults[2]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResults[2]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ClgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Clg", "FanC" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - SpcCl"    Proj:RunResults[2]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResults[2]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - SpcCl"    Proj:RunResults[2]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResults[2]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - SpcCl"    Proj:RunResults[2]:DRtgTotalCarbon[1]   = {  RunResults[2]:DRtgElecCarbon[1] + RunResults[2]:DRtgNatGasCarbon[1] + RunResults[2]:DRtgOtherCarbon[1]  }

  ; IAQ Ventilation Fans
   "Calculate Carbon - Elec   - IAQVent"  Proj:RunResults[3]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResults[3]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "IAQVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "FanV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - IAQVent"  Proj:RunResults[3]:DRtgNatGasCarbon[1]  = {  0  }
   "Calculate Carbon - Other  - IAQVent"  Proj:RunResults[3]:DRtgOtherCarbon[1]   = {  0  }
   "Calculate Carbon - Total  - IAQVent"  Proj:RunResults[3]:DRtgTotalCarbon[1]   = {  RunResults[3]:DRtgElecCarbon[1]  }

  ; Other HVAC (aux & misc fans)
   ; SAC 11/15/18 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
   ; SAC 1/27/19 - switched if check from "LocalRef( RunResults[4]:DRtgElecEnergy[1] )" to "HourlyResultSum( RunID, "MtrElec", "User1" )" since OthrHVAC would already have been re-allocated to SpcHt & SpcCl by now (tic #1053)
   "Calculate Carbon - Elec   - OthrHVAC" Proj:RunResults[4]:DRtgElecCarbon[1]    = {  if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "OHVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "User1" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - OthrHVAC" Proj:RunResults[4]:DRtgNatGasCarbon[1]  = {  0  }
   "Calculate Carbon - Other  - OthrHVAC" Proj:RunResults[4]:DRtgOtherCarbon[1]   = {  0  }
   "Calculate Carbon - Total  - OthrHVAC" Proj:RunResults[4]:DRtgTotalCarbon[1]   = {  RunResults[4]:DRtgElecCarbon[1]  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC DRtg Carbon use across SpcHt & SpcCl by fuel based on ratio of total carbon (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - DRtgCarbon"  Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResults[4]:DRtgTotalCarbon[1] != 0 )==0) then  0
                                                                        else if (IfValidAnd( RunResults[1]:DRtgTotalCarbon[1] == 0 ) .AND.
                                                                                 IfValidAnd( RunResults[2]:DRtgTotalCarbon[1] == 0 )) then  0.5
                                                                        else   ValidOr( RunResults[1]:DRtgTotalCarbon[1], 0 ) / 
                                                                              (ValidOr( RunResults[1]:DRtgTotalCarbon[1], 0 ) + ValidOr( RunResults[2]:DRtgTotalCarbon[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - SpcHt"		Proj:RunResults[1]:DRtgElecCarbon[1]	= {   if (IfValidAnd( RunResults[4]:DRtgElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[1]:DRtgElecCarbon[1] + (RunResults[4]:DRtgElecCarbon[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcHt"		Proj:RunResults[1]:DRtgTotalCarbon[1]	= {	LocalRef( RunResults[1]:DRtgElecCarbon[1] ) + LocalRef( RunResults[1]:DRtgNatGasCarbon[1] ) + LocalRef( RunResults[1]:DRtgOtherCarbon[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - SpcCl"		Proj:RunResults[2]:DRtgElecCarbon[1]	= {   if (IfValidAnd( RunResults[4]:DRtgElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[2]:DRtgElecCarbon[1] + (RunResults[4]:DRtgElecCarbon[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcCl"		Proj:RunResults[2]:DRtgTotalCarbon[1]	= {	LocalRef( RunResults[2]:DRtgElecCarbon[1] ) + LocalRef( RunResults[2]:DRtgNatGasCarbon[1] ) + LocalRef( RunResults[2]:DRtgOtherCarbon[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - OthrHVAC"	Proj:RunResults[4]:DRtgElecCarbon[1]	= {	0  }
	"ZERO-OUT         - TOTAL  - OthrHVAC"	Proj:RunResults[4]:DRtgTotalCarbon[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC DRtgCarbon

  ; Water Heating
   "Calculate Carbon - Elec   - WtrHt"    Proj:RunResults[5]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResults[5]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else if (CSEinclDHWMFL_EU)
			 			  																							then  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412 / CondFloorArea 
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon - NatGas - WtrHt"    Proj:RunResults[5]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResults[5]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - WtrHt"    Proj:RunResults[5]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResults[5]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - WtrHt"    Proj:RunResults[5]:DRtgTotalCarbon[1]   = {  RunResults[5]:DRtgElecCarbon[1] + RunResults[5]:DRtgNatGasCarbon[1] + RunResults[5]:DRtgOtherCarbon[1]  }

  ; Inside Lighting
   "Calculate Carbon - Elec   - InsLtg"   Proj:RunResults[6]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResults[6]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ILtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Lit" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - InsLtg"   Proj:RunResults[6]:DRtgNatGasCarbon[1]  = {  0  }
   "Calculate Carbon - Other  - InsLtg"   Proj:RunResults[6]:DRtgOtherCarbon[1]   = {  0  }
   "Calculate Carbon - Total  - InsLtg"   Proj:RunResults[6]:DRtgTotalCarbon[1]   = {  RunResults[6]:DRtgElecCarbon[1]  }

  ; Appliances & Cooking
   "Calculate Carbon - Elec   - AppCkg"   Proj:RunResults[7]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResults[7]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "AppEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - AppCkg"   Proj:RunResults[7]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResults[7]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - AppCkg"   Proj:RunResults[7]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResults[7]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - AppCkg"   Proj:RunResults[7]:DRtgTotalCarbon[1]   = {  RunResults[7]:DRtgElecCarbon[1] + RunResults[7]:DRtgNatGasCarbon[1] + RunResults[7]:DRtgOtherCarbon[1]  }

  ; Plug Loads
   "Calculate Carbon - Elec   - Plugs"    Proj:RunResults[8]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResults[8]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "RcpEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Rcp" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - Plugs"    Proj:RunResults[8]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResults[8]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - Plugs"    Proj:RunResults[8]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResults[8]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - Plugs"    Proj:RunResults[8]:DRtgTotalCarbon[1]   = {  RunResults[8]:DRtgElecCarbon[1] + RunResults[8]:DRtgNatGasCarbon[1] + RunResults[8]:DRtgOtherCarbon[1]  }

  ; Exterior
   "Calculate Carbon - Elec   - Ext"      Proj:RunResults[9]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResults[9]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ExtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Ext" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - Ext"      Proj:RunResults[9]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResults[9]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                       else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon - Other  - Ext"      Proj:RunResults[9]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResults[9]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                       else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon - Total  - Ext"      Proj:RunResults[9]:DRtgTotalCarbon[1]   = {  RunResults[9]:DRtgElecCarbon[1] + RunResults[9]:DRtgNatGasCarbon[1] + RunResults[9]:DRtgOtherCarbon[1]  }

;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[1]:DRtgPVScaleFactor != 1 )==0 .OR.
;                               ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND. IfValidAnd( ResultSummary[1]:TargetDRtgPVMult > 0 ) )) then  UNCHANGED
;                           else  MessageBox( "%s PV scaling of %g", RunID, ResultSummary[1]:DRtgPVScaleFactor )  endif  }
  ; PV
   "Calculate Carbon - Elec   - PV"       Proj:RunResults[13]:DRtgElecCarbon[1]   = {  if (LocalRef( RunResults[13]:DRtgElecEnergy[1]   ) > -0.0001) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "PVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "PV" ) / 3.412 / CondFloorArea  endif  }
;                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "PVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "ScldPV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - PV"       Proj:RunResults[13]:DRtgNatGasCarbon[1] = {  0  }
   "Calculate Carbon - Other  - PV"       Proj:RunResults[13]:DRtgOtherCarbon[1]  = {  0  }
   "Calculate Carbon - Total  - PV"       Proj:RunResults[13]:DRtgTotalCarbon[1]  = {  RunResults[13]:DRtgElecCarbon[1]  }

  ; Battery
   "Calculate Carbon - Elec   - Battery"  Proj:RunResults[14]:DRtgElecCarbon[1]   = {  if (LocalRef( RunResults[14]:DRtgElecEnergy[1]   ) = 0) then  0
                                                                                       else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "BTEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "BT" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon - NatGas - Battery"  Proj:RunResults[14]:DRtgNatGasCarbon[1] = {  0  }
   "Calculate Carbon - Other  - Battery"  Proj:RunResults[14]:DRtgOtherCarbon[1]  = {  0  }
   "Calculate Carbon - Total  - Battery"  Proj:RunResults[14]:DRtgTotalCarbon[1]  = {  RunResults[14]:DRtgElecCarbon[1]  }

  ; Compliance Total
   "Calculate Carbon - Elec   - Comp Ttl" Proj:RunResults[11]:DRtgElecCarbon[1]   = {	RunResults[1]:DRtgElecCarbon[1]   + RunResults[2]:DRtgElecCarbon[1]   + RunResults[3]:DRtgElecCarbon[1]   + RunResults[4]:DRtgElecCarbon[1]   + RunResults[5]:DRtgElecCarbon[1]     }
   "Calculate Carbon - NatGas - Comp Ttl" Proj:RunResults[11]:DRtgNatGasCarbon[1] = {	RunResults[1]:DRtgNatGasCarbon[1] + RunResults[2]:DRtgNatGasCarbon[1] + RunResults[3]:DRtgNatGasCarbon[1] + RunResults[4]:DRtgNatGasCarbon[1] + RunResults[5]:DRtgNatGasCarbon[1]   }
   "Calculate Carbon - Other  - Comp Ttl" Proj:RunResults[11]:DRtgOtherCarbon[1]  = {	RunResults[1]:DRtgOtherCarbon[1]  + RunResults[2]:DRtgOtherCarbon[1]  + RunResults[3]:DRtgOtherCarbon[1]  + RunResults[4]:DRtgOtherCarbon[1]  + RunResults[5]:DRtgOtherCarbon[1]    }
   "Calculate Carbon - TOTAL  - Comp Ttl" Proj:RunResults[11]:DRtgTotalCarbon[1]  = {	RunResults[1]:DRtgTotalCarbon[1]  + RunResults[2]:DRtgTotalCarbon[1]  + RunResults[3]:DRtgTotalCarbon[1]  + RunResults[4]:DRtgTotalCarbon[1]  + RunResults[5]:DRtgTotalCarbon[1]    }

  ; Total
   "Calculate Carbon - Elec   - Total"    Proj:RunResults[10]:DRtgElecCarbon[1]   = {	RunResults[11]:DRtgElecCarbon[1]   + RunResults[6]:DRtgElecCarbon[1]   + RunResults[7]:DRtgElecCarbon[1]   + RunResults[8]:DRtgElecCarbon[1]   + RunResults[9]:DRtgElecCarbon[1]   + RunResults[13]:DRtgElecCarbon[1]   + RunResults[14]:DRtgElecCarbon[1]     }
   "Calculate Carbon - NatGas - Total"    Proj:RunResults[10]:DRtgNatGasCarbon[1] = {	RunResults[11]:DRtgNatGasCarbon[1] + RunResults[6]:DRtgNatGasCarbon[1] + RunResults[7]:DRtgNatGasCarbon[1] + RunResults[8]:DRtgNatGasCarbon[1] + RunResults[9]:DRtgNatGasCarbon[1] + RunResults[13]:DRtgNatGasCarbon[1] + RunResults[14]:DRtgNatGasCarbon[1]   }
   "Calculate Carbon - Other  - Total"    Proj:RunResults[10]:DRtgOtherCarbon[1]  = {	RunResults[11]:DRtgOtherCarbon[1]  + RunResults[6]:DRtgOtherCarbon[1]  + RunResults[7]:DRtgOtherCarbon[1]  + RunResults[8]:DRtgOtherCarbon[1]  + RunResults[9]:DRtgOtherCarbon[1]  + RunResults[13]:DRtgOtherCarbon[1]  + RunResults[14]:DRtgOtherCarbon[1]    }
   "Calculate Carbon - TOTAL  - Total"    Proj:RunResults[10]:DRtgTotalCarbon[1]  = {	RunResults[11]:DRtgTotalCarbon[1]  + RunResults[6]:DRtgTotalCarbon[1]  + RunResults[7]:DRtgTotalCarbon[1]  + RunResults[8]:DRtgTotalCarbon[1]  + RunResults[9]:DRtgTotalCarbon[1]  + RunResults[13]:DRtgTotalCarbon[1]  + RunResults[14]:DRtgTotalCarbon[1]    }

  ; Summary values
;   "Calculate DRtgFinalCarbon[1]-elec" Proj:ResultSummary[1]:DRtgFinalCarbon[1]   = {  (ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Tot", "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) +
;                                                                                       (CondFloorArea * (RunResults[10]:DRtgNatGasCarbon[1] + RunResults[10]:DRtgOtherCarbon[1]))  }
   "Calculate DRtgFinalCarbon[1]-elec" Proj:ResultSummary[1]:DRtgFinalCarbon[1]   = {  CondFloorArea * RunResults[10]:DRtgTotalCarbon[1]  }
;   "Calculate DRtgExportCarbon[1]"     Proj:ResultSummary[1]:DRtgExportCarbon[1]  = {   -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Tot", "ScldPV" ) * Proj:CO2ElecTableMult / 3.412  }
   "Calculate DRtgExportCarbon[1]"     Proj:ResultSummary[1]:DRtgExportCarbon[1]  = {   -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412  }
;   "Calculate DRtgSelfConsCarbon[1]"   Proj:ResultSummary[1]:DRtgSelfConsCarbon[1] = { (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
   "Calculate DRtgSelfConsCarbon[1]"   Proj:ResultSummary[1]:DRtgSelfConsCarbon[1] = { if (IfValidAnd( RunResults[14]:DRtgElecEnergy[1] != 0 )==0)
                                                                                       then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "PV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                             ResultSummary[1]:DRtgExportCarbon[1]
                                                                                       else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "PV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                             ResultSummary[1]:DRtgExportCarbon[1]
                                                                                       endif  }
   "Calculate DRtgNoSolFlxCarbon[1]"   Proj:ResultSummary[1]:DRtgNoSolFlxCarbon[1] = { (RunResults[10]:DRtgTotalCarbon[1] - RunResults[13]:DRtgTotalCarbon[1] - RunResults[14]:DRtgTotalCarbon[1]) * CondFloorArea  }
   "Calculate DRtgExclExpCarbon[1]"    Proj:ResultSummary[1]:DRtgExclExpCarbon[1]  = {
         ResultSummary[1]:DRtgNoSolFlxCarbon[1] - ResultSummary[1]:DRtgSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
END
;*************************************************************************


;*************************************************************************  - SAC 10/6/17
RULELIST "CARes_RoundResults_Carbon" 1 0 1 1
;*************************************************************************

   "Round PropFinalCarbon[1]"       Proj:ResultSummary[1]:PropFinalCarbon[1]     = {
         if (LocalStatus( ResultSummary[1]:PropFinalCarbon[1] ) < 1) then  UNCHANGED
         else if (ResultSummary[1]:PropFinalCarbon[1] < 0)
         then  int( (100 * ResultSummary[1]:PropFinalCarbon[1]) - 0.5 ) / 100
         else  int( (100 * ResultSummary[1]:PropFinalCarbon[1]) + 0.5 ) / 100  endif endif  }
   "Round PropExportCarbon[1]"      Proj:ResultSummary[1]:PropExportCarbon[1]    = {
         if (LocalStatus( ResultSummary[1]:PropExportCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[1]:PropExportCarbon[1]) + 0.5 ) / 100  endif  }
   "Round PropSelfConsCarbon[1]"    Proj:ResultSummary[1]:PropSelfConsCarbon[1]  = {
         if (LocalStatus( ResultSummary[1]:PropSelfConsCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[1]:PropSelfConsCarbon[1]) + 0.5 ) / 100  endif  }
   "Round PropNoSolFlxCarbon[1]"    Proj:ResultSummary[1]:PropNoSolFlxCarbon[1]  = {
         if (LocalStatus( ResultSummary[1]:PropNoSolFlxCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[1]:PropNoSolFlxCarbon[1]) + 0.5 ) / 100  endif  }
   "Adjust PropExclExpCarbon[1]"    Proj:ResultSummary[1]:PropExclExpCarbon[1]   = {
         ResultSummary[1]:PropNoSolFlxCarbon[1] - ResultSummary[1]:PropSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
   "Set PropSelfConsCO2Str[1]"      Proj:ResultSummary[1]:PropSelfConsCO2Str[1] =          ; SAC 7/17/20 (CommunitySolar)
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[1]:PropSelfConsCarbon[1], 2 )  endif  }
   "Set PropExportCO2Str[1]"        Proj:ResultSummary[1]:PropExportCO2Str[1] =  
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[1]:PropExportCarbon[1], 2 )  endif  }
   "Set PropExclExpCO2Str[1]"       Proj:ResultSummary[1]:PropExclExpCO2Str[1] =  
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[1]:PropExclExpCarbon[1], 2 )  endif  }

   "Round StdFinalCarbon[1]"        Proj:ResultSummary[1]:StdFinalCarbon[1]      = {
         if (LocalStatus( ResultSummary[1]:StdFinalCarbon[1] ) < 1) then  UNCHANGED
         else if (ResultSummary[1]:StdFinalCarbon[1] < 0)
         then  int( (100 * ResultSummary[1]:StdFinalCarbon[1]) - 0.5 ) / 100
         else  int( (100 * ResultSummary[1]:StdFinalCarbon[1]) + 0.5 ) / 100  endif endif  }
   "Round StdExportCarbon[1]"       Proj:ResultSummary[1]:StdExportCarbon[1]     = {
         if (LocalStatus( ResultSummary[1]:StdExportCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[1]:StdExportCarbon[1]) + 0.5 ) / 100  endif  }
   "Round StdSelfConsCarbon[1]"     Proj:ResultSummary[1]:StdSelfConsCarbon[1]   = {
         if (LocalStatus( ResultSummary[1]:StdSelfConsCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[1]:StdSelfConsCarbon[1]) + 0.5 ) / 100  endif  }
   "Round StdNoSolFlxCarbon[1]"     Proj:ResultSummary[1]:StdNoSolFlxCarbon[1]   = {
         if (LocalStatus( ResultSummary[1]:StdNoSolFlxCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[1]:StdNoSolFlxCarbon[1]) + 0.5 ) / 100  endif  }
   "Adjust StdExclExpCarbon[1]"     Proj:ResultSummary[1]:StdExclExpCarbon[1]    = {
         ResultSummary[1]:StdNoSolFlxCarbon[1] - ResultSummary[1]:StdSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
END
;*************************************************************************

;*************************************************************************  - SAC 1/15/18
RULELIST "CARes_RoundResults_ProposedCarbon_NESW" 1 0 1 1
;*************************************************************************
   ; NORTH orientation
   "Round PropFinalCarbon[1]-N"     Proj:ResultSummary[2]:PropFinalCarbon[1]     = {
         if (LocalStatus( ResultSummary[2]:PropFinalCarbon[1] ) < 1) then  UNCHANGED
         else if (ResultSummary[2]:PropFinalCarbon[1] < 0)
         then  int( (100 * ResultSummary[2]:PropFinalCarbon[1]) - 0.5 ) / 100
         else  int( (100 * ResultSummary[2]:PropFinalCarbon[1]) + 0.5 ) / 100  endif endif  }
   "Round PropExportCarbon[1]-N"    Proj:ResultSummary[2]:PropExportCarbon[1]    = {
         if (LocalStatus( ResultSummary[2]:PropExportCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[2]:PropExportCarbon[1]) + 0.5 ) / 100  endif  }
   "Round PropSelfConsCarbon[1]-N"  Proj:ResultSummary[2]:PropSelfConsCarbon[1]  = {
         if (LocalStatus( ResultSummary[2]:PropSelfConsCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[2]:PropSelfConsCarbon[1]) + 0.5 ) / 100  endif  }
   "Round PropNoSolFlxCarbon[1]-N"  Proj:ResultSummary[2]:PropNoSolFlxCarbon[1]  = {
         if (LocalStatus( ResultSummary[2]:PropNoSolFlxCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[2]:PropNoSolFlxCarbon[1]) + 0.5 ) / 100  endif  }
   "Adjust PropExclExpCarbon[1]-N"  Proj:ResultSummary[2]:PropExclExpCarbon[1]   = {
         ResultSummary[2]:PropNoSolFlxCarbon[1] - ResultSummary[2]:PropSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
   ; EAST orientation
   "Round PropFinalCarbon[1]-E"     Proj:ResultSummary[3]:PropFinalCarbon[1]     = {
         if (LocalStatus( ResultSummary[3]:PropFinalCarbon[1] ) < 1) then  UNCHANGED
         else if (ResultSummary[3]:PropFinalCarbon[1] < 0)
         then  int( (100 * ResultSummary[3]:PropFinalCarbon[1]) - 0.5 ) / 100
         else  int( (100 * ResultSummary[3]:PropFinalCarbon[1]) + 0.5 ) / 100  endif endif  }
   "Round PropExportCarbon[1]-E"    Proj:ResultSummary[3]:PropExportCarbon[1]    = {
         if (LocalStatus( ResultSummary[3]:PropExportCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[3]:PropExportCarbon[1]) + 0.5 ) / 100  endif  }
   "Round PropSelfConsCarbon[1]-E"  Proj:ResultSummary[3]:PropSelfConsCarbon[1]  = {
         if (LocalStatus( ResultSummary[3]:PropSelfConsCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[3]:PropSelfConsCarbon[1]) + 0.5 ) / 100  endif  }
   "Round PropNoSolFlxCarbon[1]-E"  Proj:ResultSummary[3]:PropNoSolFlxCarbon[1]  = {
         if (LocalStatus( ResultSummary[3]:PropNoSolFlxCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[3]:PropNoSolFlxCarbon[1]) + 0.5 ) / 100  endif  }
   "Adjust PropExclExpCarbon[1]-E"  Proj:ResultSummary[3]:PropExclExpCarbon[1]   = {
         ResultSummary[3]:PropNoSolFlxCarbon[1] - ResultSummary[3]:PropSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
   ; SOUTH orientation
   "Round PropFinalCarbon[1]-S"     Proj:ResultSummary[4]:PropFinalCarbon[1]     = {
         if (LocalStatus( ResultSummary[4]:PropFinalCarbon[1] ) < 1) then  UNCHANGED
         else if (ResultSummary[4]:PropFinalCarbon[1] < 0)
         then  int( (100 * ResultSummary[4]:PropFinalCarbon[1]) - 0.5 ) / 100
         else  int( (100 * ResultSummary[4]:PropFinalCarbon[1]) + 0.5 ) / 100  endif endif  }
   "Round PropExportCarbon[1]-S"    Proj:ResultSummary[4]:PropExportCarbon[1]    = {
         if (LocalStatus( ResultSummary[4]:PropExportCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[4]:PropExportCarbon[1]) + 0.5 ) / 100  endif  }
   "Round PropSelfConsCarbon[1]-S"  Proj:ResultSummary[4]:PropSelfConsCarbon[1]  = {
         if (LocalStatus( ResultSummary[4]:PropSelfConsCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[4]:PropSelfConsCarbon[1]) + 0.5 ) / 100  endif  }
   "Round PropNoSolFlxCarbon[1]-S"  Proj:ResultSummary[4]:PropNoSolFlxCarbon[1]  = {
         if (LocalStatus( ResultSummary[4]:PropNoSolFlxCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[4]:PropNoSolFlxCarbon[1]) + 0.5 ) / 100  endif  }
   "Adjust PropExclExpCarbon[1]-S"  Proj:ResultSummary[4]:PropExclExpCarbon[1]   = {
         ResultSummary[4]:PropNoSolFlxCarbon[1] - ResultSummary[4]:PropSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
   ; WEST orientation
   "Round PropFinalCarbon[1]-W"     Proj:ResultSummary[5]:PropFinalCarbon[1]     = {
         if (LocalStatus( ResultSummary[5]:PropFinalCarbon[1] ) < 1) then  UNCHANGED
         else if (ResultSummary[5]:PropFinalCarbon[1] < 0)
         then  int( (100 * ResultSummary[5]:PropFinalCarbon[1]) - 0.5 ) / 100
         else  int( (100 * ResultSummary[5]:PropFinalCarbon[1]) + 0.5 ) / 100  endif endif  }
   "Round PropExportCarbon[1]-W"    Proj:ResultSummary[5]:PropExportCarbon[1]    = {
         if (LocalStatus( ResultSummary[5]:PropExportCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[5]:PropExportCarbon[1]) + 0.5 ) / 100  endif  }
   "Round PropSelfConsCarbon[1]-W"  Proj:ResultSummary[5]:PropSelfConsCarbon[1]  = {
         if (LocalStatus( ResultSummary[5]:PropSelfConsCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[5]:PropSelfConsCarbon[1]) + 0.5 ) / 100  endif  }
   "Round PropNoSolFlxCarbon[1]-W"  Proj:ResultSummary[5]:PropNoSolFlxCarbon[1]  = {
         if (LocalStatus( ResultSummary[5]:PropNoSolFlxCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[5]:PropNoSolFlxCarbon[1]) + 0.5 ) / 100  endif  }
   "Adjust PropExclExpCarbon[1]-W"  Proj:ResultSummary[5]:PropExclExpCarbon[1]   = {
         ResultSummary[5]:PropNoSolFlxCarbon[1] - ResultSummary[5]:PropSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)

   "Set PropSelfConsCO2Str[1]-N"  Proj:ResultSummary[2]:PropSelfConsCO2Str[1]  =          ; SAC 7/17/20 (CommunitySolar)
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[2]:PropSelfConsCarbon[1], 2 )  endif  }
   "Set PropSelfConsCO2Str[1]-E"  Proj:ResultSummary[3]:PropSelfConsCO2Str[1]  =
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[3]:PropSelfConsCarbon[1], 2 )  endif  }
   "Set PropSelfConsCO2Str[1]-S"  Proj:ResultSummary[4]:PropSelfConsCO2Str[1]  =
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[4]:PropSelfConsCarbon[1], 2 )  endif  }
   "Set PropSelfConsCO2Str[1]-W"  Proj:ResultSummary[5]:PropSelfConsCO2Str[1]  =
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[5]:PropSelfConsCarbon[1], 2 )  endif  }

   "Set PropExportCO2Str[1]-N"  Proj:ResultSummary[2]:PropExportCO2Str[1]  =          ; SAC 7/17/20 (CommunitySolar)
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[2]:PropExportCarbon[1], 2 )  endif  }
   "Set PropExportCO2Str[1]-E"  Proj:ResultSummary[3]:PropExportCO2Str[1]  =
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[3]:PropExportCarbon[1], 2 )  endif  }
   "Set PropExportCO2Str[1]-S"  Proj:ResultSummary[4]:PropExportCO2Str[1]  =
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[4]:PropExportCarbon[1], 2 )  endif  }
   "Set PropExportCO2Str[1]-W"  Proj:ResultSummary[5]:PropExportCO2Str[1]  =
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[5]:PropExportCarbon[1], 2 )  endif  }

   "Set PropExclExpCO2Str[1]-N"  Proj:ResultSummary[2]:PropExclExpCO2Str[1]  =          ; SAC 7/17/20 (CommunitySolar)
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[2]:PropExclExpCarbon[1], 2 )  endif  }
   "Set PropExclExpCO2Str[1]-E"  Proj:ResultSummary[3]:PropExclExpCO2Str[1]  =
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[3]:PropExclExpCarbon[1], 2 )  endif  }
   "Set PropExclExpCO2Str[1]-S"  Proj:ResultSummary[4]:PropExclExpCO2Str[1]  =
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[4]:PropExclExpCarbon[1], 2 )  endif  }
   "Set PropExclExpCO2Str[1]-W"  Proj:ResultSummary[5]:PropExclExpCO2Str[1]  =
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[5]:PropExclExpCarbon[1], 2 )  endif  }
END
;*************************************************************************


;*************************************************************************  - SAC 10/7/17
RULELIST "CARes_ProposedResults_Carbon_N" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
   "Calculate Carbon-N - Elec   - SpcHt"    Proj:RunResultsN[1]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsN[1]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "HtgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - SpcHt"    Proj:RunResultsN[1]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsN[1]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - SpcHt"    Proj:RunResultsN[1]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsN[1]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - SpcHt"    Proj:RunResultsN[1]:PropTotalCarbon[1]  = {   RunResultsN[1]:PropElecCarbon[1] + RunResultsN[1]:PropNatGasCarbon[1] + RunResultsN[1]:PropOtherCarbon[1]  }

  ; Space Cooling (& cooling fan)
   "Calculate Carbon-N - Elec   - SpcCl"    Proj:RunResultsN[2]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsN[2]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ClgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Clg", "FanC" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - SpcCl"    Proj:RunResultsN[2]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsN[2]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - SpcCl"    Proj:RunResultsN[2]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsN[2]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - SpcCl"    Proj:RunResultsN[2]:PropTotalCarbon[1]  = {   RunResultsN[2]:PropElecCarbon[1] + RunResultsN[2]:PropNatGasCarbon[1] + RunResultsN[2]:PropOtherCarbon[1]  }

  ; IAQ Ventilation Fans
   "Calculate Carbon-N - Elec   - IAQVent"  Proj:RunResultsN[3]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsN[3]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "IAQVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "FanV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - IAQVent"  Proj:RunResultsN[3]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-N - Other  - IAQVent"  Proj:RunResultsN[3]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-N - Total  - IAQVent"  Proj:RunResultsN[3]:PropTotalCarbon[1]  = {   RunResultsN[3]:PropElecCarbon[1]  }

  ; Other HVAC (aux & misc fans)
   ; SAC 11/15/18 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
   ; SAC 1/27/19 - switched if check from "LocalRef( RunResultsN[4]:PropElecEnergy[1] )" to "HourlyResultSum( RunID, "MtrElec", "User1" )" since OthrHVAC would already have been re-allocated to SpcHt & SpcCl by now (tic #1053)
   "Calculate Carbon-N - Elec   - OthrHVAC" Proj:RunResultsN[4]:PropElecCarbon[1]   = {   if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "OHVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "User1" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - OthrHVAC" Proj:RunResultsN[4]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-N - Other  - OthrHVAC" Proj:RunResultsN[4]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-N - Total  - OthrHVAC" Proj:RunResultsN[4]:PropTotalCarbon[1]  = {   RunResultsN[4]:PropElecCarbon[1]  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC N-Prop Carbon use across SpcHt & SpcCl by fuel based on ratio of total carbon (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - N-PropCarbon"   Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsN[4]:PropTotalCarbon[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsN[1]:PropTotalCarbon[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsN[2]:PropTotalCarbon[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsN[1]:PropTotalCarbon[1], 0 ) / 
                                                                                 (ValidOr( RunResultsN[1]:PropTotalCarbon[1], 0 ) + ValidOr( RunResultsN[2]:PropTotalCarbon[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - N-SpcHt"		Proj:RunResultsN[1]:PropElecCarbon[1]	= {   if (IfValidAnd( RunResultsN[4]:PropElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsN[1]:PropElecCarbon[1] + (RunResultsN[4]:PropElecCarbon[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcHt"		Proj:RunResultsN[1]:PropTotalCarbon[1]	= {	LocalRef( RunResultsN[1]:PropElecCarbon[1] ) + LocalRef( RunResultsN[1]:PropNatGasCarbon[1] ) + LocalRef( RunResultsN[1]:PropOtherCarbon[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - N-SpcCl"		Proj:RunResultsN[2]:PropElecCarbon[1]	= {   if (IfValidAnd( RunResultsN[4]:PropElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsN[2]:PropElecCarbon[1] + (RunResultsN[4]:PropElecCarbon[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcCl"		Proj:RunResultsN[2]:PropTotalCarbon[1]	= {	LocalRef( RunResultsN[2]:PropElecCarbon[1] ) + LocalRef( RunResultsN[2]:PropNatGasCarbon[1] ) + LocalRef( RunResultsN[2]:PropOtherCarbon[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - N-OthrHVAC"	Proj:RunResultsN[4]:PropElecCarbon[1]	= {	0  }
	"ZERO-OUT         - TOTAL  - N-OthrHVAC"	Proj:RunResultsN[4]:PropTotalCarbon[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC PropCarbon

  ; Water Heating
   "Calculate Carbon-N - Elec   - WtrHt"    Proj:RunResultsN[5]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsN[5]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else if (CSEinclDHWMFL_EU)
			 			  																							   then  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412 / CondFloorArea
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon-N - NatGas - WtrHt"    Proj:RunResultsN[5]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsN[5]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - WtrHt"    Proj:RunResultsN[5]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsN[5]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - WtrHt"    Proj:RunResultsN[5]:PropTotalCarbon[1]  = {   RunResultsN[5]:PropElecCarbon[1] + RunResultsN[5]:PropNatGasCarbon[1] + RunResultsN[5]:PropOtherCarbon[1]  }

  ; Inside Lighting
   "Calculate Carbon-N - Elec   - InsLtg"   Proj:RunResultsN[6]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsN[6]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ILtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Lit" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - InsLtg"   Proj:RunResultsN[6]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-N - Other  - InsLtg"   Proj:RunResultsN[6]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-N - Total  - InsLtg"   Proj:RunResultsN[6]:PropTotalCarbon[1]  = {   RunResultsN[6]:PropElecCarbon[1]  }

  ; Appliances & Cooking
   "Calculate Carbon-N - Elec   - AppCkg"   Proj:RunResultsN[7]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsN[7]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "AppEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - AppCkg"   Proj:RunResultsN[7]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsN[7]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - AppCkg"   Proj:RunResultsN[7]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsN[7]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - AppCkg"   Proj:RunResultsN[7]:PropTotalCarbon[1]  = {   RunResultsN[7]:PropElecCarbon[1] + RunResultsN[7]:PropNatGasCarbon[1] + RunResultsN[7]:PropOtherCarbon[1]  }

  ; Plug Loads
   "Calculate Carbon-N - Elec   - Plugs"    Proj:RunResultsN[8]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsN[8]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "RcpEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Rcp" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - Plugs"    Proj:RunResultsN[8]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsN[8]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - Plugs"    Proj:RunResultsN[8]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsN[8]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - Plugs"    Proj:RunResultsN[8]:PropTotalCarbon[1]  = {   RunResultsN[8]:PropElecCarbon[1] + RunResultsN[8]:PropNatGasCarbon[1] + RunResultsN[8]:PropOtherCarbon[1]  }

  ; Exterior
   "Calculate Carbon-N - Elec   - Ext"      Proj:RunResultsN[9]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsN[9]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ExtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Ext" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - Ext"      Proj:RunResultsN[9]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsN[9]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - Ext"      Proj:RunResultsN[9]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsN[9]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed", "MtrOther",  "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - Ext"      Proj:RunResultsN[9]:PropTotalCarbon[1]  = {   RunResultsN[9]:PropElecCarbon[1] + RunResultsN[9]:PropNatGasCarbon[1] + RunResultsN[9]:PropOtherCarbon[1]  }

;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[2]:PropPVScaleFactor > 0 )==0) then  MessageBox( "RunID: %s, PropPVScaleFactor undefined", "Proposed" )
;                           else  MessageBox( "RunID: %s, ResultSummary[2]:PropPVScaleFactor = %g", RunID, ResultSummary[2]:PropPVScaleFactor )  endif  }
;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[2]:TargetDRtgPVMult > 0 )==0) then  MessageBox( "RunID: %s, TargetDRtgPVMult undefined", RunID )
;                           else  MessageBox( "RunID: %s, ResultSummary[2]:TargetDRtgPVMult = %g", RunID, ResultSummary[2]:TargetDRtgPVMult )  endif  }
;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[2]:PropPVScaleFactor != 1 )==0 .OR.
;                               ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND. IfValidAnd( ResultSummary[2]:TargetDRtgPVMult > 0 ) )) then  UNCHANGED
;                           else  MessageBox( "%s PV scaling of %g", RunID, ResultSummary[2]:PropPVScaleFactor )  endif  }
  ; PV
   "Store negative PV 8760-N"               Proj:RunResultsN[13]:Action              ={   if (IfValidAnd( ResultSummary[2]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[2]:TargetDRtgPVMult > 0 ) )) then UNCHANGED
                                                                                          else  ApplyHourlyResultMultipliers( "NegPV", "none", -1.0, 1, "none", 0, 0, "Proposed", "MtrElec",   "PV" )
                                                                                          endif  }
   "Store scaled PV 8760-N"                 Proj:RunResultsN[13]:Action              ={   if (IfValidAnd( ResultSummary[2]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[2]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  ApplyHourlyResultMultipliers( "ScldPV", "none",                                1.0, 1, "none", 0, 0, "Proposed", "MtrElec",   "PV" )
                                                                                          else  ApplyHourlyResultMultipliers( "ScldPV", "none", ResultSummary[2]:PropPVScaleFactor, 1, "none", 0, 0, "Proposed", "MtrElec",   "PV" )
                                                                                          endif  }
   "Calculate Carbon-N - Elec   - PV"       Proj:RunResultsN[13]:PropElecCarbon[1]   ={   if (LocalRef( RunResultsN[13]:PropElecEnergy[1]   ) > -0.0001) then  0
                                                                                          else if (CommunitySolarProjID > 0 .AND. IfValidAnd( CmntySlr_CO2 < 0 )) then  CmntySlr_CO2 * PVWDCSizeMultiplier[1] / 1000 / CondFloorArea
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "PVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "ScldPV" ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon-N - NatGas - PV"       Proj:RunResultsN[13]:PropNatGasCarbon[1] ={   0  }
   "Calculate Carbon-N - Other  - PV"       Proj:RunResultsN[13]:PropOtherCarbon[1]  ={   0  }
   "Calculate Carbon-N - Total  - PV"       Proj:RunResultsN[13]:PropTotalCarbon[1]  ={   RunResultsN[13]:PropElecCarbon[1]  }

  ; Battery
;   "Store negative BT 8760-N"    Proj:RunResultsN[14]:Action    ={   if (IfValidAnd( RunResultsN[14]:PropElecEnergy[1] != 0 )==0) then UNCHANGED
;                                                                     else  ApplyHourlyResultMultipliers_Neg( "NegBT", "none", 1.0, 1, "none", 0, 0, "Proposed", "MtrElec",   "BT" )  endif  }
   "Calculate Carbon-N - Elec   - Battery"  Proj:RunResultsN[14]:PropElecCarbon[1]   ={   if (LocalRef( RunResultsN[14]:PropElecEnergy[1]   ) = 0) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "BTEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "BT" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - Battery"  Proj:RunResultsN[14]:PropNatGasCarbon[1] ={   0  }
   "Calculate Carbon-N - Other  - Battery"  Proj:RunResultsN[14]:PropOtherCarbon[1]  ={   0  }
   "Calculate Carbon-N - Total  - Battery"  Proj:RunResultsN[14]:PropTotalCarbon[1]  ={   RunResultsN[14]:PropElecCarbon[1]  }

  ; Compliance Total
   "Calculate Carbon-N - Elec   - Comp Ttl" Proj:RunResultsN[11]:PropElecCarbon[1]   ={	RunResultsN[1]:PropElecCarbon[1]   + RunResultsN[2]:PropElecCarbon[1]   + RunResultsN[3]:PropElecCarbon[1]   + RunResultsN[4]:PropElecCarbon[1]   + RunResultsN[5]:PropElecCarbon[1]     }
   "Calculate Carbon-N - NatGas - Comp Ttl" Proj:RunResultsN[11]:PropNatGasCarbon[1] ={	RunResultsN[1]:PropNatGasCarbon[1] + RunResultsN[2]:PropNatGasCarbon[1] + RunResultsN[3]:PropNatGasCarbon[1] + RunResultsN[4]:PropNatGasCarbon[1] + RunResultsN[5]:PropNatGasCarbon[1]   }
   "Calculate Carbon-N - Other  - Comp Ttl" Proj:RunResultsN[11]:PropOtherCarbon[1]  ={	RunResultsN[1]:PropOtherCarbon[1]  + RunResultsN[2]:PropOtherCarbon[1]  + RunResultsN[3]:PropOtherCarbon[1]  + RunResultsN[4]:PropOtherCarbon[1]  + RunResultsN[5]:PropOtherCarbon[1]    }
   "Calculate Carbon-N - TOTAL  - Comp Ttl" Proj:RunResultsN[11]:PropTotalCarbon[1]  ={	RunResultsN[1]:PropTotalCarbon[1]  + RunResultsN[2]:PropTotalCarbon[1]  + RunResultsN[3]:PropTotalCarbon[1]  + RunResultsN[4]:PropTotalCarbon[1]  + RunResultsN[5]:PropTotalCarbon[1]    }

  ; Total
   "Calculate Carbon-N - Elec   - Total"    Proj:RunResultsN[10]:PropElecCarbon[1]   ={	RunResultsN[11]:PropElecCarbon[1]   + RunResultsN[6]:PropElecCarbon[1]   + RunResultsN[7]:PropElecCarbon[1]   + RunResultsN[8]:PropElecCarbon[1]   + RunResultsN[9]:PropElecCarbon[1]   + RunResultsN[13]:PropElecCarbon[1]   + RunResultsN[14]:PropElecCarbon[1]     }
   "Calculate Carbon-N - NatGas - Total"    Proj:RunResultsN[10]:PropNatGasCarbon[1] ={	RunResultsN[11]:PropNatGasCarbon[1] + RunResultsN[6]:PropNatGasCarbon[1] + RunResultsN[7]:PropNatGasCarbon[1] + RunResultsN[8]:PropNatGasCarbon[1] + RunResultsN[9]:PropNatGasCarbon[1] + RunResultsN[13]:PropNatGasCarbon[1] + RunResultsN[14]:PropNatGasCarbon[1]   }
   "Calculate Carbon-N - Other  - Total"    Proj:RunResultsN[10]:PropOtherCarbon[1]  ={	RunResultsN[11]:PropOtherCarbon[1]  + RunResultsN[6]:PropOtherCarbon[1]  + RunResultsN[7]:PropOtherCarbon[1]  + RunResultsN[8]:PropOtherCarbon[1]  + RunResultsN[9]:PropOtherCarbon[1]  + RunResultsN[13]:PropOtherCarbon[1]  + RunResultsN[14]:PropOtherCarbon[1]    }
   "Calculate Carbon-N - TOTAL  - Total"    Proj:RunResultsN[10]:PropTotalCarbon[1]  ={	RunResultsN[11]:PropTotalCarbon[1]  + RunResultsN[6]:PropTotalCarbon[1]  + RunResultsN[7]:PropTotalCarbon[1]  + RunResultsN[8]:PropTotalCarbon[1]  + RunResultsN[9]:PropTotalCarbon[1]  + RunResultsN[13]:PropTotalCarbon[1]  + RunResultsN[14]:PropTotalCarbon[1]    }

  ; Summary values
   "Calculate PropElecCarbon[1]-elec-N"   Proj:ResultSummary[2]:PropElecCarbon[1]   = {   if (CommunitySolarProjID > 0 .AND. IfValidAnd( CmntySlr_CO2 < 0 ))
                                                                                          then  RunResultsN[10]:PropElecCarbon[1] * CondFloorArea
                                                                                          else if (IfValidAnd( ResultSummary[2]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                                   ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                     IfValidAnd( ResultSummary[2]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif endif  }
   "Calculate PropFuelCarbon[1]-othr-N"   Proj:ResultSummary[2]:PropFuelCarbon[1]   = {   (CondFloorArea * (RunResultsN[10]:PropNatGasCarbon[1] + RunResultsN[10]:PropOtherCarbon[1]))  }
   "Calculate PropFinalCarbon[1]-N"       Proj:ResultSummary[2]:PropFinalCarbon[1]  = {   ResultSummary[2]:PropElecCarbon[1] + ResultSummary[2]:PropFuelCarbon[1]  }
   "Calculate PropExportCarbon[1]-N"      Proj:ResultSummary[2]:PropExportCarbon[1] = {   if (IfValidAnd( ResultSummary[2]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[2]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PropSelfConsCarbon[1]-N"    Proj:ResultSummary[2]:PropSelfConsCarbon[1] ={  if (IfValidAnd( RunResultsN[14]:PropElecEnergy[1] != 0 )==0)
                                                                                          then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[2]:PropExportCarbon[1]
                                                                                          else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[2]:PropExportCarbon[1]
                                                                                          endif  }
   "Calculate PropNoSolFlxCarbon[1]-N"    Proj:ResultSummary[2]:PropNoSolFlxCarbon[1] ={  (RunResultsN[10]:PropTotalCarbon[1] - RunResultsN[13]:PropTotalCarbon[1] - RunResultsN[14]:PropTotalCarbon[1]) * CondFloorArea  }
   "Calculate PropExclExpCarbon[1]-N"     Proj:ResultSummary[2]:PropExclExpCarbon[1]  ={  ResultSummary[2]:PropNoSolFlxCarbon[1] - ResultSummary[2]:PropSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
END
;*************************************************************************

;*************************************************************************  - SAC 10/7/17
RULELIST "CARes_ProposedResults_Carbon_E" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
   "Calculate Carbon-E - Elec   - SpcHt"    Proj:RunResultsE[1]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsE[1]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "HtgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-E - NatGas - SpcHt"    Proj:RunResultsE[1]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsE[1]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrNatGas", "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Other  - SpcHt"    Proj:RunResultsE[1]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsE[1]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrOther",  "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Total  - SpcHt"    Proj:RunResultsE[1]:PropTotalCarbon[1]  = {   RunResultsE[1]:PropElecCarbon[1] + RunResultsE[1]:PropNatGasCarbon[1] + RunResultsE[1]:PropOtherCarbon[1]  }

  ; Space Cooling (& cooling fan)
   "Calculate Carbon-E - Elec   - SpcCl"    Proj:RunResultsE[2]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsE[2]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ClgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Clg", "FanC" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-E - NatGas - SpcCl"    Proj:RunResultsE[2]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsE[2]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrNatGas", "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Other  - SpcCl"    Proj:RunResultsE[2]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsE[2]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrOther",  "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Total  - SpcCl"    Proj:RunResultsE[2]:PropTotalCarbon[1]  = {   RunResultsE[2]:PropElecCarbon[1] + RunResultsE[2]:PropNatGasCarbon[1] + RunResultsE[2]:PropOtherCarbon[1]  }

  ; IAQ Ventilation Fans
   "Calculate Carbon-E - Elec   - IAQVent"  Proj:RunResultsE[3]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsE[3]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "IAQVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "FanV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-E - NatGas - IAQVent"  Proj:RunResultsE[3]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-E - Other  - IAQVent"  Proj:RunResultsE[3]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-E - Total  - IAQVent"  Proj:RunResultsE[3]:PropTotalCarbon[1]  = {   RunResultsE[3]:PropElecCarbon[1]  }

  ; Other HVAC (aux & misc fans)
   ; SAC 11/15/18 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
   ; SAC 1/27/19 - switched if check from "LocalRef( RunResultsE[4]:PropElecEnergy[1] )" to "HourlyResultSum( RunID, "MtrElec", "User1" )" since OthrHVAC would already have been re-allocated to SpcHt & SpcCl by now (tic #1053)
   "Calculate Carbon-E - Elec   - OthrHVAC" Proj:RunResultsE[4]:PropElecCarbon[1]   = {   if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "OHVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "USer1" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-E - NatGas - OthrHVAC" Proj:RunResultsE[4]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-E - Other  - OthrHVAC" Proj:RunResultsE[4]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-E - Total  - OthrHVAC" Proj:RunResultsE[4]:PropTotalCarbon[1]  = {   RunResultsE[4]:PropElecCarbon[1]  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC E-Prop Carbon use across SpcHt & SpcCl by fuel based on ratio of total carbon (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - E-PropCarbon"   Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsE[4]:PropTotalCarbon[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsE[1]:PropTotalCarbon[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsE[2]:PropTotalCarbon[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsE[1]:PropTotalCarbon[1], 0 ) / 
                                                                                 (ValidOr( RunResultsE[1]:PropTotalCarbon[1], 0 ) + ValidOr( RunResultsE[2]:PropTotalCarbon[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - E-SpcHt"		Proj:RunResultsE[1]:PropElecCarbon[1]	= {   if (IfValidAnd( RunResultsE[4]:PropElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsE[1]:PropElecCarbon[1] + (RunResultsE[4]:PropElecCarbon[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - E-SpcHt"		Proj:RunResultsE[1]:PropTotalCarbon[1]	= {	LocalRef( RunResultsE[1]:PropElecCarbon[1] ) + LocalRef( RunResultsE[1]:PropNatGasCarbon[1] ) + LocalRef( RunResultsE[1]:PropOtherCarbon[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - E-SpcCl"		Proj:RunResultsE[2]:PropElecCarbon[1]	= {   if (IfValidAnd( RunResultsE[4]:PropElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsE[2]:PropElecCarbon[1] + (RunResultsE[4]:PropElecCarbon[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - E-SpcCl"		Proj:RunResultsE[2]:PropTotalCarbon[1]	= {	LocalRef( RunResultsE[2]:PropElecCarbon[1] ) + LocalRef( RunResultsE[2]:PropNatGasCarbon[1] ) + LocalRef( RunResultsE[2]:PropOtherCarbon[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - E-OthrHVAC"	Proj:RunResultsE[4]:PropElecCarbon[1]	= {	0  }
	"ZERO-OUT         - TOTAL  - E-OthrHVAC"	Proj:RunResultsE[4]:PropTotalCarbon[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC PropCarbon

  ; Water Heating
   "Calculate Carbon-E - Elec   - WtrHt"    Proj:RunResultsE[5]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsE[5]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else if (CSEinclDHWMFL_EU)
			 			  																							   then  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412 / CondFloorArea
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon-E - NatGas - WtrHt"    Proj:RunResultsE[5]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsE[5]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Other  - WtrHt"    Proj:RunResultsE[5]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsE[5]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Total  - WtrHt"    Proj:RunResultsE[5]:PropTotalCarbon[1]  = {   RunResultsE[5]:PropElecCarbon[1] + RunResultsE[5]:PropNatGasCarbon[1] + RunResultsE[5]:PropOtherCarbon[1]  }

  ; Inside Lighting
   "Calculate Carbon-E - Elec   - InsLtg"   Proj:RunResultsE[6]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsE[6]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ILtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Lit" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-E - NatGas - InsLtg"   Proj:RunResultsE[6]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-E - Other  - InsLtg"   Proj:RunResultsE[6]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-E - Total  - InsLtg"   Proj:RunResultsE[6]:PropTotalCarbon[1]  = {   RunResultsE[6]:PropElecCarbon[1]  }

  ; Appliances & Cooking
   "Calculate Carbon-E - Elec   - AppCkg"   Proj:RunResultsE[7]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsE[7]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "AppEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-E - NatGas - AppCkg"   Proj:RunResultsE[7]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsE[7]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Other  - AppCkg"   Proj:RunResultsE[7]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsE[7]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Total  - AppCkg"   Proj:RunResultsE[7]:PropTotalCarbon[1]  = {   RunResultsE[7]:PropElecCarbon[1] + RunResultsE[7]:PropNatGasCarbon[1] + RunResultsE[7]:PropOtherCarbon[1]  }

  ; Plug Loads
   "Calculate Carbon-E - Elec   - Plugs"    Proj:RunResultsE[8]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsE[8]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "RcpEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Rcp" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-E - NatGas - Plugs"    Proj:RunResultsE[8]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsE[8]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Other  - Plugs"    Proj:RunResultsE[8]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsE[8]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Total  - Plugs"    Proj:RunResultsE[8]:PropTotalCarbon[1]  = {   RunResultsE[8]:PropElecCarbon[1] + RunResultsE[8]:PropNatGasCarbon[1] + RunResultsE[8]:PropOtherCarbon[1]  }

  ; Exterior
   "Calculate Carbon-E - Elec   - Ext"      Proj:RunResultsE[9]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsE[9]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ExtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Ext" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-E - NatGas - Ext"      Proj:RunResultsE[9]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsE[9]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Other  - Ext"      Proj:RunResultsE[9]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsE[9]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-E", "MtrOther",  "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-E - Total  - Ext"      Proj:RunResultsE[9]:PropTotalCarbon[1]  = {   RunResultsE[9]:PropElecCarbon[1] + RunResultsE[9]:PropNatGasCarbon[1] + RunResultsE[9]:PropOtherCarbon[1]  }

;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[3]:PropPVScaleFactor > 0 )==0) then  MessageBox( "RunID: %s, PropPVScaleFactor undefined", "Proposed-E" )
;                           else  MessageBox( "RunID: %s, ResultSummary[3]:PropPVScaleFactor = %g", RunID, ResultSummary[3]:PropPVScaleFactor )  endif  }
;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[3]:TargetDRtgPVMult > 0 )==0) then  MessageBox( "RunID: %s, TargetDRtgPVMult undefined", RunID )
;                           else  MessageBox( "RunID: %s, ResultSummary[3]:TargetDRtgPVMult = %g", RunID, ResultSummary[3]:TargetDRtgPVMult )  endif  }
;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[3]:PropPVScaleFactor != 1 )==0 .OR.
;                               ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND. IfValidAnd( ResultSummary[3]:TargetDRtgPVMult > 0 ) )) then  UNCHANGED
;                           else  MessageBox( "%s PV scaling of %g", RunID, ResultSummary[3]:PropPVScaleFactor )  endif  }
  ; PV
   "Store negative PV 8760-E"               Proj:RunResultsE[13]:Action              ={   if (IfValidAnd( ResultSummary[3]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[3]:TargetDRtgPVMult > 0 ) )) then UNCHANGED
                                                                                          else  ApplyHourlyResultMultipliers( "NegPV", "none", -1.0, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "PV" )
                                                                                          endif  }
   "Store scaled PV 8760-E"                 Proj:RunResultsE[13]:Action              ={   if (IfValidAnd( ResultSummary[3]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[3]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  ApplyHourlyResultMultipliers( "ScldPV", "none",                                1.0, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "PV" )
                                                                                          else  ApplyHourlyResultMultipliers( "ScldPV", "none", ResultSummary[3]:PropPVScaleFactor, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "PV" )
                                                                                          endif  }
   "Calculate Carbon-E - Elec   - PV"       Proj:RunResultsE[13]:PropElecCarbon[1]   ={   if (LocalRef( RunResultsE[13]:PropElecEnergy[1]   ) > -0.0001) then  0
                                                                                          else if (CommunitySolarProjID > 0 .AND. IfValidAnd( CmntySlr_CO2 < 0 )) then  CmntySlr_CO2 * PVWDCSizeMultiplier[1] / 1000 / CondFloorArea
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "PVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "ScldPV" ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon-E - NatGas - PV"       Proj:RunResultsE[13]:PropNatGasCarbon[1] ={   0  }
   "Calculate Carbon-E - Other  - PV"       Proj:RunResultsE[13]:PropOtherCarbon[1]  ={   0  }
   "Calculate Carbon-E - Total  - PV"       Proj:RunResultsE[13]:PropTotalCarbon[1]  ={   RunResultsE[13]:PropElecCarbon[1]  }

  ; Battery
;   "Store negative BT 8760-E"    Proj:RunResultsE[14]:Action    ={   if (IfValidAnd( RunResultsE[14]:PropElecEnergy[1] != 0 )==0) then UNCHANGED
;                                                                     else  ApplyHourlyResultMultipliers_Neg( "NegBT", "none", 1.0, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "BT" )  endif  }
   "Calculate Carbon-E - Elec   - Battery"  Proj:RunResultsE[14]:PropElecCarbon[1]   ={   if (LocalRef( RunResultsE[14]:PropElecEnergy[1]   ) = 0) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "BTEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "BT" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-E - NatGas - Battery"  Proj:RunResultsE[14]:PropNatGasCarbon[1] ={   0  }
   "Calculate Carbon-E - Other  - Battery"  Proj:RunResultsE[14]:PropOtherCarbon[1]  ={   0  }
   "Calculate Carbon-E - Total  - Battery"  Proj:RunResultsE[14]:PropTotalCarbon[1]  ={   RunResultsE[14]:PropElecCarbon[1]  }

  ; Compliance Total
   "Calculate Carbon-E - Elec   - Comp Ttl" Proj:RunResultsE[11]:PropElecCarbon[1]   ={	RunResultsE[1]:PropElecCarbon[1]   + RunResultsE[2]:PropElecCarbon[1]   + RunResultsE[3]:PropElecCarbon[1]   + RunResultsE[4]:PropElecCarbon[1]   + RunResultsE[5]:PropElecCarbon[1]     }
   "Calculate Carbon-E - NatGas - Comp Ttl" Proj:RunResultsE[11]:PropNatGasCarbon[1] ={	RunResultsE[1]:PropNatGasCarbon[1] + RunResultsE[2]:PropNatGasCarbon[1] + RunResultsE[3]:PropNatGasCarbon[1] + RunResultsE[4]:PropNatGasCarbon[1] + RunResultsE[5]:PropNatGasCarbon[1]   }
   "Calculate Carbon-E - Other  - Comp Ttl" Proj:RunResultsE[11]:PropOtherCarbon[1]  ={	RunResultsE[1]:PropOtherCarbon[1]  + RunResultsE[2]:PropOtherCarbon[1]  + RunResultsE[3]:PropOtherCarbon[1]  + RunResultsE[4]:PropOtherCarbon[1]  + RunResultsE[5]:PropOtherCarbon[1]    }
   "Calculate Carbon-E - TOTAL  - Comp Ttl" Proj:RunResultsE[11]:PropTotalCarbon[1]  ={	RunResultsE[1]:PropTotalCarbon[1]  + RunResultsE[2]:PropTotalCarbon[1]  + RunResultsE[3]:PropTotalCarbon[1]  + RunResultsE[4]:PropTotalCarbon[1]  + RunResultsE[5]:PropTotalCarbon[1]    }

  ; Total
   "Calculate Carbon-E - Elec   - Total"    Proj:RunResultsE[10]:PropElecCarbon[1]   ={	RunResultsE[11]:PropElecCarbon[1]   + RunResultsE[6]:PropElecCarbon[1]   + RunResultsE[7]:PropElecCarbon[1]   + RunResultsE[8]:PropElecCarbon[1]   + RunResultsE[9]:PropElecCarbon[1]   + RunResultsE[13]:PropElecCarbon[1]   + RunResultsE[14]:PropElecCarbon[1]     }
   "Calculate Carbon-E - NatGas - Total"    Proj:RunResultsE[10]:PropNatGasCarbon[1] ={	RunResultsE[11]:PropNatGasCarbon[1] + RunResultsE[6]:PropNatGasCarbon[1] + RunResultsE[7]:PropNatGasCarbon[1] + RunResultsE[8]:PropNatGasCarbon[1] + RunResultsE[9]:PropNatGasCarbon[1] + RunResultsE[13]:PropNatGasCarbon[1] + RunResultsE[14]:PropNatGasCarbon[1]   }
   "Calculate Carbon-E - Other  - Total"    Proj:RunResultsE[10]:PropOtherCarbon[1]  ={	RunResultsE[11]:PropOtherCarbon[1]  + RunResultsE[6]:PropOtherCarbon[1]  + RunResultsE[7]:PropOtherCarbon[1]  + RunResultsE[8]:PropOtherCarbon[1]  + RunResultsE[9]:PropOtherCarbon[1]  + RunResultsE[13]:PropOtherCarbon[1]  + RunResultsE[14]:PropOtherCarbon[1]    }
   "Calculate Carbon-E - TOTAL  - Total"    Proj:RunResultsE[10]:PropTotalCarbon[1]  ={	RunResultsE[11]:PropTotalCarbon[1]  + RunResultsE[6]:PropTotalCarbon[1]  + RunResultsE[7]:PropTotalCarbon[1]  + RunResultsE[8]:PropTotalCarbon[1]  + RunResultsE[9]:PropTotalCarbon[1]  + RunResultsE[13]:PropTotalCarbon[1]  + RunResultsE[14]:PropTotalCarbon[1]    }

  ; Summary values
   "Calculate PropElecCarbon[1]-elec-E"   Proj:ResultSummary[3]:PropElecCarbon[1]   = {   if (CommunitySolarProjID > 0 .AND. IfValidAnd( CmntySlr_CO2 < 0 ))
                                                                                          then  RunResultsE[10]:PropElecCarbon[1] * CondFloorArea
                                                                                          else if (IfValidAnd( ResultSummary[3]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                                   ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                     IfValidAnd( ResultSummary[3]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif endif  }
   "Calculate PropFuelCarbon[1]-othr-E"   Proj:ResultSummary[3]:PropFuelCarbon[1]   = {   (CondFloorArea * (RunResultsE[10]:PropNatGasCarbon[1] + RunResultsE[10]:PropOtherCarbon[1]))  }
   "Calculate PropFinalCarbon[1]-E"       Proj:ResultSummary[3]:PropFinalCarbon[1]  = {   ResultSummary[3]:PropElecCarbon[1] + ResultSummary[3]:PropFuelCarbon[1]  }
   "Calculate PropExportCarbon[1]-E"      Proj:ResultSummary[3]:PropExportCarbon[1] = {   if (IfValidAnd( ResultSummary[3]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[3]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PropSelfConsCarbon[1]-E"    Proj:ResultSummary[3]:PropSelfConsCarbon[1] ={  if (IfValidAnd( RunResultsE[14]:PropElecEnergy[1] != 0 )==0)
                                                                                          then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[3]:PropExportCarbon[1]
                                                                                          else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-E", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[3]:PropExportCarbon[1]
                                                                                          endif  }
   "Calculate PropNoSolFlxCarbon[1]-E"    Proj:ResultSummary[3]:PropNoSolFlxCarbon[1] ={  (RunResultsE[10]:PropTotalCarbon[1] - RunResultsE[13]:PropTotalCarbon[1] - RunResultsE[14]:PropTotalCarbon[1]) * CondFloorArea  }
   "Calculate PropExclExpCarbon[1]-E"     Proj:ResultSummary[3]:PropExclExpCarbon[1]  ={  ResultSummary[3]:PropNoSolFlxCarbon[1] - ResultSummary[3]:PropSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
END
;*************************************************************************

;*************************************************************************  - SAC 10/7/17
RULELIST "CARes_ProposedResults_Carbon_S" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
   "Calculate Carbon-S - Elec   - SpcHt"    Proj:RunResultsS[1]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsS[1]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "HtgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-S - NatGas - SpcHt"    Proj:RunResultsS[1]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsS[1]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrNatGas", "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Other  - SpcHt"    Proj:RunResultsS[1]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsS[1]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrOther",  "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Total  - SpcHt"    Proj:RunResultsS[1]:PropTotalCarbon[1]  = {   RunResultsS[1]:PropElecCarbon[1] + RunResultsS[1]:PropNatGasCarbon[1] + RunResultsS[1]:PropOtherCarbon[1]  }

  ; Space Cooling (& cooling fan)
   "Calculate Carbon-S - Elec   - SpcCl"    Proj:RunResultsS[2]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsS[2]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ClgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Clg", "FanC" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-S - NatGas - SpcCl"    Proj:RunResultsS[2]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsS[2]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrNatGas", "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Other  - SpcCl"    Proj:RunResultsS[2]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsS[2]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrOther",  "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Total  - SpcCl"    Proj:RunResultsS[2]:PropTotalCarbon[1]  = {   RunResultsS[2]:PropElecCarbon[1] + RunResultsS[2]:PropNatGasCarbon[1] + RunResultsS[2]:PropOtherCarbon[1]  }

  ; IAQ Ventilation Fans
   "Calculate Carbon-S - Elec   - IAQVent"  Proj:RunResultsS[3]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsS[3]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "IAQVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "FanV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-S - NatGas - IAQVent"  Proj:RunResultsS[3]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-S - Other  - IAQVent"  Proj:RunResultsS[3]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-S - Total  - IAQVent"  Proj:RunResultsS[3]:PropTotalCarbon[1]  = {   RunResultsS[3]:PropElecCarbon[1]  }

  ; Other HVAC (aux & misc fans)
   ; SAC 11/15/18 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
   ; SAC 1/27/19 - switched if check from "LocalRef( RunResultsS[4]:PropElecEnergy[1] )" to "HourlyResultSum( RunID, "MtrElec", "User1" )" since OthrHVAC would already have been re-allocated to SpcHt & SpcCl by now (tic #1053)
   "Calculate Carbon-S - Elec   - OthrHVAC" Proj:RunResultsS[4]:PropElecCarbon[1]   = {   if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "OHVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "User1" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-S - NatGas - OthrHVAC" Proj:RunResultsS[4]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-S - Other  - OthrHVAC" Proj:RunResultsS[4]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-S - Total  - OthrHVAC" Proj:RunResultsS[4]:PropTotalCarbon[1]  = {   RunResultsS[4]:PropElecCarbon[1]  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC S-Prop Carbon use across SpcHt & SpcCl by fuel based on ratio of total carbon (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - S-PropCarbon"   Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsS[4]:PropTotalCarbon[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsS[1]:PropTotalCarbon[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsS[2]:PropTotalCarbon[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsS[1]:PropTotalCarbon[1], 0 ) / 
                                                                                 (ValidOr( RunResultsS[1]:PropTotalCarbon[1], 0 ) + ValidOr( RunResultsS[2]:PropTotalCarbon[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - S-SpcHt"		Proj:RunResultsS[1]:PropElecCarbon[1]	= {   if (IfValidAnd( RunResultsS[4]:PropElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsS[1]:PropElecCarbon[1] + (RunResultsS[4]:PropElecCarbon[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - S-SpcHt"		Proj:RunResultsS[1]:PropTotalCarbon[1]	= {	LocalRef( RunResultsS[1]:PropElecCarbon[1] ) + LocalRef( RunResultsS[1]:PropNatGasCarbon[1] ) + LocalRef( RunResultsS[1]:PropOtherCarbon[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - S-SpcCl"		Proj:RunResultsS[2]:PropElecCarbon[1]	= {   if (IfValidAnd( RunResultsS[4]:PropElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsS[2]:PropElecCarbon[1] + (RunResultsS[4]:PropElecCarbon[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - S-SpcCl"		Proj:RunResultsS[2]:PropTotalCarbon[1]	= {	LocalRef( RunResultsS[2]:PropElecCarbon[1] ) + LocalRef( RunResultsS[2]:PropNatGasCarbon[1] ) + LocalRef( RunResultsS[2]:PropOtherCarbon[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - S-OthrHVAC"	Proj:RunResultsS[4]:PropElecCarbon[1]	= {	0  }
	"ZERO-OUT         - TOTAL  - S-OthrHVAC"	Proj:RunResultsS[4]:PropTotalCarbon[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC PropCarbon

  ; Water Heating
   "Calculate Carbon-S - Elec   - WtrHt"    Proj:RunResultsS[5]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsS[5]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else if (CSEinclDHWMFL_EU)
			 			  																							   then  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412 / CondFloorArea
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon-S - NatGas - WtrHt"    Proj:RunResultsS[5]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsS[5]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Other  - WtrHt"    Proj:RunResultsS[5]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsS[5]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Total  - WtrHt"    Proj:RunResultsS[5]:PropTotalCarbon[1]  = {   RunResultsS[5]:PropElecCarbon[1] + RunResultsS[5]:PropNatGasCarbon[1] + RunResultsS[5]:PropOtherCarbon[1]  }

  ; Inside Lighting
   "Calculate Carbon-S - Elec   - InsLtg"   Proj:RunResultsS[6]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsS[6]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ILtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Lit" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-S - NatGas - InsLtg"   Proj:RunResultsS[6]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-S - Other  - InsLtg"   Proj:RunResultsS[6]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-S - Total  - InsLtg"   Proj:RunResultsS[6]:PropTotalCarbon[1]  = {   RunResultsS[6]:PropElecCarbon[1]  }

  ; Appliances & Cooking
   "Calculate Carbon-S - Elec   - AppCkg"   Proj:RunResultsS[7]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsS[7]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "AppEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-S - NatGas - AppCkg"   Proj:RunResultsS[7]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsS[7]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Other  - AppCkg"   Proj:RunResultsS[7]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsS[7]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Total  - AppCkg"   Proj:RunResultsS[7]:PropTotalCarbon[1]  = {   RunResultsS[7]:PropElecCarbon[1] + RunResultsS[7]:PropNatGasCarbon[1] + RunResultsS[7]:PropOtherCarbon[1]  }

  ; Plug Loads
   "Calculate Carbon-S - Elec   - Plugs"    Proj:RunResultsS[8]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsS[8]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "RcpEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Rcp" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-S - NatGas - Plugs"    Proj:RunResultsS[8]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsS[8]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Other  - Plugs"    Proj:RunResultsS[8]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsS[8]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Total  - Plugs"    Proj:RunResultsS[8]:PropTotalCarbon[1]  = {   RunResultsS[8]:PropElecCarbon[1] + RunResultsS[8]:PropNatGasCarbon[1] + RunResultsS[8]:PropOtherCarbon[1]  }

  ; Exterior
   "Calculate Carbon-S - Elec   - Ext"      Proj:RunResultsS[9]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsS[9]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ExtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Ext" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-S - NatGas - Ext"      Proj:RunResultsS[9]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsS[9]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Other  - Ext"      Proj:RunResultsS[9]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsS[9]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-S", "MtrOther",  "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-S - Total  - Ext"      Proj:RunResultsS[9]:PropTotalCarbon[1]  = {   RunResultsS[9]:PropElecCarbon[1] + RunResultsS[9]:PropNatGasCarbon[1] + RunResultsS[9]:PropOtherCarbon[1]  }

;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[4]:PropPVScaleFactor > 0 )==0) then  MessageBox( "RunID: %s, PropPVScaleFactor undefined", "Proposed-S" )
;                           else  MessageBox( "RunID: %s, ResultSummary[4]:PropPVScaleFactor = %g", RunID, ResultSummary[4]:PropPVScaleFactor )  endif  }
;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[4]:TargetDRtgPVMult > 0 )==0) then  MessageBox( "RunID: %s, TargetDRtgPVMult undefined", RunID )
;                           else  MessageBox( "RunID: %s, ResultSummary[4]:TargetDRtgPVMult = %g", RunID, ResultSummary[4]:TargetDRtgPVMult )  endif  }
;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[4]:PropPVScaleFactor != 1 )==0 .OR.
;                               ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND. IfValidAnd( ResultSummary[4]:TargetDRtgPVMult > 0 ) )) then  UNCHANGED
;                           else  MessageBox( "%s PV scaling of %g", RunID, ResultSummary[4]:PropPVScaleFactor )  endif  }
  ; PV
   "Store negative PV 8760-S"               Proj:RunResultsS[13]:Action              ={   if (IfValidAnd( ResultSummary[4]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[4]:TargetDRtgPVMult > 0 ) )) then UNCHANGED
                                                                                          else  ApplyHourlyResultMultipliers( "NegPV", "none", -1.0, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "PV" )
                                                                                          endif  }
   "Store scaled PV 8760-S"                 Proj:RunResultsS[13]:Action              ={   if (IfValidAnd( ResultSummary[4]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[4]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  ApplyHourlyResultMultipliers( "ScldPV", "none",                                1.0, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "PV" )
                                                                                          else  ApplyHourlyResultMultipliers( "ScldPV", "none", ResultSummary[4]:PropPVScaleFactor, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "PV" )
                                                                                          endif  }
   "Calculate Carbon-S - Elec   - PV"       Proj:RunResultsS[13]:PropElecCarbon[1]   ={   if (LocalRef( RunResultsS[13]:PropElecEnergy[1]   ) > -0.0001) then  0
                                                                                          else if (CommunitySolarProjID > 0 .AND. IfValidAnd( CmntySlr_CO2 < 0 )) then  CmntySlr_CO2 * PVWDCSizeMultiplier[1] / 1000 / CondFloorArea
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "PVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "ScldPV" ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon-S - NatGas - PV"       Proj:RunResultsS[13]:PropNatGasCarbon[1] ={   0  }
   "Calculate Carbon-S - Other  - PV"       Proj:RunResultsS[13]:PropOtherCarbon[1]  ={   0  }
   "Calculate Carbon-S - Total  - PV"       Proj:RunResultsS[13]:PropTotalCarbon[1]  ={   RunResultsS[13]:PropElecCarbon[1]  }

  ; Battery
;   "Store negative BT 8760-S"    Proj:RunResultsS[14]:Action    ={   if (IfValidAnd( RunResultsS[14]:PropElecEnergy[1] != 0 )==0) then UNCHANGED
;                                                                     else  ApplyHourlyResultMultipliers_Neg( "NegBT", "none", 1.0, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "BT" )  endif  }
   "Calculate Carbon-S - Elec   - Battery"  Proj:RunResultsS[14]:PropElecCarbon[1]   ={   if (LocalRef( RunResultsS[14]:PropElecEnergy[1]   ) = 0) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "BTEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "BT" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-S - NatGas - Battery"  Proj:RunResultsS[14]:PropNatGasCarbon[1] ={   0  }
   "Calculate Carbon-S - Other  - Battery"  Proj:RunResultsS[14]:PropOtherCarbon[1]  ={   0  }
   "Calculate Carbon-S - Total  - Battery"  Proj:RunResultsS[14]:PropTotalCarbon[1]  ={   RunResultsS[14]:PropElecCarbon[1]  }

  ; Compliance Total
   "Calculate Carbon-S - Elec   - Comp Ttl" Proj:RunResultsS[11]:PropElecCarbon[1]   ={	RunResultsS[1]:PropElecCarbon[1]   + RunResultsS[2]:PropElecCarbon[1]   + RunResultsS[3]:PropElecCarbon[1]   + RunResultsS[4]:PropElecCarbon[1]   + RunResultsS[5]:PropElecCarbon[1]     }
   "Calculate Carbon-S - NatGas - Comp Ttl" Proj:RunResultsS[11]:PropNatGasCarbon[1] ={	RunResultsS[1]:PropNatGasCarbon[1] + RunResultsS[2]:PropNatGasCarbon[1] + RunResultsS[3]:PropNatGasCarbon[1] + RunResultsS[4]:PropNatGasCarbon[1] + RunResultsS[5]:PropNatGasCarbon[1]   }
   "Calculate Carbon-S - Other  - Comp Ttl" Proj:RunResultsS[11]:PropOtherCarbon[1]  ={	RunResultsS[1]:PropOtherCarbon[1]  + RunResultsS[2]:PropOtherCarbon[1]  + RunResultsS[3]:PropOtherCarbon[1]  + RunResultsS[4]:PropOtherCarbon[1]  + RunResultsS[5]:PropOtherCarbon[1]    }
   "Calculate Carbon-S - TOTAL  - Comp Ttl" Proj:RunResultsS[11]:PropTotalCarbon[1]  ={	RunResultsS[1]:PropTotalCarbon[1]  + RunResultsS[2]:PropTotalCarbon[1]  + RunResultsS[3]:PropTotalCarbon[1]  + RunResultsS[4]:PropTotalCarbon[1]  + RunResultsS[5]:PropTotalCarbon[1]    }

  ; Total
   "Calculate Carbon-S - Elec   - Total"    Proj:RunResultsS[10]:PropElecCarbon[1]   ={	RunResultsS[11]:PropElecCarbon[1]   + RunResultsS[6]:PropElecCarbon[1]   + RunResultsS[7]:PropElecCarbon[1]   + RunResultsS[8]:PropElecCarbon[1]   + RunResultsS[9]:PropElecCarbon[1]   + RunResultsS[13]:PropElecCarbon[1]   + RunResultsS[14]:PropElecCarbon[1]     }
   "Calculate Carbon-S - NatGas - Total"    Proj:RunResultsS[10]:PropNatGasCarbon[1] ={	RunResultsS[11]:PropNatGasCarbon[1] + RunResultsS[6]:PropNatGasCarbon[1] + RunResultsS[7]:PropNatGasCarbon[1] + RunResultsS[8]:PropNatGasCarbon[1] + RunResultsS[9]:PropNatGasCarbon[1] + RunResultsS[13]:PropNatGasCarbon[1] + RunResultsS[14]:PropNatGasCarbon[1]   }
   "Calculate Carbon-S - Other  - Total"    Proj:RunResultsS[10]:PropOtherCarbon[1]  ={	RunResultsS[11]:PropOtherCarbon[1]  + RunResultsS[6]:PropOtherCarbon[1]  + RunResultsS[7]:PropOtherCarbon[1]  + RunResultsS[8]:PropOtherCarbon[1]  + RunResultsS[9]:PropOtherCarbon[1]  + RunResultsS[13]:PropOtherCarbon[1]  + RunResultsS[14]:PropOtherCarbon[1]    }
   "Calculate Carbon-S - TOTAL  - Total"    Proj:RunResultsS[10]:PropTotalCarbon[1]  ={	RunResultsS[11]:PropTotalCarbon[1]  + RunResultsS[6]:PropTotalCarbon[1]  + RunResultsS[7]:PropTotalCarbon[1]  + RunResultsS[8]:PropTotalCarbon[1]  + RunResultsS[9]:PropTotalCarbon[1]  + RunResultsS[13]:PropTotalCarbon[1]  + RunResultsS[14]:PropTotalCarbon[1]    }

  ; Summary values
   "Calculate PropElecCarbon[1]-elec-S"   Proj:ResultSummary[4]:PropElecCarbon[1]   = {   if (CommunitySolarProjID > 0 .AND. IfValidAnd( CmntySlr_CO2 < 0 ))
                                                                                          then  RunResultsS[10]:PropElecCarbon[1] * CondFloorArea
                                                                                          else if (IfValidAnd( ResultSummary[4]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                                   ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                     IfValidAnd( ResultSummary[4]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif endif  }
   "Calculate PropFuelCarbon[1]-othr-S"   Proj:ResultSummary[4]:PropFuelCarbon[1]   = {   (CondFloorArea * (RunResultsS[10]:PropNatGasCarbon[1] + RunResultsS[10]:PropOtherCarbon[1]))  }
   "Calculate PropFinalCarbon[1]-S"       Proj:ResultSummary[4]:PropFinalCarbon[1]  = {   ResultSummary[4]:PropElecCarbon[1] + ResultSummary[4]:PropFuelCarbon[1]  }
   "Calculate PropExportCarbon[1]-S"      Proj:ResultSummary[4]:PropExportCarbon[1] = {   if (IfValidAnd( ResultSummary[4]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[4]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PropSelfConsCarbon[1]-S"    Proj:ResultSummary[4]:PropSelfConsCarbon[1] ={  if (IfValidAnd( RunResultsS[14]:PropElecEnergy[1] != 0 )==0)
                                                                                          then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[4]:PropExportCarbon[1]
                                                                                          else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-S", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[4]:PropExportCarbon[1]
                                                                                          endif  }
   "Calculate PropNoSolFlxCarbon[1]-S"    Proj:ResultSummary[4]:PropNoSolFlxCarbon[1] ={  (RunResultsS[10]:PropTotalCarbon[1] - RunResultsS[13]:PropTotalCarbon[1] - RunResultsS[14]:PropTotalCarbon[1]) * CondFloorArea  }
   "Calculate PropExclExpCarbon[1]-S"     Proj:ResultSummary[4]:PropExclExpCarbon[1]  ={  ResultSummary[4]:PropNoSolFlxCarbon[1] - ResultSummary[4]:PropSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
END
;*************************************************************************

;*************************************************************************  - SAC 10/7/17
RULELIST "CARes_ProposedResults_Carbon_W" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
   "Calculate Carbon-W - Elec   - SpcHt"    Proj:RunResultsW[1]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsW[1]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "HtgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-W - NatGas - SpcHt"    Proj:RunResultsW[1]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsW[1]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrNatGas", "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Other  - SpcHt"    Proj:RunResultsW[1]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsW[1]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrOther",  "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Total  - SpcHt"    Proj:RunResultsW[1]:PropTotalCarbon[1]  = {   RunResultsW[1]:PropElecCarbon[1] + RunResultsW[1]:PropNatGasCarbon[1] + RunResultsW[1]:PropOtherCarbon[1]  }

  ; Space Cooling (& cooling fan)
   "Calculate Carbon-W - Elec   - SpcCl"    Proj:RunResultsW[2]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsW[2]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ClgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Clg", "FanC" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-W - NatGas - SpcCl"    Proj:RunResultsW[2]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsW[2]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrNatGas", "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Other  - SpcCl"    Proj:RunResultsW[2]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsW[2]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrOther",  "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Total  - SpcCl"    Proj:RunResultsW[2]:PropTotalCarbon[1]  = {   RunResultsW[2]:PropElecCarbon[1] + RunResultsW[2]:PropNatGasCarbon[1] + RunResultsW[2]:PropOtherCarbon[1]  }

  ; IAQ Ventilation Fans
   "Calculate Carbon-W - Elec   - IAQVent"  Proj:RunResultsW[3]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsW[3]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "IAQVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "FanV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-W - NatGas - IAQVent"  Proj:RunResultsW[3]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-W - Other  - IAQVent"  Proj:RunResultsW[3]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-W - Total  - IAQVent"  Proj:RunResultsW[3]:PropTotalCarbon[1]  = {   RunResultsW[3]:PropElecCarbon[1]  }

  ; Other HVAC (aux & misc fans)
   ; SAC 11/15/18 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
   ; SAC 1/27/19 - switched if check from "LocalRef( RunResultsW[4]:PropElecEnergy[1] )" to "HourlyResultSum( RunID, "MtrElec", "User1" )" since OthrHVAC would already have been re-allocated to SpcHt & SpcCl by now (tic #1053)
   "Calculate Carbon-W - Elec   - OthrHVAC" Proj:RunResultsW[4]:PropElecCarbon[1]   = {   if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "OHVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "User1" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-W - NatGas - OthrHVAC" Proj:RunResultsW[4]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-W - Other  - OthrHVAC" Proj:RunResultsW[4]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-W - Total  - OthrHVAC" Proj:RunResultsW[4]:PropTotalCarbon[1]  = {   RunResultsW[4]:PropElecCarbon[1]  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC W-Prop Carbon use across SpcHt & SpcCl by fuel based on ratio of total carbon (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - W-PropCarbon"   Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsW[4]:PropTotalCarbon[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsW[1]:PropTotalCarbon[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsW[2]:PropTotalCarbon[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsW[1]:PropTotalCarbon[1], 0 ) / 
                                                                                 (ValidOr( RunResultsW[1]:PropTotalCarbon[1], 0 ) + ValidOr( RunResultsW[2]:PropTotalCarbon[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - W-SpcHt"		Proj:RunResultsW[1]:PropElecCarbon[1]	= {   if (IfValidAnd( RunResultsW[4]:PropElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsW[1]:PropElecCarbon[1] + (RunResultsW[4]:PropElecCarbon[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - W-SpcHt"		Proj:RunResultsW[1]:PropTotalCarbon[1]	= {	LocalRef( RunResultsW[1]:PropElecCarbon[1] ) + LocalRef( RunResultsW[1]:PropNatGasCarbon[1] ) + LocalRef( RunResultsW[1]:PropOtherCarbon[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - W-SpcCl"		Proj:RunResultsW[2]:PropElecCarbon[1]	= {   if (IfValidAnd( RunResultsW[4]:PropElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsW[2]:PropElecCarbon[1] + (RunResultsW[4]:PropElecCarbon[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - W-SpcCl"		Proj:RunResultsW[2]:PropTotalCarbon[1]	= {	LocalRef( RunResultsW[2]:PropElecCarbon[1] ) + LocalRef( RunResultsW[2]:PropNatGasCarbon[1] ) + LocalRef( RunResultsW[2]:PropOtherCarbon[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - W-OthrHVAC"	Proj:RunResultsW[4]:PropElecCarbon[1]	= {	0  }
	"ZERO-OUT         - TOTAL  - W-OthrHVAC"	Proj:RunResultsW[4]:PropTotalCarbon[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC PropCarbon

  ; Water Heating
   "Calculate Carbon-W - Elec   - WtrHt"    Proj:RunResultsW[5]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsW[5]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else if (CSEinclDHWMFL_EU)
			 			  																							   then  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412 / CondFloorArea
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon-W - NatGas - WtrHt"    Proj:RunResultsW[5]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsW[5]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Other  - WtrHt"    Proj:RunResultsW[5]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsW[5]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Total  - WtrHt"    Proj:RunResultsW[5]:PropTotalCarbon[1]  = {   RunResultsW[5]:PropElecCarbon[1] + RunResultsW[5]:PropNatGasCarbon[1] + RunResultsW[5]:PropOtherCarbon[1]  }

  ; Inside Lighting
   "Calculate Carbon-W - Elec   - InsLtg"   Proj:RunResultsW[6]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsW[6]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ILtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Lit" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-W - NatGas - InsLtg"   Proj:RunResultsW[6]:PropNatGasCarbon[1] = {   0  }
   "Calculate Carbon-W - Other  - InsLtg"   Proj:RunResultsW[6]:PropOtherCarbon[1]  = {   0  }
   "Calculate Carbon-W - Total  - InsLtg"   Proj:RunResultsW[6]:PropTotalCarbon[1]  = {   RunResultsW[6]:PropElecCarbon[1]  }

  ; Appliances & Cooking
   "Calculate Carbon-W - Elec   - AppCkg"   Proj:RunResultsW[7]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsW[7]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "AppEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-W - NatGas - AppCkg"   Proj:RunResultsW[7]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsW[7]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Other  - AppCkg"   Proj:RunResultsW[7]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsW[7]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Total  - AppCkg"   Proj:RunResultsW[7]:PropTotalCarbon[1]  = {   RunResultsW[7]:PropElecCarbon[1] + RunResultsW[7]:PropNatGasCarbon[1] + RunResultsW[7]:PropOtherCarbon[1]  }

  ; Plug Loads
   "Calculate Carbon-W - Elec   - Plugs"    Proj:RunResultsW[8]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsW[8]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "RcpEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Rcp" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-W - NatGas - Plugs"    Proj:RunResultsW[8]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsW[8]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Other  - Plugs"    Proj:RunResultsW[8]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsW[8]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Total  - Plugs"    Proj:RunResultsW[8]:PropTotalCarbon[1]  = {   RunResultsW[8]:PropElecCarbon[1] + RunResultsW[8]:PropNatGasCarbon[1] + RunResultsW[8]:PropOtherCarbon[1]  }

  ; Exterior
   "Calculate Carbon-W - Elec   - Ext"      Proj:RunResultsW[9]:PropElecCarbon[1]   = {   if (LocalRef( RunResultsW[9]:PropElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ExtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Ext" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-W - NatGas - Ext"      Proj:RunResultsW[9]:PropNatGasCarbon[1] = {   if (LocalRef( RunResultsW[9]:PropNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Other  - Ext"      Proj:RunResultsW[9]:PropOtherCarbon[1]  = {   if (LocalRef( RunResultsW[9]:PropOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Proposed-W", "MtrOther",  "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-W - Total  - Ext"      Proj:RunResultsW[9]:PropTotalCarbon[1]  = {   RunResultsW[9]:PropElecCarbon[1] + RunResultsW[9]:PropNatGasCarbon[1] + RunResultsW[9]:PropOtherCarbon[1]  }

;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[5]:PropPVScaleFactor > 0 )==0) then  MessageBox( "RunID: %s, PropPVScaleFactor undefined", "Proposed-W" )
;                           else  MessageBox( "RunID: %s, ResultSummary[5]:PropPVScaleFactor = %g", RunID, ResultSummary[5]:PropPVScaleFactor )  endif  }
;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[5]:TargetDRtgPVMult > 0 )==0) then  MessageBox( "RunID: %s, TargetDRtgPVMult undefined", RunID )
;                           else  MessageBox( "RunID: %s, ResultSummary[5]:TargetDRtgPVMult = %g", RunID, ResultSummary[5]:TargetDRtgPVMult )  endif  }
;"testing" Proj:Action = {  if (IfValidAnd( ResultSummary[5]:PropPVScaleFactor != 1 )==0 .OR.
;                               ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND. IfValidAnd( ResultSummary[5]:TargetDRtgPVMult > 0 ) )) then  UNCHANGED
;                           else  MessageBox( "%s PV scaling of %g", RunID, ResultSummary[5]:PropPVScaleFactor )  endif  }
  ; PV
   "Store negative PV 8760-W"               Proj:RunResultsW[13]:Action              ={   if (IfValidAnd( ResultSummary[5]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[5]:TargetDRtgPVMult > 0 ) )) then UNCHANGED
                                                                                          else  ApplyHourlyResultMultipliers( "NegPV", "none", -1.0, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "PV" )
                                                                                          endif  }
   "Store scaled PV 8760-W"                 Proj:RunResultsW[13]:Action              ={   if (IfValidAnd( ResultSummary[5]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[5]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  ApplyHourlyResultMultipliers( "ScldPV", "none",                                1.0, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "PV" )
                                                                                          else  ApplyHourlyResultMultipliers( "ScldPV", "none", ResultSummary[5]:PropPVScaleFactor, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "PV" )
                                                                                          endif  }
   "Calculate Carbon-W - Elec   - PV"       Proj:RunResultsW[13]:PropElecCarbon[1]   ={   if (LocalRef( RunResultsW[13]:PropElecEnergy[1]   ) > -0.0001) then  0
                                                                                          else if (CommunitySolarProjID > 0 .AND. IfValidAnd( CmntySlr_CO2 < 0 )) then  CmntySlr_CO2 * PVWDCSizeMultiplier[1] / 1000 / CondFloorArea
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "PVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "ScldPV" ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon-W - NatGas - PV"       Proj:RunResultsW[13]:PropNatGasCarbon[1] ={   0  }
   "Calculate Carbon-W - Other  - PV"       Proj:RunResultsW[13]:PropOtherCarbon[1]  ={   0  }
   "Calculate Carbon-W - Total  - PV"       Proj:RunResultsW[13]:PropTotalCarbon[1]  ={   RunResultsW[13]:PropElecCarbon[1]  }

  ; Battery
;   "Store negative BT 8760-W"    Proj:RunResultsW[14]:Action    ={   if (IfValidAnd( RunResultsW[14]:PropElecEnergy[1] != 0 )==0) then UNCHANGED
;                                                                     else  ApplyHourlyResultMultipliers_Neg( "NegBT", "none", 1.0, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "BT" )  endif  }
   "Calculate Carbon-W - Elec   - Battery"  Proj:RunResultsW[14]:PropElecCarbon[1]   ={   if (LocalRef( RunResultsW[14]:PropElecEnergy[1]   ) = 0) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "BTEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "BT" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-W - NatGas - Battery"  Proj:RunResultsW[14]:PropNatGasCarbon[1] ={   0  }
   "Calculate Carbon-W - Other  - Battery"  Proj:RunResultsW[14]:PropOtherCarbon[1]  ={   0  }
   "Calculate Carbon-W - Total  - Battery"  Proj:RunResultsW[14]:PropTotalCarbon[1]  ={   RunResultsW[14]:PropElecCarbon[1]  }

  ; Compliance Total
   "Calculate Carbon-W - Elec   - Comp Ttl" Proj:RunResultsW[11]:PropElecCarbon[1]   ={	RunResultsW[1]:PropElecCarbon[1]   + RunResultsW[2]:PropElecCarbon[1]   + RunResultsW[3]:PropElecCarbon[1]   + RunResultsW[4]:PropElecCarbon[1]   + RunResultsW[5]:PropElecCarbon[1]     }
   "Calculate Carbon-W - NatGas - Comp Ttl" Proj:RunResultsW[11]:PropNatGasCarbon[1] ={	RunResultsW[1]:PropNatGasCarbon[1] + RunResultsW[2]:PropNatGasCarbon[1] + RunResultsW[3]:PropNatGasCarbon[1] + RunResultsW[4]:PropNatGasCarbon[1] + RunResultsW[5]:PropNatGasCarbon[1]   }
   "Calculate Carbon-W - Other  - Comp Ttl" Proj:RunResultsW[11]:PropOtherCarbon[1]  ={	RunResultsW[1]:PropOtherCarbon[1]  + RunResultsW[2]:PropOtherCarbon[1]  + RunResultsW[3]:PropOtherCarbon[1]  + RunResultsW[4]:PropOtherCarbon[1]  + RunResultsW[5]:PropOtherCarbon[1]    }
   "Calculate Carbon-W - TOTAL  - Comp Ttl" Proj:RunResultsW[11]:PropTotalCarbon[1]  ={	RunResultsW[1]:PropTotalCarbon[1]  + RunResultsW[2]:PropTotalCarbon[1]  + RunResultsW[3]:PropTotalCarbon[1]  + RunResultsW[4]:PropTotalCarbon[1]  + RunResultsW[5]:PropTotalCarbon[1]    }

  ; Total
   "Calculate Carbon-W - Elec   - Total"    Proj:RunResultsW[10]:PropElecCarbon[1]   ={	RunResultsW[11]:PropElecCarbon[1]   + RunResultsW[6]:PropElecCarbon[1]   + RunResultsW[7]:PropElecCarbon[1]   + RunResultsW[8]:PropElecCarbon[1]   + RunResultsW[9]:PropElecCarbon[1]   + RunResultsW[13]:PropElecCarbon[1]   + RunResultsW[14]:PropElecCarbon[1]     }
   "Calculate Carbon-W - NatGas - Total"    Proj:RunResultsW[10]:PropNatGasCarbon[1] ={	RunResultsW[11]:PropNatGasCarbon[1] + RunResultsW[6]:PropNatGasCarbon[1] + RunResultsW[7]:PropNatGasCarbon[1] + RunResultsW[8]:PropNatGasCarbon[1] + RunResultsW[9]:PropNatGasCarbon[1] + RunResultsW[13]:PropNatGasCarbon[1] + RunResultsW[14]:PropNatGasCarbon[1]   }
   "Calculate Carbon-W - Other  - Total"    Proj:RunResultsW[10]:PropOtherCarbon[1]  ={	RunResultsW[11]:PropOtherCarbon[1]  + RunResultsW[6]:PropOtherCarbon[1]  + RunResultsW[7]:PropOtherCarbon[1]  + RunResultsW[8]:PropOtherCarbon[1]  + RunResultsW[9]:PropOtherCarbon[1]  + RunResultsW[13]:PropOtherCarbon[1]  + RunResultsW[14]:PropOtherCarbon[1]    }
   "Calculate Carbon-W - TOTAL  - Total"    Proj:RunResultsW[10]:PropTotalCarbon[1]  ={	RunResultsW[11]:PropTotalCarbon[1]  + RunResultsW[6]:PropTotalCarbon[1]  + RunResultsW[7]:PropTotalCarbon[1]  + RunResultsW[8]:PropTotalCarbon[1]  + RunResultsW[9]:PropTotalCarbon[1]  + RunResultsW[13]:PropTotalCarbon[1]  + RunResultsW[14]:PropTotalCarbon[1]    }

  ; Summary values
   "Calculate PropElecCarbon[1]-elec-W"   Proj:ResultSummary[5]:PropElecCarbon[1]   = {   if (CommunitySolarProjID > 0 .AND. IfValidAnd( CmntySlr_CO2 < 0 ))
                                                                                          then  RunResultsW[10]:PropElecCarbon[1] * CondFloorArea
                                                                                          else if (IfValidAnd( ResultSummary[5]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                                   ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                     IfValidAnd( ResultSummary[5]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif endif  }
   "Calculate PropFuelCarbon[1]-othr-W"   Proj:ResultSummary[5]:PropFuelCarbon[1]   = {   (CondFloorArea * (RunResultsW[10]:PropNatGasCarbon[1] + RunResultsW[10]:PropOtherCarbon[1]))  }
   "Calculate PropFinalCarbon[1]-W"       Proj:ResultSummary[5]:PropFinalCarbon[1]  = {   ResultSummary[5]:PropElecCarbon[1] + ResultSummary[5]:PropFuelCarbon[1]  }
   "Calculate PropExportCarbon[1]-W"      Proj:ResultSummary[5]:PropExportCarbon[1] = {   if (IfValidAnd( ResultSummary[5]:PropPVScaleFactor != 1 )==0 .OR.
                                                                                              ( IfValidAnd( SpecifyTargetDRtg > 0 ) .AND. LocalStatus( TargetDesignRtgInp ) > 0 .AND.
                                                                                                IfValidAnd( ResultSummary[5]:TargetDRtgPVMult > 0 ) ))
                                                                                          then  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PropSelfConsCarbon[1]-W"    Proj:ResultSummary[5]:PropSelfConsCarbon[1] ={  if (IfValidAnd( RunResultsW[14]:PropElecEnergy[1] != 0 )==0)
                                                                                          then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[5]:PropExportCarbon[1]
                                                                                          else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Proposed-W", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[5]:PropExportCarbon[1]
                                                                                          endif  }
   "Calculate PropNoSolFlxCarbon[1]-W"    Proj:ResultSummary[5]:PropNoSolFlxCarbon[1] ={  (RunResultsW[10]:PropTotalCarbon[1] - RunResultsW[13]:PropTotalCarbon[1] - RunResultsW[14]:PropTotalCarbon[1]) * CondFloorArea  }
   "Calculate PropExclExpCarbon[1]-W"     Proj:ResultSummary[5]:PropExclExpCarbon[1]  ={  ResultSummary[5]:PropNoSolFlxCarbon[1] - ResultSummary[5]:PropSelfConsCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)

  ; SAC 1/15/18 - round carbon emissions values for display
   "Call rulelist to round carbon emissions results"  Proj:Action = {   EvalRulelist( "CARes_RoundResults_ProposedCarbon_NESW" )  }

   ; copy orient-specific Prop Carbon results to each ResultSummary object
   "Set ResultSummary[1]:PropFinalCarbon[2]"    Proj:ResultSummary[1]:PropFinalCarbon[2]     = {  ResultSummary[2]:PropFinalCarbon[1]     }
   "Set ResultSummary[1]:PropExportCarbon[2]"   Proj:ResultSummary[1]:PropExportCarbon[2]    = {  ResultSummary[2]:PropExportCarbon[1]    }
   "Set ResultSummary[1]:PropExportCO2Str[2]"   Proj:ResultSummary[1]:PropExportCO2Str[2]    = {  ResultSummary[2]:PropExportCO2Str[1]    }
   "Set ResultSummary[1]:PropSelfConsCarbon[2]" Proj:ResultSummary[1]:PropSelfConsCarbon[2]  = {  ResultSummary[2]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[1]:PropSelfConsCO2Str[2]" Proj:ResultSummary[1]:PropSelfConsCO2Str[2]  = {  ResultSummary[2]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[1]:PropNoSolFlxCarbon[2]" Proj:ResultSummary[1]:PropNoSolFlxCarbon[2]  = {  ResultSummary[2]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[1]:PropFinalCarbon[3]"    Proj:ResultSummary[1]:PropFinalCarbon[3]     = {  ResultSummary[3]:PropFinalCarbon[1]     }
   "Set ResultSummary[1]:PropExportCarbon[3]"   Proj:ResultSummary[1]:PropExportCarbon[3]    = {  ResultSummary[3]:PropExportCarbon[1]    }
   "Set ResultSummary[1]:PropExportCO2Str[3]"   Proj:ResultSummary[1]:PropExportCO2Str[3]    = {  ResultSummary[3]:PropExportCO2Str[1]    }
   "Set ResultSummary[1]:PropSelfConsCarbon[3]" Proj:ResultSummary[1]:PropSelfConsCarbon[3]  = {  ResultSummary[3]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[1]:PropSelfConsCO2Str[3]" Proj:ResultSummary[1]:PropSelfConsCO2Str[3]  = {  ResultSummary[3]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[1]:PropNoSolFlxCarbon[3]" Proj:ResultSummary[1]:PropNoSolFlxCarbon[3]  = {  ResultSummary[3]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[1]:PropFinalCarbon[4]"    Proj:ResultSummary[1]:PropFinalCarbon[4]     = {  ResultSummary[4]:PropFinalCarbon[1]     }
   "Set ResultSummary[1]:PropExportCarbon[4]"   Proj:ResultSummary[1]:PropExportCarbon[4]    = {  ResultSummary[4]:PropExportCarbon[1]    }
   "Set ResultSummary[1]:PropExportCO2Str[4]"   Proj:ResultSummary[1]:PropExportCO2Str[4]    = {  ResultSummary[4]:PropExportCO2Str[1]    }
   "Set ResultSummary[1]:PropSelfConsCarbon[4]" Proj:ResultSummary[1]:PropSelfConsCarbon[4]  = {  ResultSummary[4]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[1]:PropSelfConsCO2Str[4]" Proj:ResultSummary[1]:PropSelfConsCO2Str[4]  = {  ResultSummary[4]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[1]:PropNoSolFlxCarbon[4]" Proj:ResultSummary[1]:PropNoSolFlxCarbon[4]  = {  ResultSummary[4]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[1]:PropFinalCarbon[5]"    Proj:ResultSummary[1]:PropFinalCarbon[5]     = {  ResultSummary[5]:PropFinalCarbon[1]     }
   "Set ResultSummary[1]:PropExportCarbon[5]"   Proj:ResultSummary[1]:PropExportCarbon[5]    = {  ResultSummary[5]:PropExportCarbon[1]    }
   "Set ResultSummary[1]:PropExportCO2Str[5]"   Proj:ResultSummary[1]:PropExportCO2Str[5]    = {  ResultSummary[5]:PropExportCO2Str[1]    }
   "Set ResultSummary[1]:PropSelfConsCarbon[5]" Proj:ResultSummary[1]:PropSelfConsCarbon[5]  = {  ResultSummary[5]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[1]:PropSelfConsCO2Str[5]" Proj:ResultSummary[1]:PropSelfConsCO2Str[5]  = {  ResultSummary[5]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[1]:PropNoSolFlxCarbon[5]" Proj:ResultSummary[1]:PropNoSolFlxCarbon[5]  = {  ResultSummary[5]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[1]:PropExclExpCarbon[2]"  Proj:ResultSummary[1]:PropExclExpCarbon[2]   = {  ResultSummary[2]:PropExclExpCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
   "Set ResultSummary[1]:PropExclExpCarbon[3]"  Proj:ResultSummary[1]:PropExclExpCarbon[3]   = {  ResultSummary[3]:PropExclExpCarbon[1]   }
   "Set ResultSummary[1]:PropExclExpCarbon[4]"  Proj:ResultSummary[1]:PropExclExpCarbon[4]   = {  ResultSummary[4]:PropExclExpCarbon[1]   }
   "Set ResultSummary[1]:PropExclExpCarbon[5]"  Proj:ResultSummary[1]:PropExclExpCarbon[5]   = {  ResultSummary[5]:PropExclExpCarbon[1]   }
   "Set ResultSummary[1]:PropExclExpCO2Str[2]"  Proj:ResultSummary[1]:PropExclExpCO2Str[2]   = {  ResultSummary[2]:PropExclExpCO2Str[1]   }  ; SAC 7/17/20
   "Set ResultSummary[1]:PropExclExpCO2Str[3]"  Proj:ResultSummary[1]:PropExclExpCO2Str[3]   = {  ResultSummary[3]:PropExclExpCO2Str[1]   }
   "Set ResultSummary[1]:PropExclExpCO2Str[4]"  Proj:ResultSummary[1]:PropExclExpCO2Str[4]   = {  ResultSummary[4]:PropExclExpCO2Str[1]   }
   "Set ResultSummary[1]:PropExclExpCO2Str[5]"  Proj:ResultSummary[1]:PropExclExpCO2Str[5]   = {  ResultSummary[5]:PropExclExpCO2Str[1]   }

   "Set ResultSummary[2]:PropFinalCarbon[2]"    Proj:ResultSummary[2]:PropFinalCarbon[2]     = {  ResultSummary[2]:PropFinalCarbon[1]     }
   "Set ResultSummary[2]:PropExportCarbon[2]"   Proj:ResultSummary[2]:PropExportCarbon[2]    = {  ResultSummary[2]:PropExportCarbon[1]    }
   "Set ResultSummary[2]:PropExportCO2Str[2]"   Proj:ResultSummary[2]:PropExportCO2Str[2]    = {  ResultSummary[2]:PropExportCO2Str[1]    }
   "Set ResultSummary[2]:PropSelfConsCarbon[2]" Proj:ResultSummary[2]:PropSelfConsCarbon[2]  = {  ResultSummary[2]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[2]:PropSelfConsCO2Str[2]" Proj:ResultSummary[2]:PropSelfConsCO2Str[2]  = {  ResultSummary[2]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[2]:PropNoSolFlxCarbon[2]" Proj:ResultSummary[2]:PropNoSolFlxCarbon[2]  = {  ResultSummary[2]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[2]:PropFinalCarbon[3]"    Proj:ResultSummary[2]:PropFinalCarbon[3]     = {  ResultSummary[3]:PropFinalCarbon[1]     }
   "Set ResultSummary[2]:PropExportCarbon[3]"   Proj:ResultSummary[2]:PropExportCarbon[3]    = {  ResultSummary[3]:PropExportCarbon[1]    }
   "Set ResultSummary[2]:PropExportCO2Str[3]"   Proj:ResultSummary[2]:PropExportCO2Str[3]    = {  ResultSummary[3]:PropExportCO2Str[1]    }
   "Set ResultSummary[2]:PropSelfConsCarbon[3]" Proj:ResultSummary[2]:PropSelfConsCarbon[3]  = {  ResultSummary[3]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[2]:PropSelfConsCO2Str[3]" Proj:ResultSummary[2]:PropSelfConsCO2Str[3]  = {  ResultSummary[3]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[2]:PropNoSolFlxCarbon[3]" Proj:ResultSummary[2]:PropNoSolFlxCarbon[3]  = {  ResultSummary[3]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[2]:PropFinalCarbon[4]"    Proj:ResultSummary[2]:PropFinalCarbon[4]     = {  ResultSummary[4]:PropFinalCarbon[1]     }
   "Set ResultSummary[2]:PropExportCarbon[4]"   Proj:ResultSummary[2]:PropExportCarbon[4]    = {  ResultSummary[4]:PropExportCarbon[1]    }
   "Set ResultSummary[2]:PropExportCO2Str[4]"   Proj:ResultSummary[2]:PropExportCO2Str[4]    = {  ResultSummary[4]:PropExportCO2Str[1]    }
   "Set ResultSummary[2]:PropSelfConsCarbon[4]" Proj:ResultSummary[2]:PropSelfConsCarbon[4]  = {  ResultSummary[4]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[2]:PropSelfConsCO2Str[4]" Proj:ResultSummary[2]:PropSelfConsCO2Str[4]  = {  ResultSummary[4]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[2]:PropNoSolFlxCarbon[4]" Proj:ResultSummary[2]:PropNoSolFlxCarbon[4]  = {  ResultSummary[4]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[2]:PropFinalCarbon[5]"    Proj:ResultSummary[2]:PropFinalCarbon[5]     = {  ResultSummary[5]:PropFinalCarbon[1]     }
   "Set ResultSummary[2]:PropExportCarbon[5]"   Proj:ResultSummary[2]:PropExportCarbon[5]    = {  ResultSummary[5]:PropExportCarbon[1]    }
   "Set ResultSummary[2]:PropExportCO2Str[5]"   Proj:ResultSummary[2]:PropExportCO2Str[5]    = {  ResultSummary[5]:PropExportCO2Str[1]    }
   "Set ResultSummary[2]:PropSelfConsCarbon[5]" Proj:ResultSummary[2]:PropSelfConsCarbon[5]  = {  ResultSummary[5]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[2]:PropSelfConsCO2Str[5]" Proj:ResultSummary[2]:PropSelfConsCO2Str[5]  = {  ResultSummary[5]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[2]:PropNoSolFlxCarbon[5]" Proj:ResultSummary[2]:PropNoSolFlxCarbon[5]  = {  ResultSummary[5]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[2]:PropExclExpCarbon[2]"  Proj:ResultSummary[2]:PropExclExpCarbon[2]   = {  ResultSummary[2]:PropExclExpCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
   "Set ResultSummary[2]:PropExclExpCarbon[3]"  Proj:ResultSummary[2]:PropExclExpCarbon[3]   = {  ResultSummary[3]:PropExclExpCarbon[1]   }
   "Set ResultSummary[2]:PropExclExpCarbon[4]"  Proj:ResultSummary[2]:PropExclExpCarbon[4]   = {  ResultSummary[4]:PropExclExpCarbon[1]   }
   "Set ResultSummary[2]:PropExclExpCarbon[5]"  Proj:ResultSummary[2]:PropExclExpCarbon[5]   = {  ResultSummary[5]:PropExclExpCarbon[1]   }
   "Set ResultSummary[2]:PropExclExpCO2Str[2]"  Proj:ResultSummary[2]:PropExclExpCO2Str[2]   = {  ResultSummary[2]:PropExclExpCO2Str[1]   }  ; SAC 7/17/20
   "Set ResultSummary[2]:PropExclExpCO2Str[3]"  Proj:ResultSummary[2]:PropExclExpCO2Str[3]   = {  ResultSummary[3]:PropExclExpCO2Str[1]   }
   "Set ResultSummary[2]:PropExclExpCO2Str[4]"  Proj:ResultSummary[2]:PropExclExpCO2Str[4]   = {  ResultSummary[4]:PropExclExpCO2Str[1]   }
   "Set ResultSummary[2]:PropExclExpCO2Str[5]"  Proj:ResultSummary[2]:PropExclExpCO2Str[5]   = {  ResultSummary[5]:PropExclExpCO2Str[1]   }

   "Set ResultSummary[3]:PropFinalCarbon[2]"    Proj:ResultSummary[3]:PropFinalCarbon[2]     = {  ResultSummary[2]:PropFinalCarbon[1]     }
   "Set ResultSummary[3]:PropExportCarbon[2]"   Proj:ResultSummary[3]:PropExportCarbon[2]    = {  ResultSummary[2]:PropExportCarbon[1]    }
   "Set ResultSummary[3]:PropExportCO2Str[2]"   Proj:ResultSummary[3]:PropExportCO2Str[2]    = {  ResultSummary[2]:PropExportCO2Str[1]    }
   "Set ResultSummary[3]:PropSelfConsCarbon[2]" Proj:ResultSummary[3]:PropSelfConsCarbon[2]  = {  ResultSummary[2]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[3]:PropSelfConsCO2Str[2]" Proj:ResultSummary[3]:PropSelfConsCO2Str[2]  = {  ResultSummary[2]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[3]:PropNoSolFlxCarbon[2]" Proj:ResultSummary[3]:PropNoSolFlxCarbon[2]  = {  ResultSummary[2]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[3]:PropFinalCarbon[3]"    Proj:ResultSummary[3]:PropFinalCarbon[3]     = {  ResultSummary[3]:PropFinalCarbon[1]     }
   "Set ResultSummary[3]:PropExportCarbon[3]"   Proj:ResultSummary[3]:PropExportCarbon[3]    = {  ResultSummary[3]:PropExportCarbon[1]    }
   "Set ResultSummary[3]:PropExportCO2Str[3]"   Proj:ResultSummary[3]:PropExportCO2Str[3]    = {  ResultSummary[3]:PropExportCO2Str[1]    }
   "Set ResultSummary[3]:PropSelfConsCarbon[3]" Proj:ResultSummary[3]:PropSelfConsCarbon[3]  = {  ResultSummary[3]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[3]:PropSelfConsCO2Str[3]" Proj:ResultSummary[3]:PropSelfConsCO2Str[3]  = {  ResultSummary[3]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[3]:PropNoSolFlxCarbon[3]" Proj:ResultSummary[3]:PropNoSolFlxCarbon[3]  = {  ResultSummary[3]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[3]:PropFinalCarbon[4]"    Proj:ResultSummary[3]:PropFinalCarbon[4]     = {  ResultSummary[4]:PropFinalCarbon[1]     }
   "Set ResultSummary[3]:PropExportCarbon[4]"   Proj:ResultSummary[3]:PropExportCarbon[4]    = {  ResultSummary[4]:PropExportCarbon[1]    }
   "Set ResultSummary[3]:PropExportCO2Str[4]"   Proj:ResultSummary[3]:PropExportCO2Str[4]    = {  ResultSummary[4]:PropExportCO2Str[1]    }
   "Set ResultSummary[3]:PropSelfConsCarbon[4]" Proj:ResultSummary[3]:PropSelfConsCarbon[4]  = {  ResultSummary[4]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[3]:PropSelfConsCO2Str[4]" Proj:ResultSummary[3]:PropSelfConsCO2Str[4]  = {  ResultSummary[4]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[3]:PropNoSolFlxCarbon[4]" Proj:ResultSummary[3]:PropNoSolFlxCarbon[4]  = {  ResultSummary[4]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[3]:PropFinalCarbon[5]"    Proj:ResultSummary[3]:PropFinalCarbon[5]     = {  ResultSummary[5]:PropFinalCarbon[1]     }
   "Set ResultSummary[3]:PropExportCarbon[5]"   Proj:ResultSummary[3]:PropExportCarbon[5]    = {  ResultSummary[5]:PropExportCarbon[1]    }
   "Set ResultSummary[3]:PropExportCO2Str[5]"   Proj:ResultSummary[3]:PropExportCO2Str[5]    = {  ResultSummary[5]:PropExportCO2Str[1]    }
   "Set ResultSummary[3]:PropSelfConsCarbon[5]" Proj:ResultSummary[3]:PropSelfConsCarbon[5]  = {  ResultSummary[5]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[3]:PropSelfConsCO2Str[5]" Proj:ResultSummary[3]:PropSelfConsCO2Str[5]  = {  ResultSummary[5]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[3]:PropNoSolFlxCarbon[5]" Proj:ResultSummary[3]:PropNoSolFlxCarbon[5]  = {  ResultSummary[5]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[3]:PropExclExpCarbon[2]"  Proj:ResultSummary[3]:PropExclExpCarbon[2]   = {  ResultSummary[2]:PropExclExpCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
   "Set ResultSummary[3]:PropExclExpCarbon[3]"  Proj:ResultSummary[3]:PropExclExpCarbon[3]   = {  ResultSummary[3]:PropExclExpCarbon[1]   }
   "Set ResultSummary[3]:PropExclExpCarbon[4]"  Proj:ResultSummary[3]:PropExclExpCarbon[4]   = {  ResultSummary[4]:PropExclExpCarbon[1]   }
   "Set ResultSummary[3]:PropExclExpCarbon[5]"  Proj:ResultSummary[3]:PropExclExpCarbon[5]   = {  ResultSummary[5]:PropExclExpCarbon[1]   }
   "Set ResultSummary[3]:PropExclExpCO2Str[2]"  Proj:ResultSummary[3]:PropExclExpCO2Str[2]   = {  ResultSummary[2]:PropExclExpCO2Str[1]   }  ; SAC 7/17/20
   "Set ResultSummary[3]:PropExclExpCO2Str[3]"  Proj:ResultSummary[3]:PropExclExpCO2Str[3]   = {  ResultSummary[3]:PropExclExpCO2Str[1]   }
   "Set ResultSummary[3]:PropExclExpCO2Str[4]"  Proj:ResultSummary[3]:PropExclExpCO2Str[4]   = {  ResultSummary[4]:PropExclExpCO2Str[1]   }
   "Set ResultSummary[3]:PropExclExpCO2Str[5]"  Proj:ResultSummary[3]:PropExclExpCO2Str[5]   = {  ResultSummary[5]:PropExclExpCO2Str[1]   }

   "Set ResultSummary[4]:PropFinalCarbon[2]"    Proj:ResultSummary[4]:PropFinalCarbon[2]     = {  ResultSummary[2]:PropFinalCarbon[1]     }
   "Set ResultSummary[4]:PropExportCarbon[2]"   Proj:ResultSummary[4]:PropExportCarbon[2]    = {  ResultSummary[2]:PropExportCarbon[1]    }
   "Set ResultSummary[4]:PropExportCO2Str[2]"   Proj:ResultSummary[4]:PropExportCO2Str[2]    = {  ResultSummary[2]:PropExportCO2Str[1]    }
   "Set ResultSummary[4]:PropSelfConsCarbon[2]" Proj:ResultSummary[4]:PropSelfConsCarbon[2]  = {  ResultSummary[2]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[4]:PropSelfConsCO2Str[2]" Proj:ResultSummary[4]:PropSelfConsCO2Str[2]  = {  ResultSummary[2]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[4]:PropNoSolFlxCarbon[2]" Proj:ResultSummary[4]:PropNoSolFlxCarbon[2]  = {  ResultSummary[2]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[4]:PropFinalCarbon[3]"    Proj:ResultSummary[4]:PropFinalCarbon[3]     = {  ResultSummary[3]:PropFinalCarbon[1]     }
   "Set ResultSummary[4]:PropExportCarbon[3]"   Proj:ResultSummary[4]:PropExportCarbon[3]    = {  ResultSummary[3]:PropExportCarbon[1]    }
   "Set ResultSummary[4]:PropExportCO2Str[3]"   Proj:ResultSummary[4]:PropExportCO2Str[3]    = {  ResultSummary[3]:PropExportCO2Str[1]    }
   "Set ResultSummary[4]:PropSelfConsCarbon[3]" Proj:ResultSummary[4]:PropSelfConsCarbon[3]  = {  ResultSummary[3]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[4]:PropSelfConsCO2Str[3]" Proj:ResultSummary[4]:PropSelfConsCO2Str[3]  = {  ResultSummary[3]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[4]:PropNoSolFlxCarbon[3]" Proj:ResultSummary[4]:PropNoSolFlxCarbon[3]  = {  ResultSummary[3]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[4]:PropFinalCarbon[4]"    Proj:ResultSummary[4]:PropFinalCarbon[4]     = {  ResultSummary[4]:PropFinalCarbon[1]     }
   "Set ResultSummary[4]:PropExportCarbon[4]"   Proj:ResultSummary[4]:PropExportCarbon[4]    = {  ResultSummary[4]:PropExportCarbon[1]    }
   "Set ResultSummary[4]:PropExportCO2Str[4]"   Proj:ResultSummary[4]:PropExportCO2Str[4]    = {  ResultSummary[4]:PropExportCO2Str[1]    }
   "Set ResultSummary[4]:PropSelfConsCarbon[4]" Proj:ResultSummary[4]:PropSelfConsCarbon[4]  = {  ResultSummary[4]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[4]:PropSelfConsCO2Str[4]" Proj:ResultSummary[4]:PropSelfConsCO2Str[4]  = {  ResultSummary[4]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[4]:PropNoSolFlxCarbon[4]" Proj:ResultSummary[4]:PropNoSolFlxCarbon[4]  = {  ResultSummary[4]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[4]:PropFinalCarbon[5]"    Proj:ResultSummary[4]:PropFinalCarbon[5]     = {  ResultSummary[5]:PropFinalCarbon[1]     }
   "Set ResultSummary[4]:PropExportCarbon[5]"   Proj:ResultSummary[4]:PropExportCarbon[5]    = {  ResultSummary[5]:PropExportCarbon[1]    }
   "Set ResultSummary[4]:PropExportCO2Str[5]"   Proj:ResultSummary[4]:PropExportCO2Str[5]    = {  ResultSummary[5]:PropExportCO2Str[1]    }
   "Set ResultSummary[4]:PropSelfConsCarbon[5]" Proj:ResultSummary[4]:PropSelfConsCarbon[5]  = {  ResultSummary[5]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[4]:PropSelfConsCO2Str[5]" Proj:ResultSummary[4]:PropSelfConsCO2Str[5]  = {  ResultSummary[5]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[4]:PropNoSolFlxCarbon[5]" Proj:ResultSummary[4]:PropNoSolFlxCarbon[5]  = {  ResultSummary[5]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[4]:PropExclExpCarbon[2]"  Proj:ResultSummary[4]:PropExclExpCarbon[2]   = {  ResultSummary[2]:PropExclExpCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
   "Set ResultSummary[4]:PropExclExpCarbon[3]"  Proj:ResultSummary[4]:PropExclExpCarbon[3]   = {  ResultSummary[3]:PropExclExpCarbon[1]   }
   "Set ResultSummary[4]:PropExclExpCarbon[4]"  Proj:ResultSummary[4]:PropExclExpCarbon[4]   = {  ResultSummary[4]:PropExclExpCarbon[1]   }
   "Set ResultSummary[4]:PropExclExpCarbon[5]"  Proj:ResultSummary[4]:PropExclExpCarbon[5]   = {  ResultSummary[5]:PropExclExpCarbon[1]   }
   "Set ResultSummary[4]:PropExclExpCO2Str[2]"  Proj:ResultSummary[4]:PropExclExpCO2Str[2]   = {  ResultSummary[2]:PropExclExpCO2Str[1]   }  ; SAC 7/17/20
   "Set ResultSummary[4]:PropExclExpCO2Str[3]"  Proj:ResultSummary[4]:PropExclExpCO2Str[3]   = {  ResultSummary[3]:PropExclExpCO2Str[1]   }
   "Set ResultSummary[4]:PropExclExpCO2Str[4]"  Proj:ResultSummary[4]:PropExclExpCO2Str[4]   = {  ResultSummary[4]:PropExclExpCO2Str[1]   }
   "Set ResultSummary[4]:PropExclExpCO2Str[5]"  Proj:ResultSummary[4]:PropExclExpCO2Str[5]   = {  ResultSummary[5]:PropExclExpCO2Str[1]   }

   "Set ResultSummary[5]:PropFinalCarbon[2]"    Proj:ResultSummary[5]:PropFinalCarbon[2]     = {  ResultSummary[2]:PropFinalCarbon[1]     }
   "Set ResultSummary[5]:PropExportCarbon[2]"   Proj:ResultSummary[5]:PropExportCarbon[2]    = {  ResultSummary[2]:PropExportCarbon[1]    }
   "Set ResultSummary[5]:PropExportCO2Str[2]"   Proj:ResultSummary[5]:PropExportCO2Str[2]    = {  ResultSummary[2]:PropExportCO2Str[1]    }
   "Set ResultSummary[5]:PropSelfConsCarbon[2]" Proj:ResultSummary[5]:PropSelfConsCarbon[2]  = {  ResultSummary[2]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[5]:PropSelfConsCO2Str[2]" Proj:ResultSummary[5]:PropSelfConsCO2Str[2]  = {  ResultSummary[2]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[5]:PropNoSolFlxCarbon[2]" Proj:ResultSummary[5]:PropNoSolFlxCarbon[2]  = {  ResultSummary[2]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[5]:PropFinalCarbon[3]"    Proj:ResultSummary[5]:PropFinalCarbon[3]     = {  ResultSummary[3]:PropFinalCarbon[1]     }
   "Set ResultSummary[5]:PropExportCarbon[3]"   Proj:ResultSummary[5]:PropExportCarbon[3]    = {  ResultSummary[3]:PropExportCarbon[1]    }
   "Set ResultSummary[5]:PropExportCO2Str[3]"   Proj:ResultSummary[5]:PropExportCO2Str[3]    = {  ResultSummary[3]:PropExportCO2Str[1]    }
   "Set ResultSummary[5]:PropSelfConsCarbon[3]" Proj:ResultSummary[5]:PropSelfConsCarbon[3]  = {  ResultSummary[3]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[5]:PropSelfConsCO2Str[3]" Proj:ResultSummary[5]:PropSelfConsCO2Str[3]  = {  ResultSummary[3]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[5]:PropNoSolFlxCarbon[3]" Proj:ResultSummary[5]:PropNoSolFlxCarbon[3]  = {  ResultSummary[3]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[5]:PropFinalCarbon[4]"    Proj:ResultSummary[5]:PropFinalCarbon[4]     = {  ResultSummary[4]:PropFinalCarbon[1]     }
   "Set ResultSummary[5]:PropExportCarbon[4]"   Proj:ResultSummary[5]:PropExportCarbon[4]    = {  ResultSummary[4]:PropExportCarbon[1]    }
   "Set ResultSummary[5]:PropExportCO2Str[4]"   Proj:ResultSummary[5]:PropExportCO2Str[4]    = {  ResultSummary[4]:PropExportCO2Str[1]    }
   "Set ResultSummary[5]:PropSelfConsCarbon[4]" Proj:ResultSummary[5]:PropSelfConsCarbon[4]  = {  ResultSummary[4]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[5]:PropSelfConsCO2Str[4]" Proj:ResultSummary[5]:PropSelfConsCO2Str[4]  = {  ResultSummary[4]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[5]:PropNoSolFlxCarbon[4]" Proj:ResultSummary[5]:PropNoSolFlxCarbon[4]  = {  ResultSummary[4]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[5]:PropFinalCarbon[5]"    Proj:ResultSummary[5]:PropFinalCarbon[5]     = {  ResultSummary[5]:PropFinalCarbon[1]     }
   "Set ResultSummary[5]:PropExportCarbon[5]"   Proj:ResultSummary[5]:PropExportCarbon[5]    = {  ResultSummary[5]:PropExportCarbon[1]    }
   "Set ResultSummary[5]:PropExportCO2Str[5]"   Proj:ResultSummary[5]:PropExportCO2Str[5]    = {  ResultSummary[5]:PropExportCO2Str[1]    }
   "Set ResultSummary[5]:PropSelfConsCarbon[5]" Proj:ResultSummary[5]:PropSelfConsCarbon[5]  = {  ResultSummary[5]:PropSelfConsCarbon[1]  }
   "Set ResultSummary[5]:PropSelfConsCO2Str[5]" Proj:ResultSummary[5]:PropSelfConsCO2Str[5]  = {  ResultSummary[5]:PropSelfConsCO2Str[1]  }
   "Set ResultSummary[5]:PropNoSolFlxCarbon[5]" Proj:ResultSummary[5]:PropNoSolFlxCarbon[5]  = {  ResultSummary[5]:PropNoSolFlxCarbon[1]  }
   "Set ResultSummary[5]:PropExclExpCarbon[2]"  Proj:ResultSummary[5]:PropExclExpCarbon[2]   = {  ResultSummary[2]:PropExclExpCarbon[1]   }  ; SAC 6/30/18 - (tic #1028)
   "Set ResultSummary[5]:PropExclExpCarbon[3]"  Proj:ResultSummary[5]:PropExclExpCarbon[3]   = {  ResultSummary[3]:PropExclExpCarbon[1]   }
   "Set ResultSummary[5]:PropExclExpCarbon[4]"  Proj:ResultSummary[5]:PropExclExpCarbon[4]   = {  ResultSummary[4]:PropExclExpCarbon[1]   }
   "Set ResultSummary[5]:PropExclExpCarbon[5]"  Proj:ResultSummary[5]:PropExclExpCarbon[5]   = {  ResultSummary[5]:PropExclExpCarbon[1]   }
   "Set ResultSummary[5]:PropExclExpCO2Str[2]"  Proj:ResultSummary[5]:PropExclExpCO2Str[2]   = {  ResultSummary[2]:PropExclExpCO2Str[1]   }  ; SAC 7/17/20 (CommunitySolar)
   "Set ResultSummary[5]:PropExclExpCO2Str[3]"  Proj:ResultSummary[5]:PropExclExpCO2Str[3]   = {  ResultSummary[3]:PropExclExpCO2Str[1]   }
   "Set ResultSummary[5]:PropExclExpCO2Str[4]"  Proj:ResultSummary[5]:PropExclExpCO2Str[4]   = {  ResultSummary[4]:PropExclExpCO2Str[1]   }
   "Set ResultSummary[5]:PropExclExpCO2Str[5]"  Proj:ResultSummary[5]:PropExclExpCO2Str[5]   = {  ResultSummary[5]:PropExclExpCO2Str[1]   }

   ; zero-out first array for each ResultSummary
   "Set ResultSummary[1]:PropFinalCarbon[1]"    Proj:ResultSummary[1]:PropFinalCarbon[1]     = {  UNDEFINED  }
   "Set ResultSummary[1]:PropExportCarbon[1]"   Proj:ResultSummary[1]:PropExportCarbon[1]    = {  UNDEFINED  }
   "Set ResultSummary[1]:PropExportCO2Str[1]"   Proj:ResultSummary[1]:PropExportCO2Str[1]    = {  UNDEFINED  }
   "Set ResultSummary[1]:PropSelfConsCarbon[1]" Proj:ResultSummary[1]:PropSelfConsCarbon[1]  = {  UNDEFINED  }
   "Set ResultSummary[1]:PropSelfConsCO2Str[1]" Proj:ResultSummary[1]:PropSelfConsCO2Str[1]  = {  UNDEFINED  }
   "Set ResultSummary[1]:PropNoSolFlxCarbon[1]" Proj:ResultSummary[1]:PropNoSolFlxCarbon[1]  = {  UNDEFINED  }
   "Set ResultSummary[1]:PropExclExpCarbon[1]"  Proj:ResultSummary[1]:PropExclExpCarbon[1]   = {  UNDEFINED  }  ; SAC 6/30/18 - (tic #1028)
   "Set ResultSummary[1]:PropExclExpCO2Str[1]"  Proj:ResultSummary[1]:PropExclExpCO2Str[1]   = {  UNDEFINED  }

   "Set ResultSummary[2]:PropFinalCarbon[1]"    Proj:ResultSummary[2]:PropFinalCarbon[1]     = {  UNDEFINED  }
   "Set ResultSummary[2]:PropExportCarbon[1]"   Proj:ResultSummary[2]:PropExportCarbon[1]    = {  UNDEFINED  }
   "Set ResultSummary[2]:PropExportCO2Str[1]"   Proj:ResultSummary[2]:PropExportCO2Str[1]    = {  UNDEFINED  }
   "Set ResultSummary[2]:PropSelfConsCarbon[1]" Proj:ResultSummary[2]:PropSelfConsCarbon[1]  = {  UNDEFINED  }
   "Set ResultSummary[2]:PropSelfConsCO2Str[1]" Proj:ResultSummary[2]:PropSelfConsCO2Str[1]  = {  UNDEFINED  }
   "Set ResultSummary[2]:PropNoSolFlxCarbon[1]" Proj:ResultSummary[2]:PropNoSolFlxCarbon[1]  = {  UNDEFINED  }
   "Set ResultSummary[2]:PropExclExpCarbon[1]"  Proj:ResultSummary[2]:PropExclExpCarbon[1]   = {  UNDEFINED  }
   "Set ResultSummary[2]:PropExclExpCO2Str[1]"  Proj:ResultSummary[2]:PropExclExpCO2Str[1]   = {  UNDEFINED  }

   "Set ResultSummary[3]:PropFinalCarbon[1]"    Proj:ResultSummary[3]:PropFinalCarbon[1]     = {  UNDEFINED  }
   "Set ResultSummary[3]:PropExportCarbon[1]"   Proj:ResultSummary[3]:PropExportCarbon[1]    = {  UNDEFINED  }
   "Set ResultSummary[3]:PropExportCO2Str[1]"   Proj:ResultSummary[3]:PropExportCO2Str[1]    = {  UNDEFINED  }
   "Set ResultSummary[3]:PropSelfConsCarbon[1]" Proj:ResultSummary[3]:PropSelfConsCarbon[1]  = {  UNDEFINED  }
   "Set ResultSummary[3]:PropSelfConsCO2Str[1]" Proj:ResultSummary[3]:PropSelfConsCO2Str[1]  = {  UNDEFINED  }
   "Set ResultSummary[3]:PropNoSolFlxCarbon[1]" Proj:ResultSummary[3]:PropNoSolFlxCarbon[1]  = {  UNDEFINED  }
   "Set ResultSummary[3]:PropExclExpCarbon[1]"  Proj:ResultSummary[3]:PropExclExpCarbon[1]   = {  UNDEFINED  }
   "Set ResultSummary[3]:PropExclExpCO2Str[1]"  Proj:ResultSummary[3]:PropExclExpCO2Str[1]   = {  UNDEFINED  }

   "Set ResultSummary[4]:PropFinalCarbon[1]"    Proj:ResultSummary[4]:PropFinalCarbon[1]     = {  UNDEFINED  }
   "Set ResultSummary[4]:PropExportCarbon[1]"   Proj:ResultSummary[4]:PropExportCarbon[1]    = {  UNDEFINED  }
   "Set ResultSummary[4]:PropExportCO2Str[1]"   Proj:ResultSummary[4]:PropExportCO2Str[1]    = {  UNDEFINED  }
   "Set ResultSummary[4]:PropSelfConsCarbon[1]" Proj:ResultSummary[4]:PropSelfConsCarbon[1]  = {  UNDEFINED  }
   "Set ResultSummary[4]:PropSelfConsCO2Str[1]" Proj:ResultSummary[4]:PropSelfConsCO2Str[1]  = {  UNDEFINED  }
   "Set ResultSummary[4]:PropNoSolFlxCarbon[1]" Proj:ResultSummary[4]:PropNoSolFlxCarbon[1]  = {  UNDEFINED  }
   "Set ResultSummary[4]:PropExclExpCarbon[1]"  Proj:ResultSummary[4]:PropExclExpCarbon[1]   = {  UNDEFINED  }
   "Set ResultSummary[4]:PropExclExpCO2Str[1]"  Proj:ResultSummary[4]:PropExclExpCO2Str[1]   = {  UNDEFINED  }

   "Set ResultSummary[5]:PropFinalCarbon[1]"    Proj:ResultSummary[5]:PropFinalCarbon[1]     = {  UNDEFINED  }
   "Set ResultSummary[5]:PropExportCarbon[1]"   Proj:ResultSummary[5]:PropExportCarbon[1]    = {  UNDEFINED  }
   "Set ResultSummary[5]:PropExportCO2Str[1]"   Proj:ResultSummary[5]:PropExportCO2Str[1]    = {  UNDEFINED  }
   "Set ResultSummary[5]:PropSelfConsCarbon[1]" Proj:ResultSummary[5]:PropSelfConsCarbon[1]  = {  UNDEFINED  }
   "Set ResultSummary[5]:PropSelfConsCO2Str[1]" Proj:ResultSummary[5]:PropSelfConsCO2Str[1]  = {  UNDEFINED  }
   "Set ResultSummary[5]:PropNoSolFlxCarbon[1]" Proj:ResultSummary[5]:PropNoSolFlxCarbon[1]  = {  UNDEFINED  }
   "Set ResultSummary[5]:PropExclExpCarbon[1]"  Proj:ResultSummary[5]:PropExclExpCarbon[1]   = {  UNDEFINED  }
   "Set ResultSummary[5]:PropExclExpCO2Str[1]"  Proj:ResultSummary[5]:PropExclExpCO2Str[1]   = {  UNDEFINED  }
END
;*************************************************************************


;*************************************************************************  - SAC 10/5/17
RULELIST "CARes_PropFlexResults_Carbon_N" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)

  ; PV 8760s
   "Store negative PV 8760-N"    Proj:RunResultsN[13]:Action    ={   if (IfValidAnd( ResultSummary[2]:PFlxPVScaleFactor > 0 )==0) then UNCHANGED
                                                                     else  ApplyHourlyResultMultipliers( "NegPV", "none", -1.0, 1, "none", 0, 0, "PropFlex-N", "MtrElec",   "PV" )
                                                                     endif  }
   "Store scaled PV 8760-N"      Proj:RunResultsN[13]:Action    ={   if (IfValidAnd( ResultSummary[2]:PFlxPVScaleFactor > 0 )==0)
                                                                     then  ApplyHourlyResultMultipliers( "ScldPV", "none",                                1.0, 1, "none", 0, 0, "PropFlex-N", "MtrElec",   "PV" )
                                                                     else  ApplyHourlyResultMultipliers( "ScldPV", "none", ResultSummary[2]:PFlxPVScaleFactor, 1, "none", 0, 0, "PropFlex-N", "MtrElec",   "PV" )
                                                                     endif  }
;   "Store negative BT 8760-N"    Proj:RunResultsN[14]:Action    ={   if (IfValidAnd( RunResultsN[14]:PFlxElecEnergy[1] != 0 )==0) then UNCHANGED
;                                                                     else  ApplyHourlyResultMultipliers_Neg( "NegBT", "none", 1.0, 1, "none", 0, 0, "PropFlex-N", "MtrElec",   "BT" )  endif  }

  ; Summary PropFlex values
   "Calculate PFlxFinalCarbon[1]-elec-N"  Proj:ResultSummary[2]:PFlxFinalCarbon[1]  = {   if (IfValidAnd( ResultSummary[2]:PFlxPVScaleFactor > 0 )==0)
                                                                                          then  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-N", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-N", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PFlxExportCarbon[1]-N"      Proj:ResultSummary[2]:PFlxExportCarbon[1] = {   if (IfValidAnd( ResultSummary[2]:PFlxPVScaleFactor > 0 )==0)
                                                                                          then  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-N", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-N", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PFlxSelfConsCarbon[1]-N"    Proj:ResultSummary[2]:PFlxSelfConsCarbon[1] ={  if (IfValidAnd( RunResultsN[14]:PFlxElecEnergy[1] != 0 )==0)
                                                                                          then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-N", "MtrElec",   "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[2]:PFlxExportCarbon[1]
                                                                                          else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-N", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[2]:PFlxExportCarbon[1]
                                                                                          endif  }
  ; calc & add in non-elec PropFlex carbon
   "Add into PFlxFinalCarbon[1]-N - NatGas - SpcHt"    Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[1]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrNatGas", "Htg", "HPBU", "Aux" ))  endif  }
   "Add into PFlxFinalCarbon[1]-N - Other  - SpcHt"    Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[1]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrOther",  "Htg", "HPBU", "Aux" ))  endif  }
   "Add into PFlxFinalCarbon[1]-N - NatGas - SpcCl"    Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[2]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrNatGas", "Clg" ))  endif  }
   "Add into PFlxFinalCarbon[1]-N - Other  - SpcCl"    Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[2]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrOther",  "Clg" ))  endif  }
   "Add into PFlxFinalCarbon[1]-N - NatGas - WtrHt"    Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[5]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrNatGas", "Dhw", "DhwBU" ))  endif  }
   "Add into PFlxFinalCarbon[1]-N - Other  - WtrHt"    Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[5]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrOther",  "Dhw", "DhwBU" ))  endif  }
   "Add into PFlxFinalCarbon[1]-N - NatGas - AppCkg"   Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[7]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ))  endif  }
   "Add into PFlxFinalCarbon[1]-N - Other  - AppCkg"   Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[7]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ))  endif  }
   "Add into PFlxFinalCarbon[1]-N - NatGas - Plugs"    Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[8]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrNatGas", "Rcp" ))  endif  }
   "Add into PFlxFinalCarbon[1]-N - Other  - Plugs"    Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[8]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrOther",  "Rcp" ))  endif  }
   "Add into PFlxFinalCarbon[1]-N - NatGas - Ext"      Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[9]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrNatGas", "Ext" ))  endif  }
   "Add into PFlxFinalCarbon[1]-N - Other  - Ext"      Proj:ResultSummary[2]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsN[9]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[2]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-N", "MtrOther",  "Ext" ))  endif  }

  ; Adjust Proposed Summary results based on PropFlex values
   "Adjust PropFinalCarbon[1]-N"      Proj:ResultSummary[2]:PropFinalCarbon[1]  = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[2]:PropFinalCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[2]:PFlxFinalCarbon[1] ) > 0)
         then  ResultSummary[2]:PropFinalCarbon[1] +
                  (PropFlexFrac * (ResultSummary[2]:PFlxFinalCarbon[1] -
                                   ResultSummary[2]:PropFinalCarbon[1]))
         else  UNCHANGED  endif  }
   "Adjust PropExportCarbon[1]-N"     Proj:ResultSummary[2]:PropExportCarbon[1] = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[2]:PropExportCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[2]:PFlxExportCarbon[1] ) > 0)
         then  ResultSummary[2]:PropExportCarbon[1] +
                  (PropFlexFrac * (ResultSummary[2]:PFlxExportCarbon[1] -
                                   ResultSummary[2]:PropExportCarbon[1]))
         else  UNCHANGED  endif  }
   "Adjust PropSelfConsCarbon[1]-N"   Proj:ResultSummary[2]:PropSelfConsCarbon[1] = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[2]:PropSelfConsCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[2]:PFlxSelfConsCarbon[1] ) > 0)
         then  ResultSummary[2]:PropSelfConsCarbon[1] +
                  (PropFlexFrac * (ResultSummary[2]:PFlxSelfConsCarbon[1] -
                                   ResultSummary[2]:PropSelfConsCarbon[1]))
         else  UNCHANGED  endif  }

   "Set PropSelfConsCO2Str[1]-N"    Proj:ResultSummary[2]:PropSelfConsCO2Str[1] =          ; SAC 7/17/20 (CommunitySolar)
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[2]:PropSelfConsCarbon[1], 2 )  endif  }
   "Set PropExportCO2Str[1]-N"      Proj:ResultSummary[2]:PropExportCO2Str[1] =    
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[2]:PropExportCarbon[1], 2 )  endif  }
END
;*************************************************************************

;*************************************************************************  - SAC 10/5/17
RULELIST "CARes_PropFlexResults_Carbon_E" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)

  ; PV 8760s
   "Store negative PV 8760-E"    Proj:RunResultsE[13]:Action    ={   if (IfValidAnd( ResultSummary[3]:PFlxPVScaleFactor > 0 )==0) then UNCHANGED
                                                                     else  ApplyHourlyResultMultipliers( "NegPV", "none", -1.0, 1, "none", 0, 0, "PropFlex-E", "MtrElec",   "PV" )
                                                                     endif  }
   "Store scaled PV 8760-E"      Proj:RunResultsE[13]:Action    ={   if (IfValidAnd( ResultSummary[3]:PFlxPVScaleFactor > 0 )==0)
                                                                     then  ApplyHourlyResultMultipliers( "ScldPV", "none",                                1.0, 1, "none", 0, 0, "PropFlex-E", "MtrElec",   "PV" )
                                                                     else  ApplyHourlyResultMultipliers( "ScldPV", "none", ResultSummary[3]:PFlxPVScaleFactor, 1, "none", 0, 0, "PropFlex-E", "MtrElec",   "PV" )
                                                                     endif  }
;   "Store negative BT 8760-E"    Proj:RunResultsE[14]:Action    ={   if (IfValidAnd( RunResultsE[14]:PFlxElecEnergy[1] != 0 )==0) then UNCHANGED
;                                                                     else  ApplyHourlyResultMultipliers_Neg( "NegBT", "none", 1.0, 1, "none", 0, 0, "PropFlex-E", "MtrElec",   "BT" )  endif  }

  ; Summary PropFlex values
   "Calculate PFlxFinalCarbon[1]-elec-E"  Proj:ResultSummary[3]:PFlxFinalCarbon[1]  = {   if (IfValidAnd( ResultSummary[3]:PFlxPVScaleFactor > 0 )==0)
                                                                                          then  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-E", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-E", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PFlxExportCarbon[1]-E"      Proj:ResultSummary[3]:PFlxExportCarbon[1] = {   if (IfValidAnd( ResultSummary[3]:PFlxPVScaleFactor > 0 )==0)
                                                                                          then  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-E", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-E", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PFlxSelfConsCarbon[1]-E"    Proj:ResultSummary[3]:PFlxSelfConsCarbon[1] ={  if (IfValidAnd( RunResultsE[14]:PFlxElecEnergy[1] != 0 )==0)
                                                                                          then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-E", "MtrElec",   "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[3]:PFlxExportCarbon[1]
                                                                                          else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-E", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[3]:PFlxExportCarbon[1]
                                                                                          endif  }
  ; calc & add in non-elec PropFlex carbon
   "Add into PFlxFinalCarbon[1]-E - NatGas - SpcHt"    Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[1]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrNatGas", "Htg", "HPBU", "Aux" ))  endif  }
   "Add into PFlxFinalCarbon[1]-E - Other  - SpcHt"    Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[1]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrOther",  "Htg", "HPBU", "Aux" ))  endif  }
   "Add into PFlxFinalCarbon[1]-E - NatGas - SpcCl"    Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[2]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrNatGas", "Clg" ))  endif  }
   "Add into PFlxFinalCarbon[1]-E - Other  - SpcCl"    Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[2]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrOther",  "Clg" ))  endif  }
   "Add into PFlxFinalCarbon[1]-E - NatGas - WtrHt"    Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[5]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrNatGas", "Dhw", "DhwBU" ))  endif  }
   "Add into PFlxFinalCarbon[1]-E - Other  - WtrHt"    Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[5]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrOther",  "Dhw", "DhwBU" ))  endif  }
   "Add into PFlxFinalCarbon[1]-E - NatGas - AppCkg"   Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[7]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ))  endif  }
   "Add into PFlxFinalCarbon[1]-E - Other  - AppCkg"   Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[7]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ))  endif  }
   "Add into PFlxFinalCarbon[1]-E - NatGas - Plugs"    Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[8]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrNatGas", "Rcp" ))  endif  }
   "Add into PFlxFinalCarbon[1]-E - Other  - Plugs"    Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[8]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrOther",  "Rcp" ))  endif  }
   "Add into PFlxFinalCarbon[1]-E - NatGas - Ext"      Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[9]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrNatGas", "Ext" ))  endif  }
   "Add into PFlxFinalCarbon[1]-E - Other  - Ext"      Proj:ResultSummary[3]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsE[9]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[3]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-E", "MtrOther",  "Ext" ))  endif  }

  ; Adjust Proposed Summary results based on PropFlex values
   "Adjust PropFinalCarbon[1]-E"      Proj:ResultSummary[3]:PropFinalCarbon[1]  = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[3]:PropFinalCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[3]:PFlxFinalCarbon[1] ) > 0)
         then  ResultSummary[3]:PropFinalCarbon[1] +
                  (PropFlexFrac * (ResultSummary[3]:PFlxFinalCarbon[1] -
                                   ResultSummary[3]:PropFinalCarbon[1]))
         else  UNCHANGED  endif  }
   "Adjust PropExportCarbon[1]-E"     Proj:ResultSummary[3]:PropExportCarbon[1] = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[3]:PropExportCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[3]:PFlxExportCarbon[1] ) > 0)
         then  ResultSummary[3]:PropExportCarbon[1] +
                  (PropFlexFrac * (ResultSummary[3]:PFlxExportCarbon[1] -
                                   ResultSummary[3]:PropExportCarbon[1]))
         else  UNCHANGED  endif  }
   "Adjust PropSelfConsCarbon[1]-E"   Proj:ResultSummary[3]:PropSelfConsCarbon[1] = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[3]:PropSelfConsCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[3]:PFlxSelfConsCarbon[1] ) > 0)
         then  ResultSummary[3]:PropSelfConsCarbon[1] +
                  (PropFlexFrac * (ResultSummary[3]:PFlxSelfConsCarbon[1] -
                                   ResultSummary[3]:PropSelfConsCarbon[1]))
         else  UNCHANGED  endif  }

   "Set PropSelfConsCO2Str[1]-E"    Proj:ResultSummary[3]:PropSelfConsCO2Str[1] =          ; SAC 7/17/20 (CommunitySolar)
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[3]:PropSelfConsCarbon[1], 2 )  endif  }
   "Set PropExportCO2Str[1]-E"      Proj:ResultSummary[3]:PropExportCO2Str[1] = 
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[3]:PropExportCarbon[1], 2 )  endif  }
END
;*************************************************************************

;*************************************************************************  - SAC 10/5/17
RULELIST "CARes_PropFlexResults_Carbon_S" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)

  ; PV 8760s
   "Store negative PV 8760-S"    Proj:RunResultsS[13]:Action    ={   if (IfValidAnd( ResultSummary[4]:PFlxPVScaleFactor > 0 )==0) then UNCHANGED
                                                                     else  ApplyHourlyResultMultipliers( "NegPV", "none", -1.0, 1, "none", 0, 0, "PropFlex-S", "MtrElec",   "PV" )
                                                                     endif  }
   "Store scaled PV 8760-S"      Proj:RunResultsS[13]:Action    ={   if (IfValidAnd( ResultSummary[4]:PFlxPVScaleFactor > 0 )==0)
                                                                     then  ApplyHourlyResultMultipliers( "ScldPV", "none",                                1.0, 1, "none", 0, 0, "PropFlex-S", "MtrElec",   "PV" )
                                                                     else  ApplyHourlyResultMultipliers( "ScldPV", "none", ResultSummary[4]:PFlxPVScaleFactor, 1, "none", 0, 0, "PropFlex-S", "MtrElec",   "PV" )
                                                                     endif  }
;   "Store negative BT 8760-S"    Proj:RunResultsS[14]:Action    ={   if (IfValidAnd( RunResultsS[14]:PFlxElecEnergy[1] != 0 )==0) then UNCHANGED
;                                                                     else  ApplyHourlyResultMultipliers_Neg( "NegBT", "none", 1.0, 1, "none", 0, 0, "PropFlex-S", "MtrElec",   "BT" )  endif  }

  ; Summary PropFlex values
   "Calculate PFlxFinalCarbon[1]-elec-S"  Proj:ResultSummary[4]:PFlxFinalCarbon[1]  = {   if (IfValidAnd( ResultSummary[4]:PFlxPVScaleFactor > 0 )==0)
                                                                                          then  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-S", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-S", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PFlxExportCarbon[1]-S"      Proj:ResultSummary[4]:PFlxExportCarbon[1] = {   if (IfValidAnd( ResultSummary[4]:PFlxPVScaleFactor > 0 )==0)
                                                                                          then  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-S", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-S", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PFlxSelfConsCarbon[1]-S"    Proj:ResultSummary[4]:PFlxSelfConsCarbon[1] ={  if (IfValidAnd( RunResultsS[14]:PFlxElecEnergy[1] != 0 )==0)
                                                                                          then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-S", "MtrElec",   "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[4]:PFlxExportCarbon[1]
                                                                                          else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-S", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[4]:PFlxExportCarbon[1]
                                                                                          endif  }
  ; calc & add in non-elec PropFlex carbon
   "Add into PFlxFinalCarbon[1]-S - NatGas - SpcHt"    Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[1]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrNatGas", "Htg", "HPBU", "Aux" ))  endif  }
   "Add into PFlxFinalCarbon[1]-S - Other  - SpcHt"    Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[1]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrOther",  "Htg", "HPBU", "Aux" ))  endif  }
   "Add into PFlxFinalCarbon[1]-S - NatGas - SpcCl"    Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[2]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrNatGas", "Clg" ))  endif  }
   "Add into PFlxFinalCarbon[1]-S - Other  - SpcCl"    Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[2]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrOther",  "Clg" ))  endif  }
   "Add into PFlxFinalCarbon[1]-S - NatGas - WtrHt"    Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[5]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrNatGas", "Dhw", "DhwBU" ))  endif  }
   "Add into PFlxFinalCarbon[1]-S - Other  - WtrHt"    Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[5]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrOther",  "Dhw", "DhwBU" ))  endif  }
   "Add into PFlxFinalCarbon[1]-S - NatGas - AppCkg"   Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[7]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ))  endif  }
   "Add into PFlxFinalCarbon[1]-S - Other  - AppCkg"   Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[7]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ))  endif  }
   "Add into PFlxFinalCarbon[1]-S - NatGas - Plugs"    Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[8]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrNatGas", "Rcp" ))  endif  }
   "Add into PFlxFinalCarbon[1]-S - Other  - Plugs"    Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[8]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrOther",  "Rcp" ))  endif  }
   "Add into PFlxFinalCarbon[1]-S - NatGas - Ext"      Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[9]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrNatGas", "Ext" ))  endif  }
   "Add into PFlxFinalCarbon[1]-S - Other  - Ext"      Proj:ResultSummary[4]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsS[9]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[4]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-S", "MtrOther",  "Ext" ))  endif  }

  ; Adjust Proposed Summary results based on PropFlex values
   "Adjust PropFinalCarbon[1]-S"      Proj:ResultSummary[4]:PropFinalCarbon[1]  = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[4]:PropFinalCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[4]:PFlxFinalCarbon[1] ) > 0)
         then  ResultSummary[4]:PropFinalCarbon[1] +
                  (PropFlexFrac * (ResultSummary[4]:PFlxFinalCarbon[1] -
                                   ResultSummary[4]:PropFinalCarbon[1]))
         else  UNCHANGED  endif  }
   "Adjust PropExportCarbon[1]-S"     Proj:ResultSummary[4]:PropExportCarbon[1] = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[4]:PropExportCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[4]:PFlxExportCarbon[1] ) > 0)
         then  ResultSummary[4]:PropExportCarbon[1] +
                  (PropFlexFrac * (ResultSummary[4]:PFlxExportCarbon[1] -
                                   ResultSummary[4]:PropExportCarbon[1]))
         else  UNCHANGED  endif  }
   "Adjust PropSelfConsCarbon[1]-S"   Proj:ResultSummary[4]:PropSelfConsCarbon[1] = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[4]:PropSelfConsCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[4]:PFlxSelfConsCarbon[1] ) > 0)
         then  ResultSummary[4]:PropSelfConsCarbon[1] +
                  (PropFlexFrac * (ResultSummary[4]:PFlxSelfConsCarbon[1] -
                                   ResultSummary[4]:PropSelfConsCarbon[1]))
         else  UNCHANGED  endif  }

   "Set PropSelfConsCO2Str[1]-S"    Proj:ResultSummary[4]:PropSelfConsCO2Str[1] =          ; SAC 7/17/20 (CommunitySolar)
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[4]:PropSelfConsCarbon[1], 2 )  endif  }
   "Set PropExportCO2Str[1]-S"      Proj:ResultSummary[4]:PropExportCO2Str[1] =  
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[4]:PropExportCarbon[1], 2 )  endif  }
END
;*************************************************************************

;*************************************************************************  - SAC 10/5/17
RULELIST "CARes_PropFlexResults_Carbon_W" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)

  ; PV 8760s
   "Store negative PV 8760-W"    Proj:RunResultsW[13]:Action    ={   if (IfValidAnd( ResultSummary[5]:PFlxPVScaleFactor > 0 )==0) then UNCHANGED
                                                                     else  ApplyHourlyResultMultipliers( "NegPV", "none", -1.0, 1, "none", 0, 0, "PropFlex-W", "MtrElec",   "PV" )  endif  }
   "Store scaled PV 8760-W"      Proj:RunResultsW[13]:Action    ={   if (IfValidAnd( ResultSummary[5]:PFlxPVScaleFactor > 0 )==0)
                                                                     then  ApplyHourlyResultMultipliers( "ScldPV", "none",                                1.0, 1, "none", 0, 0, "PropFlex-W", "MtrElec",   "PV" )
                                                                     else  ApplyHourlyResultMultipliers( "ScldPV", "none", ResultSummary[5]:PFlxPVScaleFactor, 1, "none", 0, 0, "PropFlex-W", "MtrElec",   "PV" )
                                                                     endif  }
;   "Store negative BT 8760-W"    Proj:RunResultsW[14]:Action    ={   if (IfValidAnd( RunResultsW[14]:PFlxElecEnergy[1] != 0 )==0) then UNCHANGED
;                                                                     else  ApplyHourlyResultMultipliers_Neg( "NegBT", "none", 1.0, 1, "none", 0, 0, "PropFlex-W", "MtrElec",   "BT" )  endif  }

  ; Summary PropFlex values
   "Calculate PFlxFinalCarbon[1]-elec-W"  Proj:ResultSummary[5]:PFlxFinalCarbon[1]  = {   if (IfValidAnd( ResultSummary[5]:PFlxPVScaleFactor > 0 )==0)
                                                                                          then  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-W", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-W", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PFlxExportCarbon[1]-W"      Proj:ResultSummary[5]:PFlxExportCarbon[1] = {   if (IfValidAnd( ResultSummary[5]:PFlxPVScaleFactor > 0 )==0)
                                                                                          then  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-W", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          else  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-W", "MtrElec",   "Tot", "ScldPV", "NegPV" ) * Proj:CO2ElecTableMult / 3.412
                                                                                          endif  }
   "Calculate PFlxSelfConsCarbon[1]-W"    Proj:ResultSummary[5]:PFlxSelfConsCarbon[1] ={  if (IfValidAnd( RunResultsW[14]:PFlxElecEnergy[1] != 0 )==0)
                                                                                          then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-W", "MtrElec",   "ScldPV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[5]:PFlxExportCarbon[1]
                                                                                          else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "PropFlex-W", "MtrElec",   "ScldPV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[5]:PFlxExportCarbon[1]
                                                                                          endif  }
  ; calc & add in non-elec PropFlex carbon
   "Add into PFlxFinalCarbon[1]-W - NatGas - SpcHt"    Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[1]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrNatGas", "Htg", "HPBU", "Aux" ))  endif  }
   "Add into PFlxFinalCarbon[1]-W - Other  - SpcHt"    Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[1]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrOther",  "Htg", "HPBU", "Aux" ))  endif  }
   "Add into PFlxFinalCarbon[1]-W - NatGas - SpcCl"    Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[2]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrNatGas", "Clg" ))  endif  }
   "Add into PFlxFinalCarbon[1]-W - Other  - SpcCl"    Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[2]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrOther",  "Clg" ))  endif  }
   "Add into PFlxFinalCarbon[1]-W - NatGas - WtrHt"    Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[5]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrNatGas", "Dhw", "DhwBU" ))  endif  }
   "Add into PFlxFinalCarbon[1]-W - Other  - WtrHt"    Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[5]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrOther",  "Dhw", "DhwBU" ))  endif  }
   "Add into PFlxFinalCarbon[1]-W - NatGas - AppCkg"   Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[7]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ))  endif  }
   "Add into PFlxFinalCarbon[1]-W - Other  - AppCkg"   Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[7]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ))  endif  }
   "Add into PFlxFinalCarbon[1]-W - NatGas - Plugs"    Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[8]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrNatGas", "Rcp" ))  endif  }
   "Add into PFlxFinalCarbon[1]-W - Other  - Plugs"    Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[8]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrOther",  "Rcp" ))  endif  }
   "Add into PFlxFinalCarbon[1]-W - NatGas - Ext"      Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[9]:PFlxNatGasEnergy[1] ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrNatGas", "Ext" ))  endif  }
   "Add into PFlxFinalCarbon[1]-W - Other  - Ext"      Proj:ResultSummary[5]:PFlxFinalCarbon[1] = {
         if (LocalRef( RunResultsW[9]:PFlxOtherEnergy[1]  ) < 0.0001) then  UNCHANGED
         else  ResultSummary[5]:PFlxFinalCarbon[1] +
               (Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "PropFlex-W", "MtrOther",  "Ext" ))  endif  }

  ; Adjust Proposed Summary results based on PropFlex values
   "Adjust PropFinalCarbon[1]-W"      Proj:ResultSummary[5]:PropFinalCarbon[1]  = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[5]:PropFinalCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[5]:PFlxFinalCarbon[1] ) > 0)
         then  ResultSummary[5]:PropFinalCarbon[1] +
                  (PropFlexFrac * (ResultSummary[5]:PFlxFinalCarbon[1] -
                                   ResultSummary[5]:PropFinalCarbon[1]))
         else  UNCHANGED  endif  }
   "Adjust PropExportCarbon[1]-W"     Proj:ResultSummary[5]:PropExportCarbon[1] = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[5]:PropExportCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[5]:PFlxExportCarbon[1] ) > 0)
         then  ResultSummary[5]:PropExportCarbon[1] +
                  (PropFlexFrac * (ResultSummary[5]:PFlxExportCarbon[1] -
                                   ResultSummary[5]:PropExportCarbon[1]))
         else  UNCHANGED  endif  }
   "Adjust PropSelfConsCarbon[1]-W"   Proj:ResultSummary[5]:PropSelfConsCarbon[1] = {
         if (IfValidAnd( PropFlexFrac > 0 ) .AND.
             LocalStatus( ResultSummary[5]:PropSelfConsCarbon[1] ) > 0 .AND. LocalStatus( ResultSummary[5]:PFlxSelfConsCarbon[1] ) > 0)
         then  ResultSummary[5]:PropSelfConsCarbon[1] +
                  (PropFlexFrac * (ResultSummary[5]:PFlxSelfConsCarbon[1] -
                                   ResultSummary[5]:PropSelfConsCarbon[1]))
         else  UNCHANGED  endif  }

   "Set PropSelfConsCO2Str[1]-W"    Proj:ResultSummary[5]:PropSelfConsCO2Str[1] =         ; SAC 7/17/20 (CommunitySolar)
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[5]:PropSelfConsCarbon[1], 2 )  endif  }
   "Set PropExportCO2Str[1]-W"      Proj:ResultSummary[5]:PropExportCO2Str[1] = 
      {  if (CommunitySolarProjID > 0 .AND. IfValidAnd( CommunitySolarSim == 0 )) then  "NA"
         else  FltToStr( ResultSummary[5]:PropExportCarbon[1], 2 )  endif  }
END
;*************************************************************************


;*************************************************************************  - SAC 1/11/18 - re-wrote based on Prop-N + copying data to other orientations
RULELIST "CARes_StandardResults_Carbon_NESW" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
   "Calculate Carbon-N - Elec   - SpcHt"    Proj:RunResultsN[1]:StdElecCarbon[1]    = {   if (LocalRef( RunResultsN[1]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "HtgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - SpcHt"    Proj:RunResultsN[1]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResultsN[1]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - SpcHt"    Proj:RunResultsN[1]:StdOtherCarbon[1]   = {   if (LocalRef( RunResultsN[1]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - SpcHt"    Proj:RunResultsN[1]:StdTotalCarbon[1]   = {   RunResultsN[1]:StdElecCarbon[1] + RunResultsN[1]:StdNatGasCarbon[1] + RunResultsN[1]:StdOtherCarbon[1]  }

  ; Space Cooling (& cooling fan)
   "Calculate Carbon-N - Elec   - SpcCl"    Proj:RunResultsN[2]:StdElecCarbon[1]    = {   if (LocalRef( RunResultsN[2]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ClgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Clg", "FanC" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - SpcCl"    Proj:RunResultsN[2]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResultsN[2]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - SpcCl"    Proj:RunResultsN[2]:StdOtherCarbon[1]   = {   if (LocalRef( RunResultsN[2]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - SpcCl"    Proj:RunResultsN[2]:StdTotalCarbon[1]   = {   RunResultsN[2]:StdElecCarbon[1] + RunResultsN[2]:StdNatGasCarbon[1] + RunResultsN[2]:StdOtherCarbon[1]  }

  ; IAQ Ventilation Fans
   "Calculate Carbon-N - Elec   - IAQVent"  Proj:RunResultsN[3]:StdElecCarbon[1]    = {   if (LocalRef( RunResultsN[3]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "IAQVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "FanV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - IAQVent"  Proj:RunResultsN[3]:StdNatGasCarbon[1]  = {   0  }
   "Calculate Carbon-N - Other  - IAQVent"  Proj:RunResultsN[3]:StdOtherCarbon[1]   = {   0  }
   "Calculate Carbon-N - Total  - IAQVent"  Proj:RunResultsN[3]:StdTotalCarbon[1]   = {   RunResultsN[3]:StdElecCarbon[1]  }

  ; Other HVAC (aux & misc fans)
   ; SAC 11/15/18 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
   ; SAC 1/27/19 - switched if check from "LocalRef( RunResultsN[4]:StdElecEnergy[1] )" to "HourlyResultSum( RunID, "MtrElec", "User1" )" since OthrHVAC would already have been re-allocated to SpcHt & SpcCl by now (tic #1053)
   "Calculate Carbon-N - Elec   - OthrHVAC" Proj:RunResultsN[4]:StdElecCarbon[1]    = {   if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "OHVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "User1" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - OthrHVAC" Proj:RunResultsN[4]:StdNatGasCarbon[1]  = {   0  }
   "Calculate Carbon-N - Other  - OthrHVAC" Proj:RunResultsN[4]:StdOtherCarbon[1]   = {   0  }
   "Calculate Carbon-N - Total  - OthrHVAC" Proj:RunResultsN[4]:StdTotalCarbon[1]   = {   RunResultsN[4]:StdElecCarbon[1]  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC N-Std Carbon use across SpcHt & SpcCl by fuel based on ratio of total carbon (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - N-StdCarbon"    Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsN[4]:StdTotalCarbon[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsN[1]:StdTotalCarbon[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsN[2]:StdTotalCarbon[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsN[1]:StdTotalCarbon[1], 0 ) / 
                                                                                 (ValidOr( RunResultsN[1]:StdTotalCarbon[1], 0 ) + ValidOr( RunResultsN[2]:StdTotalCarbon[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - N-SpcHt"		Proj:RunResultsN[1]:StdElecCarbon[1]	= {   if (IfValidAnd( RunResultsN[4]:StdElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsN[1]:StdElecCarbon[1] + (RunResultsN[4]:StdElecCarbon[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcHt"		Proj:RunResultsN[1]:StdTotalCarbon[1]	= {	LocalRef( RunResultsN[1]:StdElecCarbon[1] ) + LocalRef( RunResultsN[1]:StdNatGasCarbon[1] ) + LocalRef( RunResultsN[1]:StdOtherCarbon[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - N-SpcCl"		Proj:RunResultsN[2]:StdElecCarbon[1]	= {   if (IfValidAnd( RunResultsN[4]:StdElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsN[2]:StdElecCarbon[1] + (RunResultsN[4]:StdElecCarbon[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcCl"		Proj:RunResultsN[2]:StdTotalCarbon[1]	= {	LocalRef( RunResultsN[2]:StdElecCarbon[1] ) + LocalRef( RunResultsN[2]:StdNatGasCarbon[1] ) + LocalRef( RunResultsN[2]:StdOtherCarbon[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - N-OthrHVAC"	Proj:RunResultsN[4]:StdElecCarbon[1]	= {	0  }
	"ZERO-OUT         - TOTAL  - N-OthrHVAC"	Proj:RunResultsN[4]:StdTotalCarbon[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC StdCarbon

  ; Water Heating
   "Calculate Carbon-N - Elec   - WtrHt"    Proj:RunResultsN[5]:StdElecCarbon[1]    = {   if (LocalRef( RunResultsN[5]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else if (CSEinclDHWMFL_EU)
			 			  																							   then  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412 / CondFloorArea
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon-N - NatGas - WtrHt"    Proj:RunResultsN[5]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResultsN[5]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - WtrHt"    Proj:RunResultsN[5]:StdOtherCarbon[1]   = {   if (LocalRef( RunResultsN[5]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - WtrHt"    Proj:RunResultsN[5]:StdTotalCarbon[1]   = {   RunResultsN[5]:StdElecCarbon[1] + RunResultsN[5]:StdNatGasCarbon[1] + RunResultsN[5]:StdOtherCarbon[1]  }

  ; Inside Lighting
   "Calculate Carbon-N - Elec   - InsLtg"   Proj:RunResultsN[6]:StdElecCarbon[1]    = {   if (LocalRef( RunResultsN[6]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ILtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Lit" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - InsLtg"   Proj:RunResultsN[6]:StdNatGasCarbon[1]  = {   0  }
   "Calculate Carbon-N - Other  - InsLtg"   Proj:RunResultsN[6]:StdOtherCarbon[1]   = {   0  }
   "Calculate Carbon-N - Total  - InsLtg"   Proj:RunResultsN[6]:StdTotalCarbon[1]   = {   RunResultsN[6]:StdElecCarbon[1]  }

  ; Appliances & Cooking
   "Calculate Carbon-N - Elec   - AppCkg"   Proj:RunResultsN[7]:StdElecCarbon[1]    = {   if (LocalRef( RunResultsN[7]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "AppEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - AppCkg"   Proj:RunResultsN[7]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResultsN[7]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - AppCkg"   Proj:RunResultsN[7]:StdOtherCarbon[1]   = {   if (LocalRef( RunResultsN[7]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - AppCkg"   Proj:RunResultsN[7]:StdTotalCarbon[1]   = {   RunResultsN[7]:StdElecCarbon[1] + RunResultsN[7]:StdNatGasCarbon[1] + RunResultsN[7]:StdOtherCarbon[1]  }

  ; Plug Loads
   "Calculate Carbon-N - Elec   - Plugs"    Proj:RunResultsN[8]:StdElecCarbon[1]    = {   if (LocalRef( RunResultsN[8]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "RcpEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Rcp" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - Plugs"    Proj:RunResultsN[8]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResultsN[8]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - Plugs"    Proj:RunResultsN[8]:StdOtherCarbon[1]   = {   if (LocalRef( RunResultsN[8]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - Plugs"    Proj:RunResultsN[8]:StdTotalCarbon[1]   = {   RunResultsN[8]:StdElecCarbon[1] + RunResultsN[8]:StdNatGasCarbon[1] + RunResultsN[8]:StdOtherCarbon[1]  }

  ; Exterior
   "Calculate Carbon-N - Elec   - Ext"      Proj:RunResultsN[9]:StdElecCarbon[1]    = {   if (LocalRef( RunResultsN[9]:StdElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ExtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Ext" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - Ext"      Proj:RunResultsN[9]:StdNatGasCarbon[1]  = {   if (LocalRef( RunResultsN[9]:StdNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - Ext"      Proj:RunResultsN[9]:StdOtherCarbon[1]   = {   if (LocalRef( RunResultsN[9]:StdOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "Standard", "MtrOther",  "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - Ext"      Proj:RunResultsN[9]:StdTotalCarbon[1]   = {   RunResultsN[9]:StdElecCarbon[1] + RunResultsN[9]:StdNatGasCarbon[1] + RunResultsN[9]:StdOtherCarbon[1]  }

  ; PV
   "Calculate Carbon-N - Elec   - PV"       Proj:RunResultsN[13]:StdElecCarbon[1]   = {   if (LocalRef( RunResultsN[13]:StdElecEnergy[1]   ) > -0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "PVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "PV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - PV"       Proj:RunResultsN[13]:StdNatGasCarbon[1] = {   0  }
   "Calculate Carbon-N - Other  - PV"       Proj:RunResultsN[13]:StdOtherCarbon[1]  = {   0  }
   "Calculate Carbon-N - Total  - PV"       Proj:RunResultsN[13]:StdTotalCarbon[1]  = {   RunResultsN[13]:StdElecCarbon[1]  }

  ; Battery
   "Calculate Carbon-N - Elec   - Battery"  Proj:RunResultsN[14]:StdElecCarbon[1]   = {   if (LocalRef( RunResultsN[14]:StdElecEnergy[1]   ) = 0) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "BTEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "BT" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - Battery"  Proj:RunResultsN[14]:StdNatGasCarbon[1] = {   0  }
   "Calculate Carbon-N - Other  - Battery"  Proj:RunResultsN[14]:StdOtherCarbon[1]  = {   0  }
   "Calculate Carbon-N - Total  - Battery"  Proj:RunResultsN[14]:StdTotalCarbon[1]  = {   RunResultsN[14]:StdElecCarbon[1]  }

  ; Compliance Total
   "Calculate Carbon-N - Elec   - Comp Ttl" Proj:RunResultsN[11]:StdElecCarbon[1]   = {	RunResultsN[1]:StdElecCarbon[1]   + RunResultsN[2]:StdElecCarbon[1]   + RunResultsN[3]:StdElecCarbon[1]   + RunResultsN[4]:StdElecCarbon[1]   + RunResultsN[5]:StdElecCarbon[1]     }
   "Calculate Carbon-N - NatGas - Comp Ttl" Proj:RunResultsN[11]:StdNatGasCarbon[1] = {	RunResultsN[1]:StdNatGasCarbon[1] + RunResultsN[2]:StdNatGasCarbon[1] + RunResultsN[3]:StdNatGasCarbon[1] + RunResultsN[4]:StdNatGasCarbon[1] + RunResultsN[5]:StdNatGasCarbon[1]   }
   "Calculate Carbon-N - Other  - Comp Ttl" Proj:RunResultsN[11]:StdOtherCarbon[1]  = {	RunResultsN[1]:StdOtherCarbon[1]  + RunResultsN[2]:StdOtherCarbon[1]  + RunResultsN[3]:StdOtherCarbon[1]  + RunResultsN[4]:StdOtherCarbon[1]  + RunResultsN[5]:StdOtherCarbon[1]    }
   "Calculate Carbon-N - TOTAL  - Comp Ttl" Proj:RunResultsN[11]:StdTotalCarbon[1]  = {	RunResultsN[1]:StdTotalCarbon[1]  + RunResultsN[2]:StdTotalCarbon[1]  + RunResultsN[3]:StdTotalCarbon[1]  + RunResultsN[4]:StdTotalCarbon[1]  + RunResultsN[5]:StdTotalCarbon[1]    }

  ; Total
   "Calculate Carbon-N - Elec   - Total"    Proj:RunResultsN[10]:StdElecCarbon[1]   = {	RunResultsN[11]:StdElecCarbon[1]   + RunResultsN[6]:StdElecCarbon[1]   + RunResultsN[7]:StdElecCarbon[1]   + RunResultsN[8]:StdElecCarbon[1]   + RunResultsN[9]:StdElecCarbon[1]   + RunResultsN[13]:StdElecCarbon[1]   + RunResultsN[14]:StdElecCarbon[1]     }
   "Calculate Carbon-N - NatGas - Total"    Proj:RunResultsN[10]:StdNatGasCarbon[1] = {	RunResultsN[11]:StdNatGasCarbon[1] + RunResultsN[6]:StdNatGasCarbon[1] + RunResultsN[7]:StdNatGasCarbon[1] + RunResultsN[8]:StdNatGasCarbon[1] + RunResultsN[9]:StdNatGasCarbon[1] + RunResultsN[13]:StdNatGasCarbon[1] + RunResultsN[14]:StdNatGasCarbon[1]   }
   "Calculate Carbon-N - Other  - Total"    Proj:RunResultsN[10]:StdOtherCarbon[1]  = {	RunResultsN[11]:StdOtherCarbon[1]  + RunResultsN[6]:StdOtherCarbon[1]  + RunResultsN[7]:StdOtherCarbon[1]  + RunResultsN[8]:StdOtherCarbon[1]  + RunResultsN[9]:StdOtherCarbon[1]  + RunResultsN[13]:StdOtherCarbon[1]  + RunResultsN[14]:StdOtherCarbon[1]    }
   "Calculate Carbon-N - TOTAL  - Total"    Proj:RunResultsN[10]:StdTotalCarbon[1]  = {	RunResultsN[11]:StdTotalCarbon[1]  + RunResultsN[6]:StdTotalCarbon[1]  + RunResultsN[7]:StdTotalCarbon[1]  + RunResultsN[8]:StdTotalCarbon[1]  + RunResultsN[9]:StdTotalCarbon[1]  + RunResultsN[13]:StdTotalCarbon[1]  + RunResultsN[14]:StdTotalCarbon[1]    }

  ; Summary values
   "Calculate StdFinalCarbon[1]-othr-N"   Proj:ResultSummary[2]:StdFinalCarbon[1]   = {   CondFloorArea * RunResultsN[10]:StdTotalCarbon[1]  }
   "Calculate StdExportCarbon[1]-N"       Proj:ResultSummary[2]:StdExportCarbon[1]  = {   -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412  }
   "Calculate StdSelfConsCarbon[1]-N"     Proj:ResultSummary[2]:StdSelfConsCarbon[1] ={   if (IfValidAnd( RunResultsN[14]:StdElecEnergy[1] != 0 )==0)
                                                                                          then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "PV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[2]:StdExportCarbon[1]
                                                                                          else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "Standard", "MtrElec",   "PV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[2]:StdExportCarbon[1]
                                                                                          endif  }
   "Calculate StdNoSolFlxCarbon[1]-N"     Proj:ResultSummary[2]:StdNoSolFlxCarbon[1] ={  (RunResultsN[10]:StdTotalCarbon[1] - RunResultsN[13]:StdTotalCarbon[1] - RunResultsN[14]:StdTotalCarbon[1]) * CondFloorArea  }

 ; round EUseSummary StdDesign values for display/reporting - SAC 1/15/18
   "Round StdFinalCarbon[1]-N"      Proj:ResultSummary[2]:StdFinalCarbon[1]      = {
         if (LocalStatus( ResultSummary[2]:StdFinalCarbon[1] ) < 1) then  UNCHANGED
         else if (ResultSummary[2]:StdFinalCarbon[1] < 0)
         then  int( (100 * ResultSummary[2]:StdFinalCarbon[1]) - 0.5 ) / 100
         else  int( (100 * ResultSummary[2]:StdFinalCarbon[1]) + 0.5 ) / 100  endif endif  }
   "Round StdExportCarbon[1]-N"     Proj:ResultSummary[2]:StdExportCarbon[1]     = {
         if (LocalStatus( ResultSummary[2]:StdExportCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[2]:StdExportCarbon[1]) + 0.5 ) / 100  endif  }
   "Round StdSelfConsCarbon[1]-N"   Proj:ResultSummary[2]:StdSelfConsCarbon[1]   = {
         if (LocalStatus( ResultSummary[2]:StdSelfConsCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[2]:StdSelfConsCarbon[1]) + 0.5 ) / 100  endif  }
   "Round StdNoSolFlxCarbon[1]-N"   Proj:ResultSummary[2]:StdNoSolFlxCarbon[1]   = {
         if (LocalStatus( ResultSummary[2]:StdNoSolFlxCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[2]:StdNoSolFlxCarbon[1]) + 0.5 ) / 100  endif  }
   ; SAC 6/30/18 - added *ExclExpCarbon properties (tic #1028)
   "Calc StdExclExpCarbon[1]-N"     Proj:ResultSummary[2]:StdExclExpCarbon[1]    = {
         ResultSummary[2]:StdNoSolFlxCarbon[1] - ResultSummary[2]:StdSelfConsCarbon[1]  }

 ; copy N carbon results to EAST
   "Copy Carbon-E - Elec   - SpcHt"    Proj:RunResultsE[1]:StdElecCarbon[1]       = {  RunResultsN[1]:StdElecCarbon[1]       }
   "Copy Carbon-E - NatGas - SpcHt"    Proj:RunResultsE[1]:StdNatGasCarbon[1]     = {  RunResultsN[1]:StdNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - SpcHt"    Proj:RunResultsE[1]:StdOtherCarbon[1]      = {  RunResultsN[1]:StdOtherCarbon[1]      }
   "Copy Carbon-E - Total  - SpcHt"    Proj:RunResultsE[1]:StdTotalCarbon[1]      = {  RunResultsN[1]:StdTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - SpcCl"    Proj:RunResultsE[2]:StdElecCarbon[1]       = {  RunResultsN[2]:StdElecCarbon[1]       }
   "Copy Carbon-E - NatGas - SpcCl"    Proj:RunResultsE[2]:StdNatGasCarbon[1]     = {  RunResultsN[2]:StdNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - SpcCl"    Proj:RunResultsE[2]:StdOtherCarbon[1]      = {  RunResultsN[2]:StdOtherCarbon[1]      }
   "Copy Carbon-E - Total  - SpcCl"    Proj:RunResultsE[2]:StdTotalCarbon[1]      = {  RunResultsN[2]:StdTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - IAQVent"  Proj:RunResultsE[3]:StdElecCarbon[1]       = {  RunResultsN[3]:StdElecCarbon[1]       }
   "Copy Carbon-E - NatGas - IAQVent"  Proj:RunResultsE[3]:StdNatGasCarbon[1]     = {  RunResultsN[3]:StdNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - IAQVent"  Proj:RunResultsE[3]:StdOtherCarbon[1]      = {  RunResultsN[3]:StdOtherCarbon[1]      }
   "Copy Carbon-E - Total  - IAQVent"  Proj:RunResultsE[3]:StdTotalCarbon[1]      = {  RunResultsN[3]:StdTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - OthrHVAC" Proj:RunResultsE[4]:StdElecCarbon[1]       = {  RunResultsN[4]:StdElecCarbon[1]       }
   "Copy Carbon-E - NatGas - OthrHVAC" Proj:RunResultsE[4]:StdNatGasCarbon[1]     = {  RunResultsN[4]:StdNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - OthrHVAC" Proj:RunResultsE[4]:StdOtherCarbon[1]      = {  RunResultsN[4]:StdOtherCarbon[1]      }
   "Copy Carbon-E - Total  - OthrHVAC" Proj:RunResultsE[4]:StdTotalCarbon[1]      = {  RunResultsN[4]:StdTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - WtrHt"    Proj:RunResultsE[5]:StdElecCarbon[1]       = {  RunResultsN[5]:StdElecCarbon[1]       }
   "Copy Carbon-E - NatGas - WtrHt"    Proj:RunResultsE[5]:StdNatGasCarbon[1]     = {  RunResultsN[5]:StdNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - WtrHt"    Proj:RunResultsE[5]:StdOtherCarbon[1]      = {  RunResultsN[5]:StdOtherCarbon[1]      }
   "Copy Carbon-E - Total  - WtrHt"    Proj:RunResultsE[5]:StdTotalCarbon[1]      = {  RunResultsN[5]:StdTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - InsLtg"   Proj:RunResultsE[6]:StdElecCarbon[1]       = {  RunResultsN[6]:StdElecCarbon[1]       }
   "Copy Carbon-E - NatGas - InsLtg"   Proj:RunResultsE[6]:StdNatGasCarbon[1]     = {  RunResultsN[6]:StdNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - InsLtg"   Proj:RunResultsE[6]:StdOtherCarbon[1]      = {  RunResultsN[6]:StdOtherCarbon[1]      }
   "Copy Carbon-E - Total  - InsLtg"   Proj:RunResultsE[6]:StdTotalCarbon[1]      = {  RunResultsN[6]:StdTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - AppCkg"   Proj:RunResultsE[7]:StdElecCarbon[1]       = {  RunResultsN[7]:StdElecCarbon[1]       }
   "Copy Carbon-E - NatGas - AppCkg"   Proj:RunResultsE[7]:StdNatGasCarbon[1]     = {  RunResultsN[7]:StdNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - AppCkg"   Proj:RunResultsE[7]:StdOtherCarbon[1]      = {  RunResultsN[7]:StdOtherCarbon[1]      }
   "Copy Carbon-E - Total  - AppCkg"   Proj:RunResultsE[7]:StdTotalCarbon[1]      = {  RunResultsN[7]:StdTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - Plugs"    Proj:RunResultsE[8]:StdElecCarbon[1]       = {  RunResultsN[8]:StdElecCarbon[1]       }
   "Copy Carbon-E - NatGas - Plugs"    Proj:RunResultsE[8]:StdNatGasCarbon[1]     = {  RunResultsN[8]:StdNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - Plugs"    Proj:RunResultsE[8]:StdOtherCarbon[1]      = {  RunResultsN[8]:StdOtherCarbon[1]      }
   "Copy Carbon-E - Total  - Plugs"    Proj:RunResultsE[8]:StdTotalCarbon[1]      = {  RunResultsN[8]:StdTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - Ext"      Proj:RunResultsE[9]:StdElecCarbon[1]       = {  RunResultsN[9]:StdElecCarbon[1]       }
   "Copy Carbon-E - NatGas - Ext"      Proj:RunResultsE[9]:StdNatGasCarbon[1]     = {  RunResultsN[9]:StdNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - Ext"      Proj:RunResultsE[9]:StdOtherCarbon[1]      = {  RunResultsN[9]:StdOtherCarbon[1]      }
   "Copy Carbon-E - Total  - Ext"      Proj:RunResultsE[9]:StdTotalCarbon[1]      = {  RunResultsN[9]:StdTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - PV"       Proj:RunResultsE[13]:StdElecCarbon[1]      = {  RunResultsN[13]:StdElecCarbon[1]      }
   "Copy Carbon-E - NatGas - PV"       Proj:RunResultsE[13]:StdNatGasCarbon[1]    = {  RunResultsN[13]:StdNatGasCarbon[1]    }
   "Copy Carbon-E - Other  - PV"       Proj:RunResultsE[13]:StdOtherCarbon[1]     = {  RunResultsN[13]:StdOtherCarbon[1]     }
   "Copy Carbon-E - Total  - PV"       Proj:RunResultsE[13]:StdTotalCarbon[1]     = {  RunResultsN[13]:StdTotalCarbon[1]     }
   "Copy Carbon-E - Elec   - Battery"  Proj:RunResultsE[14]:StdElecCarbon[1]      = {  RunResultsN[14]:StdElecCarbon[1]      }
   "Copy Carbon-E - NatGas - Battery"  Proj:RunResultsE[14]:StdNatGasCarbon[1]    = {  RunResultsN[14]:StdNatGasCarbon[1]    }
   "Copy Carbon-E - Other  - Battery"  Proj:RunResultsE[14]:StdOtherCarbon[1]     = {  RunResultsN[14]:StdOtherCarbon[1]     }
   "Copy Carbon-E - Total  - Battery"  Proj:RunResultsE[14]:StdTotalCarbon[1]     = {  RunResultsN[14]:StdTotalCarbon[1]     }
   "Copy Carbon-E - Elec   - Comp Ttl" Proj:RunResultsE[11]:StdElecCarbon[1]      = {  RunResultsN[11]:StdElecCarbon[1]      }
   "Copy Carbon-E - NatGas - Comp Ttl" Proj:RunResultsE[11]:StdNatGasCarbon[1]    = {  RunResultsN[11]:StdNatGasCarbon[1]    }
   "Copy Carbon-E - Other  - Comp Ttl" Proj:RunResultsE[11]:StdOtherCarbon[1]     = {  RunResultsN[11]:StdOtherCarbon[1]     }
   "Copy Carbon-E - TOTAL  - Comp Ttl" Proj:RunResultsE[11]:StdTotalCarbon[1]     = {  RunResultsN[11]:StdTotalCarbon[1]     }
   "Copy Carbon-E - Elec   - Total"    Proj:RunResultsE[10]:StdElecCarbon[1]      = {  RunResultsN[10]:StdElecCarbon[1]      }
   "Copy Carbon-E - NatGas - Total"    Proj:RunResultsE[10]:StdNatGasCarbon[1]    = {  RunResultsN[10]:StdNatGasCarbon[1]    }
   "Copy Carbon-E - Other  - Total"    Proj:RunResultsE[10]:StdOtherCarbon[1]     = {  RunResultsN[10]:StdOtherCarbon[1]     }
   "Copy Carbon-E - TOTAL  - Total"    Proj:RunResultsE[10]:StdTotalCarbon[1]     = {  RunResultsN[10]:StdTotalCarbon[1]     }
   "Copy StdFinalCarbon[1]-E"          Proj:ResultSummary[3]:StdFinalCarbon[1]    = {  ResultSummary[2]:StdFinalCarbon[1]    }
   "Copy StdExportCarbon[1]-E"         Proj:ResultSummary[3]:StdExportCarbon[1]   = {  ResultSummary[2]:StdExportCarbon[1]   }
   "Copy StdSelfConsCarbon[1]-E"       Proj:ResultSummary[3]:StdSelfConsCarbon[1] = {  ResultSummary[2]:StdSelfConsCarbon[1] }
   "Copy StdNoSolFlxCarbon[1]-E"       Proj:ResultSummary[3]:StdNoSolFlxCarbon[1] = {  ResultSummary[2]:StdNoSolFlxCarbon[1] }
   "Copy StdExclExpCarbon[1]-E"        Proj:ResultSummary[3]:StdExclExpCarbon[1]  = {  ResultSummary[2]:StdExclExpCarbon[1]  }

 ; copy N carbon results to SOUTH
   "Copy Carbon-S - Elec   - SpcHt"    Proj:RunResultsS[1]:StdElecCarbon[1]       = {  RunResultsN[1]:StdElecCarbon[1]       }
   "Copy Carbon-S - NatGas - SpcHt"    Proj:RunResultsS[1]:StdNatGasCarbon[1]     = {  RunResultsN[1]:StdNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - SpcHt"    Proj:RunResultsS[1]:StdOtherCarbon[1]      = {  RunResultsN[1]:StdOtherCarbon[1]      }
   "Copy Carbon-S - Total  - SpcHt"    Proj:RunResultsS[1]:StdTotalCarbon[1]      = {  RunResultsN[1]:StdTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - SpcCl"    Proj:RunResultsS[2]:StdElecCarbon[1]       = {  RunResultsN[2]:StdElecCarbon[1]       }
   "Copy Carbon-S - NatGas - SpcCl"    Proj:RunResultsS[2]:StdNatGasCarbon[1]     = {  RunResultsN[2]:StdNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - SpcCl"    Proj:RunResultsS[2]:StdOtherCarbon[1]      = {  RunResultsN[2]:StdOtherCarbon[1]      }
   "Copy Carbon-S - Total  - SpcCl"    Proj:RunResultsS[2]:StdTotalCarbon[1]      = {  RunResultsN[2]:StdTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - IAQVent"  Proj:RunResultsS[3]:StdElecCarbon[1]       = {  RunResultsN[3]:StdElecCarbon[1]       }
   "Copy Carbon-S - NatGas - IAQVent"  Proj:RunResultsS[3]:StdNatGasCarbon[1]     = {  RunResultsN[3]:StdNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - IAQVent"  Proj:RunResultsS[3]:StdOtherCarbon[1]      = {  RunResultsN[3]:StdOtherCarbon[1]      }
   "Copy Carbon-S - Total  - IAQVent"  Proj:RunResultsS[3]:StdTotalCarbon[1]      = {  RunResultsN[3]:StdTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - OthrHVAC" Proj:RunResultsS[4]:StdElecCarbon[1]       = {  RunResultsN[4]:StdElecCarbon[1]       }
   "Copy Carbon-S - NatGas - OthrHVAC" Proj:RunResultsS[4]:StdNatGasCarbon[1]     = {  RunResultsN[4]:StdNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - OthrHVAC" Proj:RunResultsS[4]:StdOtherCarbon[1]      = {  RunResultsN[4]:StdOtherCarbon[1]      }
   "Copy Carbon-S - Total  - OthrHVAC" Proj:RunResultsS[4]:StdTotalCarbon[1]      = {  RunResultsN[4]:StdTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - WtrHt"    Proj:RunResultsS[5]:StdElecCarbon[1]       = {  RunResultsN[5]:StdElecCarbon[1]       }
   "Copy Carbon-S - NatGas - WtrHt"    Proj:RunResultsS[5]:StdNatGasCarbon[1]     = {  RunResultsN[5]:StdNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - WtrHt"    Proj:RunResultsS[5]:StdOtherCarbon[1]      = {  RunResultsN[5]:StdOtherCarbon[1]      }
   "Copy Carbon-S - Total  - WtrHt"    Proj:RunResultsS[5]:StdTotalCarbon[1]      = {  RunResultsN[5]:StdTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - InsLtg"   Proj:RunResultsS[6]:StdElecCarbon[1]       = {  RunResultsN[6]:StdElecCarbon[1]       }
   "Copy Carbon-S - NatGas - InsLtg"   Proj:RunResultsS[6]:StdNatGasCarbon[1]     = {  RunResultsN[6]:StdNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - InsLtg"   Proj:RunResultsS[6]:StdOtherCarbon[1]      = {  RunResultsN[6]:StdOtherCarbon[1]      }
   "Copy Carbon-S - Total  - InsLtg"   Proj:RunResultsS[6]:StdTotalCarbon[1]      = {  RunResultsN[6]:StdTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - AppCkg"   Proj:RunResultsS[7]:StdElecCarbon[1]       = {  RunResultsN[7]:StdElecCarbon[1]       }
   "Copy Carbon-S - NatGas - AppCkg"   Proj:RunResultsS[7]:StdNatGasCarbon[1]     = {  RunResultsN[7]:StdNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - AppCkg"   Proj:RunResultsS[7]:StdOtherCarbon[1]      = {  RunResultsN[7]:StdOtherCarbon[1]      }
   "Copy Carbon-S - Total  - AppCkg"   Proj:RunResultsS[7]:StdTotalCarbon[1]      = {  RunResultsN[7]:StdTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - Plugs"    Proj:RunResultsS[8]:StdElecCarbon[1]       = {  RunResultsN[8]:StdElecCarbon[1]       }
   "Copy Carbon-S - NatGas - Plugs"    Proj:RunResultsS[8]:StdNatGasCarbon[1]     = {  RunResultsN[8]:StdNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - Plugs"    Proj:RunResultsS[8]:StdOtherCarbon[1]      = {  RunResultsN[8]:StdOtherCarbon[1]      }
   "Copy Carbon-S - Total  - Plugs"    Proj:RunResultsS[8]:StdTotalCarbon[1]      = {  RunResultsN[8]:StdTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - Ext"      Proj:RunResultsS[9]:StdElecCarbon[1]       = {  RunResultsN[9]:StdElecCarbon[1]       }
   "Copy Carbon-S - NatGas - Ext"      Proj:RunResultsS[9]:StdNatGasCarbon[1]     = {  RunResultsN[9]:StdNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - Ext"      Proj:RunResultsS[9]:StdOtherCarbon[1]      = {  RunResultsN[9]:StdOtherCarbon[1]      }
   "Copy Carbon-S - Total  - Ext"      Proj:RunResultsS[9]:StdTotalCarbon[1]      = {  RunResultsN[9]:StdTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - PV"       Proj:RunResultsS[13]:StdElecCarbon[1]      = {  RunResultsN[13]:StdElecCarbon[1]      }
   "Copy Carbon-S - NatGas - PV"       Proj:RunResultsS[13]:StdNatGasCarbon[1]    = {  RunResultsN[13]:StdNatGasCarbon[1]    }
   "Copy Carbon-S - Other  - PV"       Proj:RunResultsS[13]:StdOtherCarbon[1]     = {  RunResultsN[13]:StdOtherCarbon[1]     }
   "Copy Carbon-S - Total  - PV"       Proj:RunResultsS[13]:StdTotalCarbon[1]     = {  RunResultsN[13]:StdTotalCarbon[1]     }
   "Copy Carbon-S - Elec   - Battery"  Proj:RunResultsS[14]:StdElecCarbon[1]      = {  RunResultsN[14]:StdElecCarbon[1]      }
   "Copy Carbon-S - NatGas - Battery"  Proj:RunResultsS[14]:StdNatGasCarbon[1]    = {  RunResultsN[14]:StdNatGasCarbon[1]    }
   "Copy Carbon-S - Other  - Battery"  Proj:RunResultsS[14]:StdOtherCarbon[1]     = {  RunResultsN[14]:StdOtherCarbon[1]     }
   "Copy Carbon-S - Total  - Battery"  Proj:RunResultsS[14]:StdTotalCarbon[1]     = {  RunResultsN[14]:StdTotalCarbon[1]     }
   "Copy Carbon-S - Elec   - Comp Ttl" Proj:RunResultsS[11]:StdElecCarbon[1]      = {  RunResultsN[11]:StdElecCarbon[1]      }
   "Copy Carbon-S - NatGas - Comp Ttl" Proj:RunResultsS[11]:StdNatGasCarbon[1]    = {  RunResultsN[11]:StdNatGasCarbon[1]    }
   "Copy Carbon-S - Other  - Comp Ttl" Proj:RunResultsS[11]:StdOtherCarbon[1]     = {  RunResultsN[11]:StdOtherCarbon[1]     }
   "Copy Carbon-S - TOTAL  - Comp Ttl" Proj:RunResultsS[11]:StdTotalCarbon[1]     = {  RunResultsN[11]:StdTotalCarbon[1]     }
   "Copy Carbon-S - Elec   - Total"    Proj:RunResultsS[10]:StdElecCarbon[1]      = {  RunResultsN[10]:StdElecCarbon[1]      }
   "Copy Carbon-S - NatGas - Total"    Proj:RunResultsS[10]:StdNatGasCarbon[1]    = {  RunResultsN[10]:StdNatGasCarbon[1]    }
   "Copy Carbon-S - Other  - Total"    Proj:RunResultsS[10]:StdOtherCarbon[1]     = {  RunResultsN[10]:StdOtherCarbon[1]     }
   "Copy Carbon-S - TOTAL  - Total"    Proj:RunResultsS[10]:StdTotalCarbon[1]     = {  RunResultsN[10]:StdTotalCarbon[1]     }
   "Copy StdFinalCarbon[1]-S"          Proj:ResultSummary[4]:StdFinalCarbon[1]    = {  ResultSummary[2]:StdFinalCarbon[1]    }
   "Copy StdExportCarbon[1]-S"         Proj:ResultSummary[4]:StdExportCarbon[1]   = {  ResultSummary[2]:StdExportCarbon[1]   }
   "Copy StdSelfConsCarbon[1]-S"       Proj:ResultSummary[4]:StdSelfConsCarbon[1] = {  ResultSummary[2]:StdSelfConsCarbon[1] }
   "Copy StdNoSolFlxCarbon[1]-S"       Proj:ResultSummary[4]:StdNoSolFlxCarbon[1] = {  ResultSummary[2]:StdNoSolFlxCarbon[1] }
   "Copy StdExclExpCarbon[1]-S"        Proj:ResultSummary[4]:StdExclExpCarbon[1]  = {  ResultSummary[2]:StdExclExpCarbon[1]  }

 ; copy N carbon results to WEST
   "Copy Carbon-W - Elec   - SpcHt"    Proj:RunResultsW[1]:StdElecCarbon[1]       = {  RunResultsN[1]:StdElecCarbon[1]       }
   "Copy Carbon-W - NatGas - SpcHt"    Proj:RunResultsW[1]:StdNatGasCarbon[1]     = {  RunResultsN[1]:StdNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - SpcHt"    Proj:RunResultsW[1]:StdOtherCarbon[1]      = {  RunResultsN[1]:StdOtherCarbon[1]      }
   "Copy Carbon-W - Total  - SpcHt"    Proj:RunResultsW[1]:StdTotalCarbon[1]      = {  RunResultsN[1]:StdTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - SpcCl"    Proj:RunResultsW[2]:StdElecCarbon[1]       = {  RunResultsN[2]:StdElecCarbon[1]       }
   "Copy Carbon-W - NatGas - SpcCl"    Proj:RunResultsW[2]:StdNatGasCarbon[1]     = {  RunResultsN[2]:StdNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - SpcCl"    Proj:RunResultsW[2]:StdOtherCarbon[1]      = {  RunResultsN[2]:StdOtherCarbon[1]      }
   "Copy Carbon-W - Total  - SpcCl"    Proj:RunResultsW[2]:StdTotalCarbon[1]      = {  RunResultsN[2]:StdTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - IAQVent"  Proj:RunResultsW[3]:StdElecCarbon[1]       = {  RunResultsN[3]:StdElecCarbon[1]       }
   "Copy Carbon-W - NatGas - IAQVent"  Proj:RunResultsW[3]:StdNatGasCarbon[1]     = {  RunResultsN[3]:StdNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - IAQVent"  Proj:RunResultsW[3]:StdOtherCarbon[1]      = {  RunResultsN[3]:StdOtherCarbon[1]      }
   "Copy Carbon-W - Total  - IAQVent"  Proj:RunResultsW[3]:StdTotalCarbon[1]      = {  RunResultsN[3]:StdTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - OthrHVAC" Proj:RunResultsW[4]:StdElecCarbon[1]       = {  RunResultsN[4]:StdElecCarbon[1]       }
   "Copy Carbon-W - NatGas - OthrHVAC" Proj:RunResultsW[4]:StdNatGasCarbon[1]     = {  RunResultsN[4]:StdNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - OthrHVAC" Proj:RunResultsW[4]:StdOtherCarbon[1]      = {  RunResultsN[4]:StdOtherCarbon[1]      }
   "Copy Carbon-W - Total  - OthrHVAC" Proj:RunResultsW[4]:StdTotalCarbon[1]      = {  RunResultsN[4]:StdTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - WtrHt"    Proj:RunResultsW[5]:StdElecCarbon[1]       = {  RunResultsN[5]:StdElecCarbon[1]       }
   "Copy Carbon-W - NatGas - WtrHt"    Proj:RunResultsW[5]:StdNatGasCarbon[1]     = {  RunResultsN[5]:StdNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - WtrHt"    Proj:RunResultsW[5]:StdOtherCarbon[1]      = {  RunResultsN[5]:StdOtherCarbon[1]      }
   "Copy Carbon-W - Total  - WtrHt"    Proj:RunResultsW[5]:StdTotalCarbon[1]      = {  RunResultsN[5]:StdTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - InsLtg"   Proj:RunResultsW[6]:StdElecCarbon[1]       = {  RunResultsN[6]:StdElecCarbon[1]       }
   "Copy Carbon-W - NatGas - InsLtg"   Proj:RunResultsW[6]:StdNatGasCarbon[1]     = {  RunResultsN[6]:StdNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - InsLtg"   Proj:RunResultsW[6]:StdOtherCarbon[1]      = {  RunResultsN[6]:StdOtherCarbon[1]      }
   "Copy Carbon-W - Total  - InsLtg"   Proj:RunResultsW[6]:StdTotalCarbon[1]      = {  RunResultsN[6]:StdTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - AppCkg"   Proj:RunResultsW[7]:StdElecCarbon[1]       = {  RunResultsN[7]:StdElecCarbon[1]       }
   "Copy Carbon-W - NatGas - AppCkg"   Proj:RunResultsW[7]:StdNatGasCarbon[1]     = {  RunResultsN[7]:StdNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - AppCkg"   Proj:RunResultsW[7]:StdOtherCarbon[1]      = {  RunResultsN[7]:StdOtherCarbon[1]      }
   "Copy Carbon-W - Total  - AppCkg"   Proj:RunResultsW[7]:StdTotalCarbon[1]      = {  RunResultsN[7]:StdTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - Plugs"    Proj:RunResultsW[8]:StdElecCarbon[1]       = {  RunResultsN[8]:StdElecCarbon[1]       }
   "Copy Carbon-W - NatGas - Plugs"    Proj:RunResultsW[8]:StdNatGasCarbon[1]     = {  RunResultsN[8]:StdNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - Plugs"    Proj:RunResultsW[8]:StdOtherCarbon[1]      = {  RunResultsN[8]:StdOtherCarbon[1]      }
   "Copy Carbon-W - Total  - Plugs"    Proj:RunResultsW[8]:StdTotalCarbon[1]      = {  RunResultsN[8]:StdTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - Ext"      Proj:RunResultsW[9]:StdElecCarbon[1]       = {  RunResultsN[9]:StdElecCarbon[1]       }
   "Copy Carbon-W - NatGas - Ext"      Proj:RunResultsW[9]:StdNatGasCarbon[1]     = {  RunResultsN[9]:StdNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - Ext"      Proj:RunResultsW[9]:StdOtherCarbon[1]      = {  RunResultsN[9]:StdOtherCarbon[1]      }
   "Copy Carbon-W - Total  - Ext"      Proj:RunResultsW[9]:StdTotalCarbon[1]      = {  RunResultsN[9]:StdTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - PV"       Proj:RunResultsW[13]:StdElecCarbon[1]      = {  RunResultsN[13]:StdElecCarbon[1]      }
   "Copy Carbon-W - NatGas - PV"       Proj:RunResultsW[13]:StdNatGasCarbon[1]    = {  RunResultsN[13]:StdNatGasCarbon[1]    }
   "Copy Carbon-W - Other  - PV"       Proj:RunResultsW[13]:StdOtherCarbon[1]     = {  RunResultsN[13]:StdOtherCarbon[1]     }
   "Copy Carbon-W - Total  - PV"       Proj:RunResultsW[13]:StdTotalCarbon[1]     = {  RunResultsN[13]:StdTotalCarbon[1]     }
   "Copy Carbon-W - Elec   - Battery"  Proj:RunResultsW[14]:StdElecCarbon[1]      = {  RunResultsN[14]:StdElecCarbon[1]      }
   "Copy Carbon-W - NatGas - Battery"  Proj:RunResultsW[14]:StdNatGasCarbon[1]    = {  RunResultsN[14]:StdNatGasCarbon[1]    }
   "Copy Carbon-W - Other  - Battery"  Proj:RunResultsW[14]:StdOtherCarbon[1]     = {  RunResultsN[14]:StdOtherCarbon[1]     }
   "Copy Carbon-W - Total  - Battery"  Proj:RunResultsW[14]:StdTotalCarbon[1]     = {  RunResultsN[14]:StdTotalCarbon[1]     }
   "Copy Carbon-W - Elec   - Comp Ttl" Proj:RunResultsW[11]:StdElecCarbon[1]      = {  RunResultsN[11]:StdElecCarbon[1]      }
   "Copy Carbon-W - NatGas - Comp Ttl" Proj:RunResultsW[11]:StdNatGasCarbon[1]    = {  RunResultsN[11]:StdNatGasCarbon[1]    }
   "Copy Carbon-W - Other  - Comp Ttl" Proj:RunResultsW[11]:StdOtherCarbon[1]     = {  RunResultsN[11]:StdOtherCarbon[1]     }
   "Copy Carbon-W - TOTAL  - Comp Ttl" Proj:RunResultsW[11]:StdTotalCarbon[1]     = {  RunResultsN[11]:StdTotalCarbon[1]     }
   "Copy Carbon-W - Elec   - Total"    Proj:RunResultsW[10]:StdElecCarbon[1]      = {  RunResultsN[10]:StdElecCarbon[1]      }
   "Copy Carbon-W - NatGas - Total"    Proj:RunResultsW[10]:StdNatGasCarbon[1]    = {  RunResultsN[10]:StdNatGasCarbon[1]    }
   "Copy Carbon-W - Other  - Total"    Proj:RunResultsW[10]:StdOtherCarbon[1]     = {  RunResultsN[10]:StdOtherCarbon[1]     }
   "Copy Carbon-W - TOTAL  - Total"    Proj:RunResultsW[10]:StdTotalCarbon[1]     = {  RunResultsN[10]:StdTotalCarbon[1]     }
   "Copy StdFinalCarbon[1]-W"          Proj:ResultSummary[5]:StdFinalCarbon[1]    = {  ResultSummary[2]:StdFinalCarbon[1]    }
   "Copy StdExportCarbon[1]-W"         Proj:ResultSummary[5]:StdExportCarbon[1]   = {  ResultSummary[2]:StdExportCarbon[1]   }
   "Copy StdSelfConsCarbon[1]-W"       Proj:ResultSummary[5]:StdSelfConsCarbon[1] = {  ResultSummary[2]:StdSelfConsCarbon[1] }
   "Copy StdNoSolFlxCarbon[1]-W"       Proj:ResultSummary[5]:StdNoSolFlxCarbon[1] = {  ResultSummary[2]:StdNoSolFlxCarbon[1] }
   "Copy StdExclExpCarbon[1]-W"        Proj:ResultSummary[5]:StdExclExpCarbon[1]  = {  ResultSummary[2]:StdExclExpCarbon[1]  }

 ; copy N carbon results to WORST ORIENTATION
   "Copy StdFinalCarbon[1]-x"          Proj:ResultSummary[1]:StdFinalCarbon[1]    = {  ResultSummary[2]:StdFinalCarbon[1]    }
   "Copy StdExportCarbon[1]-x"         Proj:ResultSummary[1]:StdExportCarbon[1]   = {  ResultSummary[2]:StdExportCarbon[1]   }
   "Copy StdSelfConsCarbon[1]-x"       Proj:ResultSummary[1]:StdSelfConsCarbon[1] = {  ResultSummary[2]:StdSelfConsCarbon[1] }
   "Copy StdNoSolFlxCarbon[1]-x"       Proj:ResultSummary[1]:StdNoSolFlxCarbon[1] = {  ResultSummary[2]:StdNoSolFlxCarbon[1] }
   "Copy StdExclExpCarbon[1]-x"        Proj:ResultSummary[1]:StdExclExpCarbon[1]  = {  ResultSummary[2]:StdExclExpCarbon[1]  }
END
;*************************************************************************


;*************************************************************************  - SAC 1/26/18
RULELIST "CARes_DesignRatingResults_Carbon_NESW" 1 0 1 1
;*************************************************************************
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
   "Calculate Carbon-N - Elec   - SpcHt"    Proj:RunResultsN[1]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResultsN[1]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "HtgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - SpcHt"    Proj:RunResultsN[1]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResultsN[1]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - SpcHt"    Proj:RunResultsN[1]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResultsN[1]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - SpcHt"    Proj:RunResultsN[1]:DRtgTotalCarbon[1]   = {  RunResultsN[1]:DRtgElecCarbon[1] + RunResultsN[1]:DRtgNatGasCarbon[1] + RunResultsN[1]:DRtgOtherCarbon[1]  }

  ; Space Cooling (& cooling fan)
   "Calculate Carbon-N - Elec   - SpcCl"    Proj:RunResultsN[2]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResultsN[2]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ClgEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Clg", "FanC" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - SpcCl"    Proj:RunResultsN[2]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResultsN[2]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - SpcCl"    Proj:RunResultsN[2]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResultsN[2]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Clg" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - SpcCl"    Proj:RunResultsN[2]:DRtgTotalCarbon[1]   = {  RunResultsN[2]:DRtgElecCarbon[1] + RunResultsN[2]:DRtgNatGasCarbon[1] + RunResultsN[2]:DRtgOtherCarbon[1]  }

  ; IAQ Ventilation Fans
   "Calculate Carbon-N - Elec   - IAQVent"  Proj:RunResultsN[3]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResultsN[3]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "IAQVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "FanV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - IAQVent"  Proj:RunResultsN[3]:DRtgNatGasCarbon[1]  = {  0  }
   "Calculate Carbon-N - Other  - IAQVent"  Proj:RunResultsN[3]:DRtgOtherCarbon[1]   = {  0  }
   "Calculate Carbon-N - Total  - IAQVent"  Proj:RunResultsN[3]:DRtgTotalCarbon[1]   = {  RunResultsN[3]:DRtgElecCarbon[1]  }

  ; Other HVAC (aux & misc fans)
   ; SAC 11/15/18 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
   ; SAC 1/27/19 - switched if check from "LocalRef( RunResultsN[4]:DRtgElecEnergy[1] )" to "HourlyResultSum( RunID, "MtrElec", "User1" )" since OthrHVAC would already have been re-allocated to SpcHt & SpcCl by now (tic #1053)
   "Calculate Carbon-N - Elec   - OthrHVAC" Proj:RunResultsN[4]:DRtgElecCarbon[1]    = {  if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "OHVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "User1" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - OthrHVAC" Proj:RunResultsN[4]:DRtgNatGasCarbon[1]  = {  0  }
   "Calculate Carbon-N - Other  - OthrHVAC" Proj:RunResultsN[4]:DRtgOtherCarbon[1]   = {  0  }
   "Calculate Carbon-N - Total  - OthrHVAC" Proj:RunResultsN[4]:DRtgTotalCarbon[1]   = {  RunResultsN[4]:DRtgElecCarbon[1]  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC N-DRtg Carbon use across SpcHt & SpcCl by fuel based on ratio of total carbon (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - N-DRtgCarbon"   Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsN[4]:DRtgTotalCarbon[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsN[1]:DRtgTotalCarbon[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsN[2]:DRtgTotalCarbon[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsN[1]:DRtgTotalCarbon[1], 0 ) / 
                                                                                 (ValidOr( RunResultsN[1]:DRtgTotalCarbon[1], 0 ) + ValidOr( RunResultsN[2]:DRtgTotalCarbon[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - N-SpcHt"		Proj:RunResultsN[1]:DRtgElecCarbon[1]	= {   if (IfValidAnd( RunResultsN[4]:DRtgElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsN[1]:DRtgElecCarbon[1] + (RunResultsN[4]:DRtgElecCarbon[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcHt"		Proj:RunResultsN[1]:DRtgTotalCarbon[1]	= {	LocalRef( RunResultsN[1]:DRtgElecCarbon[1] ) + LocalRef( RunResultsN[1]:DRtgNatGasCarbon[1] ) + LocalRef( RunResultsN[1]:DRtgOtherCarbon[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - N-SpcCl"		Proj:RunResultsN[2]:DRtgElecCarbon[1]	= {   if (IfValidAnd( RunResultsN[4]:DRtgElecCarbon[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsN[2]:DRtgElecCarbon[1] + (RunResultsN[4]:DRtgElecCarbon[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcCl"		Proj:RunResultsN[2]:DRtgTotalCarbon[1]	= {	LocalRef( RunResultsN[2]:DRtgElecCarbon[1] ) + LocalRef( RunResultsN[2]:DRtgNatGasCarbon[1] ) + LocalRef( RunResultsN[2]:DRtgOtherCarbon[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - N-OthrHVAC"	Proj:RunResultsN[4]:DRtgElecCarbon[1]	= {	0  }
	"ZERO-OUT         - TOTAL  - N-OthrHVAC"	Proj:RunResultsN[4]:DRtgTotalCarbon[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC DRtgCarbon

  ; Water Heating
   "Calculate Carbon-N - Elec   - WtrHt"    Proj:RunResultsN[5]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResultsN[5]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else if (CSEinclDHWMFL_EU)
			 			  																							   then  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412 / CondFloorArea
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "WHtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412 / CondFloorArea  endif endif  }
   "Calculate Carbon-N - NatGas - WtrHt"    Proj:RunResultsN[5]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResultsN[5]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - WtrHt"    Proj:RunResultsN[5]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResultsN[5]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - WtrHt"    Proj:RunResultsN[5]:DRtgTotalCarbon[1]   = {  RunResultsN[5]:DRtgElecCarbon[1] + RunResultsN[5]:DRtgNatGasCarbon[1] + RunResultsN[5]:DRtgOtherCarbon[1]  }

  ; Inside Lighting
   "Calculate Carbon-N - Elec   - InsLtg"   Proj:RunResultsN[6]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResultsN[6]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ILtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Lit" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - InsLtg"   Proj:RunResultsN[6]:DRtgNatGasCarbon[1]  = {  0  }
   "Calculate Carbon-N - Other  - InsLtg"   Proj:RunResultsN[6]:DRtgOtherCarbon[1]   = {  0  }
   "Calculate Carbon-N - Total  - InsLtg"   Proj:RunResultsN[6]:DRtgTotalCarbon[1]   = {  RunResultsN[6]:DRtgElecCarbon[1]  }

  ; Appliances & Cooking
   "Calculate Carbon-N - Elec   - AppCkg"   Proj:RunResultsN[7]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResultsN[7]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "AppEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - AppCkg"   Proj:RunResultsN[7]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResultsN[7]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - AppCkg"   Proj:RunResultsN[7]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResultsN[7]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - AppCkg"   Proj:RunResultsN[7]:DRtgTotalCarbon[1]   = {  RunResultsN[7]:DRtgElecCarbon[1] + RunResultsN[7]:DRtgNatGasCarbon[1] + RunResultsN[7]:DRtgOtherCarbon[1]  }

  ; Plug Loads
   "Calculate Carbon-N - Elec   - Plugs"    Proj:RunResultsN[8]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResultsN[8]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "RcpEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Rcp" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - Plugs"    Proj:RunResultsN[8]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResultsN[8]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - Plugs"    Proj:RunResultsN[8]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResultsN[8]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - Plugs"    Proj:RunResultsN[8]:DRtgTotalCarbon[1]   = {  RunResultsN[8]:DRtgElecCarbon[1] + RunResultsN[8]:DRtgNatGasCarbon[1] + RunResultsN[8]:DRtgOtherCarbon[1]  }

  ; Exterior
   "Calculate Carbon-N - Elec   - Ext"      Proj:RunResultsN[9]:DRtgElecCarbon[1]    = {  if (LocalRef( RunResultsN[9]:DRtgElecEnergy[1]   ) < 0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "ExtEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Ext" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - Ext"      Proj:RunResultsN[9]:DRtgNatGasCarbon[1]  = {  if (LocalRef( RunResultsN[9]:DRtgNatGasEnergy[1] ) < 0.0001) then  0
                                                                                          else  Proj:NatGasCarbonEmis * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Other  - Ext"      Proj:RunResultsN[9]:DRtgOtherCarbon[1]   = {  if (LocalRef( RunResultsN[9]:DRtgOtherEnergy[1]  ) < 0.0001) then  0
                                                                                          else  Proj:OtherCarbonEmis  * Proj:CO2FuelTableMult * HourlyResultSum( "DesignRating", "MtrOther",  "Ext" ) / CondFloorArea  endif  }
   "Calculate Carbon-N - Total  - Ext"      Proj:RunResultsN[9]:DRtgTotalCarbon[1]   = {  RunResultsN[9]:DRtgElecCarbon[1] + RunResultsN[9]:DRtgNatGasCarbon[1] + RunResultsN[9]:DRtgOtherCarbon[1]  }

  ; PV
   "Calculate Carbon-N - Elec   - PV"       Proj:RunResultsN[13]:DRtgElecCarbon[1]   = {  if (LocalRef( RunResultsN[13]:DRtgElecEnergy[1]   ) > -0.0001) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "PVEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "PV" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - PV"       Proj:RunResultsN[13]:DRtgNatGasCarbon[1] = {  0  }
   "Calculate Carbon-N - Other  - PV"       Proj:RunResultsN[13]:DRtgOtherCarbon[1]  = {  0  }
   "Calculate Carbon-N - Total  - PV"       Proj:RunResultsN[13]:DRtgTotalCarbon[1]  = {  RunResultsN[13]:DRtgElecCarbon[1]  }

  ; Battery
   "Calculate Carbon-N - Elec   - Battery"  Proj:RunResultsN[14]:DRtgElecCarbon[1]   = {  if (LocalRef( RunResultsN[14]:DRtgElecEnergy[1]   ) = 0) then  0
                                                                                          else  Proj:CO2ElecTableMult * ApplyHourlyResultMultipliers( "BTEC", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "BT" ) / 3.412 / CondFloorArea  endif  }
   "Calculate Carbon-N - NatGas - Battery"  Proj:RunResultsN[14]:DRtgNatGasCarbon[1] = {  0  }
   "Calculate Carbon-N - Other  - Battery"  Proj:RunResultsN[14]:DRtgOtherCarbon[1]  = {  0  }
   "Calculate Carbon-N - Total  - Battery"  Proj:RunResultsN[14]:DRtgTotalCarbon[1]  = {  RunResultsN[14]:DRtgElecCarbon[1]  }

  ; Compliance Total
   "Calculate Carbon-N - Elec   - Comp Ttl" Proj:RunResultsN[11]:DRtgElecCarbon[1]   = {	RunResultsN[1]:DRtgElecCarbon[1]   + RunResultsN[2]:DRtgElecCarbon[1]   + RunResultsN[3]:DRtgElecCarbon[1]   + RunResultsN[4]:DRtgElecCarbon[1]   + RunResultsN[5]:DRtgElecCarbon[1]     }
   "Calculate Carbon-N - NatGas - Comp Ttl" Proj:RunResultsN[11]:DRtgNatGasCarbon[1] = {	RunResultsN[1]:DRtgNatGasCarbon[1] + RunResultsN[2]:DRtgNatGasCarbon[1] + RunResultsN[3]:DRtgNatGasCarbon[1] + RunResultsN[4]:DRtgNatGasCarbon[1] + RunResultsN[5]:DRtgNatGasCarbon[1]   }
   "Calculate Carbon-N - Other  - Comp Ttl" Proj:RunResultsN[11]:DRtgOtherCarbon[1]  = {	RunResultsN[1]:DRtgOtherCarbon[1]  + RunResultsN[2]:DRtgOtherCarbon[1]  + RunResultsN[3]:DRtgOtherCarbon[1]  + RunResultsN[4]:DRtgOtherCarbon[1]  + RunResultsN[5]:DRtgOtherCarbon[1]    }
   "Calculate Carbon-N - TOTAL  - Comp Ttl" Proj:RunResultsN[11]:DRtgTotalCarbon[1]  = {	RunResultsN[1]:DRtgTotalCarbon[1]  + RunResultsN[2]:DRtgTotalCarbon[1]  + RunResultsN[3]:DRtgTotalCarbon[1]  + RunResultsN[4]:DRtgTotalCarbon[1]  + RunResultsN[5]:DRtgTotalCarbon[1]    }

  ; Total
   "Calculate Carbon-N - Elec   - Total"    Proj:RunResultsN[10]:DRtgElecCarbon[1]   = {	RunResultsN[11]:DRtgElecCarbon[1]   + RunResultsN[6]:DRtgElecCarbon[1]   + RunResultsN[7]:DRtgElecCarbon[1]   + RunResultsN[8]:DRtgElecCarbon[1]   + RunResultsN[9]:DRtgElecCarbon[1]   + RunResultsN[13]:DRtgElecCarbon[1]   + RunResultsN[14]:DRtgElecCarbon[1]     }
   "Calculate Carbon-N - NatGas - Total"    Proj:RunResultsN[10]:DRtgNatGasCarbon[1] = {	RunResultsN[11]:DRtgNatGasCarbon[1] + RunResultsN[6]:DRtgNatGasCarbon[1] + RunResultsN[7]:DRtgNatGasCarbon[1] + RunResultsN[8]:DRtgNatGasCarbon[1] + RunResultsN[9]:DRtgNatGasCarbon[1] + RunResultsN[13]:DRtgNatGasCarbon[1] + RunResultsN[14]:DRtgNatGasCarbon[1]   }
   "Calculate Carbon-N - Other  - Total"    Proj:RunResultsN[10]:DRtgOtherCarbon[1]  = {	RunResultsN[11]:DRtgOtherCarbon[1]  + RunResultsN[6]:DRtgOtherCarbon[1]  + RunResultsN[7]:DRtgOtherCarbon[1]  + RunResultsN[8]:DRtgOtherCarbon[1]  + RunResultsN[9]:DRtgOtherCarbon[1]  + RunResultsN[13]:DRtgOtherCarbon[1]  + RunResultsN[14]:DRtgOtherCarbon[1]    }
   "Calculate Carbon-N - TOTAL  - Total"    Proj:RunResultsN[10]:DRtgTotalCarbon[1]  = {	RunResultsN[11]:DRtgTotalCarbon[1]  + RunResultsN[6]:DRtgTotalCarbon[1]  + RunResultsN[7]:DRtgTotalCarbon[1]  + RunResultsN[8]:DRtgTotalCarbon[1]  + RunResultsN[9]:DRtgTotalCarbon[1]  + RunResultsN[13]:DRtgTotalCarbon[1]  + RunResultsN[14]:DRtgTotalCarbon[1]    }

  ; Summary values
   "Calculate DRtgFinalCarbon[1]-othr-N"  Proj:ResultSummary[2]:DRtgFinalCarbon[1]   = {  CondFloorArea * RunResultsN[10]:DRtgTotalCarbon[1]  }
   "Calculate DRtgExportCarbon[1]-N"      Proj:ResultSummary[2]:DRtgExportCarbon[1]  = {  -1 * ApplyHourlyResultMultipliers_Neg( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "Tot" ) * Proj:CO2ElecTableMult / 3.412  }
   "Calculate DRtgSelfConsCarbon[1]-N"    Proj:ResultSummary[2]:DRtgSelfConsCarbon[1] ={   if (IfValidAnd( RunResultsN[14]:DRtgElecEnergy[1] != 0 )==0)
                                                                                          then  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "PV" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[2]:DRtgExportCarbon[1]
                                                                                          else  (-1 * ApplyHourlyResultMultipliers( "none", "CA_Carbon_Elec", ClimateZone, 1, "none", 0, 0, "DesignRating", "MtrElec",   "PV", "BT" ) * Proj:CO2ElecTableMult / 3.412) -
                                                                                                ResultSummary[2]:DRtgExportCarbon[1]
                                                                                          endif  }
   "Calculate DRtgNoSolFlxCarbon[1]-N"    Proj:ResultSummary[2]:DRtgNoSolFlxCarbon[1] ={  (RunResultsN[10]:DRtgTotalCarbon[1] - RunResultsN[13]:DRtgTotalCarbon[1] - RunResultsN[14]:DRtgTotalCarbon[1]) * CondFloorArea  }

 ; round EUseSummary DRtgDesign values for display/reporting - SAC 1/15/18
   "Round DRtgFinalCarbon[1]-N"      Proj:ResultSummary[2]:DRtgFinalCarbon[1]      = {
         if (LocalStatus( ResultSummary[2]:DRtgFinalCarbon[1] ) < 1) then  UNCHANGED
         else if (ResultSummary[2]:DRtgFinalCarbon[1] < 0)
         then  int( (100 * ResultSummary[2]:DRtgFinalCarbon[1]) - 0.5 ) / 100
         else  int( (100 * ResultSummary[2]:DRtgFinalCarbon[1]) + 0.5 ) / 100  endif endif  }
   "Round DRtgExportCarbon[1]-N"     Proj:ResultSummary[2]:DRtgExportCarbon[1]     = {
         if (LocalStatus( ResultSummary[2]:DRtgExportCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[2]:DRtgExportCarbon[1]) + 0.5 ) / 100  endif  }
   "Round DRtgSelfConsCarbon[1]-N"   Proj:ResultSummary[2]:DRtgSelfConsCarbon[1]   = {
         if (LocalStatus( ResultSummary[2]:DRtgSelfConsCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[2]:DRtgSelfConsCarbon[1]) + 0.5 ) / 100  endif  }
   "Round DRtgNoSolFlxCarbon[1]-N"   Proj:ResultSummary[2]:DRtgNoSolFlxCarbon[1]   = {
         if (LocalStatus( ResultSummary[2]:DRtgNoSolFlxCarbon[1] ) < 1) then  UNCHANGED
         else  int( (100 * ResultSummary[2]:DRtgNoSolFlxCarbon[1]) + 0.5 ) / 100  endif  }
   ; SAC 6/30/18 - added ExclExp properties (tic #1028)
   "Calc DRtgExclExpCarbon[1]-N"     Proj:ResultSummary[2]:DRtgExclExpCarbon[1]    = {
         ResultSummary[2]:DRtgNoSolFlxCarbon[1] - ResultSummary[2]:DRtgSelfConsCarbon[1]  }

 ; copy N carbon results to EAST
   "Copy Carbon-E - Elec   - SpcHt"    Proj:RunResultsE[1]:DRtgElecCarbon[1]       = { RunResultsN[1]:DRtgElecCarbon[1]       }
   "Copy Carbon-E - NatGas - SpcHt"    Proj:RunResultsE[1]:DRtgNatGasCarbon[1]     = { RunResultsN[1]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - SpcHt"    Proj:RunResultsE[1]:DRtgOtherCarbon[1]      = { RunResultsN[1]:DRtgOtherCarbon[1]      }
   "Copy Carbon-E - Total  - SpcHt"    Proj:RunResultsE[1]:DRtgTotalCarbon[1]      = { RunResultsN[1]:DRtgTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - SpcCl"    Proj:RunResultsE[2]:DRtgElecCarbon[1]       = { RunResultsN[2]:DRtgElecCarbon[1]       }
   "Copy Carbon-E - NatGas - SpcCl"    Proj:RunResultsE[2]:DRtgNatGasCarbon[1]     = { RunResultsN[2]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - SpcCl"    Proj:RunResultsE[2]:DRtgOtherCarbon[1]      = { RunResultsN[2]:DRtgOtherCarbon[1]      }
   "Copy Carbon-E - Total  - SpcCl"    Proj:RunResultsE[2]:DRtgTotalCarbon[1]      = { RunResultsN[2]:DRtgTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - IAQVent"  Proj:RunResultsE[3]:DRtgElecCarbon[1]       = { RunResultsN[3]:DRtgElecCarbon[1]       }
   "Copy Carbon-E - NatGas - IAQVent"  Proj:RunResultsE[3]:DRtgNatGasCarbon[1]     = { RunResultsN[3]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - IAQVent"  Proj:RunResultsE[3]:DRtgOtherCarbon[1]      = { RunResultsN[3]:DRtgOtherCarbon[1]      }
   "Copy Carbon-E - Total  - IAQVent"  Proj:RunResultsE[3]:DRtgTotalCarbon[1]      = { RunResultsN[3]:DRtgTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - OthrHVAC" Proj:RunResultsE[4]:DRtgElecCarbon[1]       = { RunResultsN[4]:DRtgElecCarbon[1]       }
   "Copy Carbon-E - NatGas - OthrHVAC" Proj:RunResultsE[4]:DRtgNatGasCarbon[1]     = { RunResultsN[4]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - OthrHVAC" Proj:RunResultsE[4]:DRtgOtherCarbon[1]      = { RunResultsN[4]:DRtgOtherCarbon[1]      }
   "Copy Carbon-E - Total  - OthrHVAC" Proj:RunResultsE[4]:DRtgTotalCarbon[1]      = { RunResultsN[4]:DRtgTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - WtrHt"    Proj:RunResultsE[5]:DRtgElecCarbon[1]       = { RunResultsN[5]:DRtgElecCarbon[1]       }
   "Copy Carbon-E - NatGas - WtrHt"    Proj:RunResultsE[5]:DRtgNatGasCarbon[1]     = { RunResultsN[5]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - WtrHt"    Proj:RunResultsE[5]:DRtgOtherCarbon[1]      = { RunResultsN[5]:DRtgOtherCarbon[1]      }
   "Copy Carbon-E - Total  - WtrHt"    Proj:RunResultsE[5]:DRtgTotalCarbon[1]      = { RunResultsN[5]:DRtgTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - InsLtg"   Proj:RunResultsE[6]:DRtgElecCarbon[1]       = { RunResultsN[6]:DRtgElecCarbon[1]       }
   "Copy Carbon-E - NatGas - InsLtg"   Proj:RunResultsE[6]:DRtgNatGasCarbon[1]     = { RunResultsN[6]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - InsLtg"   Proj:RunResultsE[6]:DRtgOtherCarbon[1]      = { RunResultsN[6]:DRtgOtherCarbon[1]      }
   "Copy Carbon-E - Total  - InsLtg"   Proj:RunResultsE[6]:DRtgTotalCarbon[1]      = { RunResultsN[6]:DRtgTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - AppCkg"   Proj:RunResultsE[7]:DRtgElecCarbon[1]       = { RunResultsN[7]:DRtgElecCarbon[1]       }
   "Copy Carbon-E - NatGas - AppCkg"   Proj:RunResultsE[7]:DRtgNatGasCarbon[1]     = { RunResultsN[7]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - AppCkg"   Proj:RunResultsE[7]:DRtgOtherCarbon[1]      = { RunResultsN[7]:DRtgOtherCarbon[1]      }
   "Copy Carbon-E - Total  - AppCkg"   Proj:RunResultsE[7]:DRtgTotalCarbon[1]      = { RunResultsN[7]:DRtgTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - Plugs"    Proj:RunResultsE[8]:DRtgElecCarbon[1]       = { RunResultsN[8]:DRtgElecCarbon[1]       }
   "Copy Carbon-E - NatGas - Plugs"    Proj:RunResultsE[8]:DRtgNatGasCarbon[1]     = { RunResultsN[8]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - Plugs"    Proj:RunResultsE[8]:DRtgOtherCarbon[1]      = { RunResultsN[8]:DRtgOtherCarbon[1]      }
   "Copy Carbon-E - Total  - Plugs"    Proj:RunResultsE[8]:DRtgTotalCarbon[1]      = { RunResultsN[8]:DRtgTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - Ext"      Proj:RunResultsE[9]:DRtgElecCarbon[1]       = { RunResultsN[9]:DRtgElecCarbon[1]       }
   "Copy Carbon-E - NatGas - Ext"      Proj:RunResultsE[9]:DRtgNatGasCarbon[1]     = { RunResultsN[9]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-E - Other  - Ext"      Proj:RunResultsE[9]:DRtgOtherCarbon[1]      = { RunResultsN[9]:DRtgOtherCarbon[1]      }
   "Copy Carbon-E - Total  - Ext"      Proj:RunResultsE[9]:DRtgTotalCarbon[1]      = { RunResultsN[9]:DRtgTotalCarbon[1]      }
   "Copy Carbon-E - Elec   - PV"       Proj:RunResultsE[13]:DRtgElecCarbon[1]      = { RunResultsN[13]:DRtgElecCarbon[1]      }
   "Copy Carbon-E - NatGas - PV"       Proj:RunResultsE[13]:DRtgNatGasCarbon[1]    = { RunResultsN[13]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-E - Other  - PV"       Proj:RunResultsE[13]:DRtgOtherCarbon[1]     = { RunResultsN[13]:DRtgOtherCarbon[1]     }
   "Copy Carbon-E - Total  - PV"       Proj:RunResultsE[13]:DRtgTotalCarbon[1]     = { RunResultsN[13]:DRtgTotalCarbon[1]     }
   "Copy Carbon-E - Elec   - Battery"  Proj:RunResultsE[14]:DRtgElecCarbon[1]      = { RunResultsN[14]:DRtgElecCarbon[1]      }
   "Copy Carbon-E - NatGas - Battery"  Proj:RunResultsE[14]:DRtgNatGasCarbon[1]    = { RunResultsN[14]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-E - Other  - Battery"  Proj:RunResultsE[14]:DRtgOtherCarbon[1]     = { RunResultsN[14]:DRtgOtherCarbon[1]     }
   "Copy Carbon-E - Total  - Battery"  Proj:RunResultsE[14]:DRtgTotalCarbon[1]     = { RunResultsN[14]:DRtgTotalCarbon[1]     }
   "Copy Carbon-E - Elec   - Comp Ttl" Proj:RunResultsE[11]:DRtgElecCarbon[1]      = { RunResultsN[11]:DRtgElecCarbon[1]      }
   "Copy Carbon-E - NatGas - Comp Ttl" Proj:RunResultsE[11]:DRtgNatGasCarbon[1]    = { RunResultsN[11]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-E - Other  - Comp Ttl" Proj:RunResultsE[11]:DRtgOtherCarbon[1]     = { RunResultsN[11]:DRtgOtherCarbon[1]     }
   "Copy Carbon-E - TOTAL  - Comp Ttl" Proj:RunResultsE[11]:DRtgTotalCarbon[1]     = { RunResultsN[11]:DRtgTotalCarbon[1]     }
   "Copy Carbon-E - Elec   - Total"    Proj:RunResultsE[10]:DRtgElecCarbon[1]      = { RunResultsN[10]:DRtgElecCarbon[1]      }
   "Copy Carbon-E - NatGas - Total"    Proj:RunResultsE[10]:DRtgNatGasCarbon[1]    = { RunResultsN[10]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-E - Other  - Total"    Proj:RunResultsE[10]:DRtgOtherCarbon[1]     = { RunResultsN[10]:DRtgOtherCarbon[1]     }
   "Copy Carbon-E - TOTAL  - Total"    Proj:RunResultsE[10]:DRtgTotalCarbon[1]     = { RunResultsN[10]:DRtgTotalCarbon[1]     }
   "Copy DRtgFinalCarbon[1]-E"         Proj:ResultSummary[3]:DRtgFinalCarbon[1]    = { ResultSummary[2]:DRtgFinalCarbon[1]    }
   "Copy DRtgExportCarbon[1]-E"        Proj:ResultSummary[3]:DRtgExportCarbon[1]   = { ResultSummary[2]:DRtgExportCarbon[1]   }
   "Copy DRtgSelfConsCarbon[1]-E"      Proj:ResultSummary[3]:DRtgSelfConsCarbon[1] = { ResultSummary[2]:DRtgSelfConsCarbon[1] }
   "Copy DRtgNoSolFlxCarbon[1]-E"      Proj:ResultSummary[3]:DRtgNoSolFlxCarbon[1] = { ResultSummary[2]:DRtgNoSolFlxCarbon[1] }
   "Copy DRtgExclExpCarbon[1]-E"       Proj:ResultSummary[3]:DRtgExclExpCarbon[1]  = { ResultSummary[2]:DRtgExclExpCarbon[1]  }

 ; copy N carbon results to SOUTH
   "Copy Carbon-S - Elec   - SpcHt"    Proj:RunResultsS[1]:DRtgElecCarbon[1]       = { RunResultsN[1]:DRtgElecCarbon[1]       }
   "Copy Carbon-S - NatGas - SpcHt"    Proj:RunResultsS[1]:DRtgNatGasCarbon[1]     = { RunResultsN[1]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - SpcHt"    Proj:RunResultsS[1]:DRtgOtherCarbon[1]      = { RunResultsN[1]:DRtgOtherCarbon[1]      }
   "Copy Carbon-S - Total  - SpcHt"    Proj:RunResultsS[1]:DRtgTotalCarbon[1]      = { RunResultsN[1]:DRtgTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - SpcCl"    Proj:RunResultsS[2]:DRtgElecCarbon[1]       = { RunResultsN[2]:DRtgElecCarbon[1]       }
   "Copy Carbon-S - NatGas - SpcCl"    Proj:RunResultsS[2]:DRtgNatGasCarbon[1]     = { RunResultsN[2]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - SpcCl"    Proj:RunResultsS[2]:DRtgOtherCarbon[1]      = { RunResultsN[2]:DRtgOtherCarbon[1]      }
   "Copy Carbon-S - Total  - SpcCl"    Proj:RunResultsS[2]:DRtgTotalCarbon[1]      = { RunResultsN[2]:DRtgTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - IAQVent"  Proj:RunResultsS[3]:DRtgElecCarbon[1]       = { RunResultsN[3]:DRtgElecCarbon[1]       }
   "Copy Carbon-S - NatGas - IAQVent"  Proj:RunResultsS[3]:DRtgNatGasCarbon[1]     = { RunResultsN[3]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - IAQVent"  Proj:RunResultsS[3]:DRtgOtherCarbon[1]      = { RunResultsN[3]:DRtgOtherCarbon[1]      }
   "Copy Carbon-S - Total  - IAQVent"  Proj:RunResultsS[3]:DRtgTotalCarbon[1]      = { RunResultsN[3]:DRtgTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - OthrHVAC" Proj:RunResultsS[4]:DRtgElecCarbon[1]       = { RunResultsN[4]:DRtgElecCarbon[1]       }
   "Copy Carbon-S - NatGas - OthrHVAC" Proj:RunResultsS[4]:DRtgNatGasCarbon[1]     = { RunResultsN[4]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - OthrHVAC" Proj:RunResultsS[4]:DRtgOtherCarbon[1]      = { RunResultsN[4]:DRtgOtherCarbon[1]      }
   "Copy Carbon-S - Total  - OthrHVAC" Proj:RunResultsS[4]:DRtgTotalCarbon[1]      = { RunResultsN[4]:DRtgTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - WtrHt"    Proj:RunResultsS[5]:DRtgElecCarbon[1]       = { RunResultsN[5]:DRtgElecCarbon[1]       }
   "Copy Carbon-S - NatGas - WtrHt"    Proj:RunResultsS[5]:DRtgNatGasCarbon[1]     = { RunResultsN[5]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - WtrHt"    Proj:RunResultsS[5]:DRtgOtherCarbon[1]      = { RunResultsN[5]:DRtgOtherCarbon[1]      }
   "Copy Carbon-S - Total  - WtrHt"    Proj:RunResultsS[5]:DRtgTotalCarbon[1]      = { RunResultsN[5]:DRtgTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - InsLtg"   Proj:RunResultsS[6]:DRtgElecCarbon[1]       = { RunResultsN[6]:DRtgElecCarbon[1]       }
   "Copy Carbon-S - NatGas - InsLtg"   Proj:RunResultsS[6]:DRtgNatGasCarbon[1]     = { RunResultsN[6]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - InsLtg"   Proj:RunResultsS[6]:DRtgOtherCarbon[1]      = { RunResultsN[6]:DRtgOtherCarbon[1]      }
   "Copy Carbon-S - Total  - InsLtg"   Proj:RunResultsS[6]:DRtgTotalCarbon[1]      = { RunResultsN[6]:DRtgTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - AppCkg"   Proj:RunResultsS[7]:DRtgElecCarbon[1]       = { RunResultsN[7]:DRtgElecCarbon[1]       }
   "Copy Carbon-S - NatGas - AppCkg"   Proj:RunResultsS[7]:DRtgNatGasCarbon[1]     = { RunResultsN[7]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - AppCkg"   Proj:RunResultsS[7]:DRtgOtherCarbon[1]      = { RunResultsN[7]:DRtgOtherCarbon[1]      }
   "Copy Carbon-S - Total  - AppCkg"   Proj:RunResultsS[7]:DRtgTotalCarbon[1]      = { RunResultsN[7]:DRtgTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - Plugs"    Proj:RunResultsS[8]:DRtgElecCarbon[1]       = { RunResultsN[8]:DRtgElecCarbon[1]       }
   "Copy Carbon-S - NatGas - Plugs"    Proj:RunResultsS[8]:DRtgNatGasCarbon[1]     = { RunResultsN[8]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - Plugs"    Proj:RunResultsS[8]:DRtgOtherCarbon[1]      = { RunResultsN[8]:DRtgOtherCarbon[1]      }
   "Copy Carbon-S - Total  - Plugs"    Proj:RunResultsS[8]:DRtgTotalCarbon[1]      = { RunResultsN[8]:DRtgTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - Ext"      Proj:RunResultsS[9]:DRtgElecCarbon[1]       = { RunResultsN[9]:DRtgElecCarbon[1]       }
   "Copy Carbon-S - NatGas - Ext"      Proj:RunResultsS[9]:DRtgNatGasCarbon[1]     = { RunResultsN[9]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-S - Other  - Ext"      Proj:RunResultsS[9]:DRtgOtherCarbon[1]      = { RunResultsN[9]:DRtgOtherCarbon[1]      }
   "Copy Carbon-S - Total  - Ext"      Proj:RunResultsS[9]:DRtgTotalCarbon[1]      = { RunResultsN[9]:DRtgTotalCarbon[1]      }
   "Copy Carbon-S - Elec   - PV"       Proj:RunResultsS[13]:DRtgElecCarbon[1]      = { RunResultsN[13]:DRtgElecCarbon[1]      }
   "Copy Carbon-S - NatGas - PV"       Proj:RunResultsS[13]:DRtgNatGasCarbon[1]    = { RunResultsN[13]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-S - Other  - PV"       Proj:RunResultsS[13]:DRtgOtherCarbon[1]     = { RunResultsN[13]:DRtgOtherCarbon[1]     }
   "Copy Carbon-S - Total  - PV"       Proj:RunResultsS[13]:DRtgTotalCarbon[1]     = { RunResultsN[13]:DRtgTotalCarbon[1]     }
   "Copy Carbon-S - Elec   - Battery"  Proj:RunResultsS[14]:DRtgElecCarbon[1]      = { RunResultsN[14]:DRtgElecCarbon[1]      }
   "Copy Carbon-S - NatGas - Battery"  Proj:RunResultsS[14]:DRtgNatGasCarbon[1]    = { RunResultsN[14]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-S - Other  - Battery"  Proj:RunResultsS[14]:DRtgOtherCarbon[1]     = { RunResultsN[14]:DRtgOtherCarbon[1]     }
   "Copy Carbon-S - Total  - Battery"  Proj:RunResultsS[14]:DRtgTotalCarbon[1]     = { RunResultsN[14]:DRtgTotalCarbon[1]     }
   "Copy Carbon-S - Elec   - Comp Ttl" Proj:RunResultsS[11]:DRtgElecCarbon[1]      = { RunResultsN[11]:DRtgElecCarbon[1]      }
   "Copy Carbon-S - NatGas - Comp Ttl" Proj:RunResultsS[11]:DRtgNatGasCarbon[1]    = { RunResultsN[11]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-S - Other  - Comp Ttl" Proj:RunResultsS[11]:DRtgOtherCarbon[1]     = { RunResultsN[11]:DRtgOtherCarbon[1]     }
   "Copy Carbon-S - TOTAL  - Comp Ttl" Proj:RunResultsS[11]:DRtgTotalCarbon[1]     = { RunResultsN[11]:DRtgTotalCarbon[1]     }
   "Copy Carbon-S - Elec   - Total"    Proj:RunResultsS[10]:DRtgElecCarbon[1]      = { RunResultsN[10]:DRtgElecCarbon[1]      }
   "Copy Carbon-S - NatGas - Total"    Proj:RunResultsS[10]:DRtgNatGasCarbon[1]    = { RunResultsN[10]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-S - Other  - Total"    Proj:RunResultsS[10]:DRtgOtherCarbon[1]     = { RunResultsN[10]:DRtgOtherCarbon[1]     }
   "Copy Carbon-S - TOTAL  - Total"    Proj:RunResultsS[10]:DRtgTotalCarbon[1]     = { RunResultsN[10]:DRtgTotalCarbon[1]     }
   "Copy DRtgFinalCarbon[1]-S"         Proj:ResultSummary[4]:DRtgFinalCarbon[1]    = { ResultSummary[2]:DRtgFinalCarbon[1]    }
   "Copy DRtgExportCarbon[1]-S"        Proj:ResultSummary[4]:DRtgExportCarbon[1]   = { ResultSummary[2]:DRtgExportCarbon[1]   }
   "Copy DRtgSelfConsCarbon[1]-S"      Proj:ResultSummary[4]:DRtgSelfConsCarbon[1] = { ResultSummary[2]:DRtgSelfConsCarbon[1] }
   "Copy DRtgNoSolFlxCarbon[1]-S"      Proj:ResultSummary[4]:DRtgNoSolFlxCarbon[1] = { ResultSummary[2]:DRtgNoSolFlxCarbon[1] }
   "Copy DRtgExclExpCarbon[1]-S"       Proj:ResultSummary[4]:DRtgExclExpCarbon[1]  = { ResultSummary[2]:DRtgExclExpCarbon[1]  }

 ; copy N carbon results to WEST
   "Copy Carbon-W - Elec   - SpcHt"    Proj:RunResultsW[1]:DRtgElecCarbon[1]       = { RunResultsN[1]:DRtgElecCarbon[1]       }
   "Copy Carbon-W - NatGas - SpcHt"    Proj:RunResultsW[1]:DRtgNatGasCarbon[1]     = { RunResultsN[1]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - SpcHt"    Proj:RunResultsW[1]:DRtgOtherCarbon[1]      = { RunResultsN[1]:DRtgOtherCarbon[1]      }
   "Copy Carbon-W - Total  - SpcHt"    Proj:RunResultsW[1]:DRtgTotalCarbon[1]      = { RunResultsN[1]:DRtgTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - SpcCl"    Proj:RunResultsW[2]:DRtgElecCarbon[1]       = { RunResultsN[2]:DRtgElecCarbon[1]       }
   "Copy Carbon-W - NatGas - SpcCl"    Proj:RunResultsW[2]:DRtgNatGasCarbon[1]     = { RunResultsN[2]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - SpcCl"    Proj:RunResultsW[2]:DRtgOtherCarbon[1]      = { RunResultsN[2]:DRtgOtherCarbon[1]      }
   "Copy Carbon-W - Total  - SpcCl"    Proj:RunResultsW[2]:DRtgTotalCarbon[1]      = { RunResultsN[2]:DRtgTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - IAQVent"  Proj:RunResultsW[3]:DRtgElecCarbon[1]       = { RunResultsN[3]:DRtgElecCarbon[1]       }
   "Copy Carbon-W - NatGas - IAQVent"  Proj:RunResultsW[3]:DRtgNatGasCarbon[1]     = { RunResultsN[3]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - IAQVent"  Proj:RunResultsW[3]:DRtgOtherCarbon[1]      = { RunResultsN[3]:DRtgOtherCarbon[1]      }
   "Copy Carbon-W - Total  - IAQVent"  Proj:RunResultsW[3]:DRtgTotalCarbon[1]      = { RunResultsN[3]:DRtgTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - OthrHVAC" Proj:RunResultsW[4]:DRtgElecCarbon[1]       = { RunResultsN[4]:DRtgElecCarbon[1]       }
   "Copy Carbon-W - NatGas - OthrHVAC" Proj:RunResultsW[4]:DRtgNatGasCarbon[1]     = { RunResultsN[4]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - OthrHVAC" Proj:RunResultsW[4]:DRtgOtherCarbon[1]      = { RunResultsN[4]:DRtgOtherCarbon[1]      }
   "Copy Carbon-W - Total  - OthrHVAC" Proj:RunResultsW[4]:DRtgTotalCarbon[1]      = { RunResultsN[4]:DRtgTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - WtrHt"    Proj:RunResultsW[5]:DRtgElecCarbon[1]       = { RunResultsN[5]:DRtgElecCarbon[1]       }
   "Copy Carbon-W - NatGas - WtrHt"    Proj:RunResultsW[5]:DRtgNatGasCarbon[1]     = { RunResultsN[5]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - WtrHt"    Proj:RunResultsW[5]:DRtgOtherCarbon[1]      = { RunResultsN[5]:DRtgOtherCarbon[1]      }
   "Copy Carbon-W - Total  - WtrHt"    Proj:RunResultsW[5]:DRtgTotalCarbon[1]      = { RunResultsN[5]:DRtgTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - InsLtg"   Proj:RunResultsW[6]:DRtgElecCarbon[1]       = { RunResultsN[6]:DRtgElecCarbon[1]       }
   "Copy Carbon-W - NatGas - InsLtg"   Proj:RunResultsW[6]:DRtgNatGasCarbon[1]     = { RunResultsN[6]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - InsLtg"   Proj:RunResultsW[6]:DRtgOtherCarbon[1]      = { RunResultsN[6]:DRtgOtherCarbon[1]      }
   "Copy Carbon-W - Total  - InsLtg"   Proj:RunResultsW[6]:DRtgTotalCarbon[1]      = { RunResultsN[6]:DRtgTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - AppCkg"   Proj:RunResultsW[7]:DRtgElecCarbon[1]       = { RunResultsN[7]:DRtgElecCarbon[1]       }
   "Copy Carbon-W - NatGas - AppCkg"   Proj:RunResultsW[7]:DRtgNatGasCarbon[1]     = { RunResultsN[7]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - AppCkg"   Proj:RunResultsW[7]:DRtgOtherCarbon[1]      = { RunResultsN[7]:DRtgOtherCarbon[1]      }
   "Copy Carbon-W - Total  - AppCkg"   Proj:RunResultsW[7]:DRtgTotalCarbon[1]      = { RunResultsN[7]:DRtgTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - Plugs"    Proj:RunResultsW[8]:DRtgElecCarbon[1]       = { RunResultsN[8]:DRtgElecCarbon[1]       }
   "Copy Carbon-W - NatGas - Plugs"    Proj:RunResultsW[8]:DRtgNatGasCarbon[1]     = { RunResultsN[8]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - Plugs"    Proj:RunResultsW[8]:DRtgOtherCarbon[1]      = { RunResultsN[8]:DRtgOtherCarbon[1]      }
   "Copy Carbon-W - Total  - Plugs"    Proj:RunResultsW[8]:DRtgTotalCarbon[1]      = { RunResultsN[8]:DRtgTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - Ext"      Proj:RunResultsW[9]:DRtgElecCarbon[1]       = { RunResultsN[9]:DRtgElecCarbon[1]       }
   "Copy Carbon-W - NatGas - Ext"      Proj:RunResultsW[9]:DRtgNatGasCarbon[1]     = { RunResultsN[9]:DRtgNatGasCarbon[1]     }
   "Copy Carbon-W - Other  - Ext"      Proj:RunResultsW[9]:DRtgOtherCarbon[1]      = { RunResultsN[9]:DRtgOtherCarbon[1]      }
   "Copy Carbon-W - Total  - Ext"      Proj:RunResultsW[9]:DRtgTotalCarbon[1]      = { RunResultsN[9]:DRtgTotalCarbon[1]      }
   "Copy Carbon-W - Elec   - PV"       Proj:RunResultsW[13]:DRtgElecCarbon[1]      = { RunResultsN[13]:DRtgElecCarbon[1]      }
   "Copy Carbon-W - NatGas - PV"       Proj:RunResultsW[13]:DRtgNatGasCarbon[1]    = { RunResultsN[13]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-W - Other  - PV"       Proj:RunResultsW[13]:DRtgOtherCarbon[1]     = { RunResultsN[13]:DRtgOtherCarbon[1]     }
   "Copy Carbon-W - Total  - PV"       Proj:RunResultsW[13]:DRtgTotalCarbon[1]     = { RunResultsN[13]:DRtgTotalCarbon[1]     }
   "Copy Carbon-W - Elec   - Battery"  Proj:RunResultsW[14]:DRtgElecCarbon[1]      = { RunResultsN[14]:DRtgElecCarbon[1]      }
   "Copy Carbon-W - NatGas - Battery"  Proj:RunResultsW[14]:DRtgNatGasCarbon[1]    = { RunResultsN[14]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-W - Other  - Battery"  Proj:RunResultsW[14]:DRtgOtherCarbon[1]     = { RunResultsN[14]:DRtgOtherCarbon[1]     }
   "Copy Carbon-W - Total  - Battery"  Proj:RunResultsW[14]:DRtgTotalCarbon[1]     = { RunResultsN[14]:DRtgTotalCarbon[1]     }
   "Copy Carbon-W - Elec   - Comp Ttl" Proj:RunResultsW[11]:DRtgElecCarbon[1]      = { RunResultsN[11]:DRtgElecCarbon[1]      }
   "Copy Carbon-W - NatGas - Comp Ttl" Proj:RunResultsW[11]:DRtgNatGasCarbon[1]    = { RunResultsN[11]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-W - Other  - Comp Ttl" Proj:RunResultsW[11]:DRtgOtherCarbon[1]     = { RunResultsN[11]:DRtgOtherCarbon[1]     }
   "Copy Carbon-W - TOTAL  - Comp Ttl" Proj:RunResultsW[11]:DRtgTotalCarbon[1]     = { RunResultsN[11]:DRtgTotalCarbon[1]     }
   "Copy Carbon-W - Elec   - Total"    Proj:RunResultsW[10]:DRtgElecCarbon[1]      = { RunResultsN[10]:DRtgElecCarbon[1]      }
   "Copy Carbon-W - NatGas - Total"    Proj:RunResultsW[10]:DRtgNatGasCarbon[1]    = { RunResultsN[10]:DRtgNatGasCarbon[1]    }
   "Copy Carbon-W - Other  - Total"    Proj:RunResultsW[10]:DRtgOtherCarbon[1]     = { RunResultsN[10]:DRtgOtherCarbon[1]     }
   "Copy Carbon-W - TOTAL  - Total"    Proj:RunResultsW[10]:DRtgTotalCarbon[1]     = { RunResultsN[10]:DRtgTotalCarbon[1]     }
   "Copy DRtgFinalCarbon[1]-W"         Proj:ResultSummary[5]:DRtgFinalCarbon[1]    = { ResultSummary[2]:DRtgFinalCarbon[1]    }
   "Copy DRtgExportCarbon[1]-W"        Proj:ResultSummary[5]:DRtgExportCarbon[1]   = { ResultSummary[2]:DRtgExportCarbon[1]   }
   "Copy DRtgSelfConsCarbon[1]-W"      Proj:ResultSummary[5]:DRtgSelfConsCarbon[1] = { ResultSummary[2]:DRtgSelfConsCarbon[1] }
   "Copy DRtgNoSolFlxCarbon[1]-W"      Proj:ResultSummary[5]:DRtgNoSolFlxCarbon[1] = { ResultSummary[2]:DRtgNoSolFlxCarbon[1] }
   "Copy DRtgExclExpCarbon[1]-W"       Proj:ResultSummary[5]:DRtgExclExpCarbon[1]  = { ResultSummary[2]:DRtgExclExpCarbon[1]  }

 ; copy N carbon results to WORST ORIENTATION
   "Copy DRtgFinalCarbon[1]-x"         Proj:ResultSummary[1]:DRtgFinalCarbon[1]    = { ResultSummary[2]:DRtgFinalCarbon[1]    }
   "Copy DRtgExportCarbon[1]-x"        Proj:ResultSummary[1]:DRtgExportCarbon[1]   = { ResultSummary[2]:DRtgExportCarbon[1]   }
   "Copy DRtgSelfConsCarbon[1]-x"      Proj:ResultSummary[1]:DRtgSelfConsCarbon[1] = { ResultSummary[2]:DRtgSelfConsCarbon[1] }
   "Copy DRtgNoSolFlxCarbon[1]-x"      Proj:ResultSummary[1]:DRtgNoSolFlxCarbon[1] = { ResultSummary[2]:DRtgNoSolFlxCarbon[1] }
   "Copy DRtgExclExpCarbon[1]-x"       Proj:ResultSummary[1]:DRtgExclExpCarbon[1]  = { ResultSummary[2]:DRtgExclExpCarbon[1]  }
END
;*************************************************************************


;*************************************************************************  - SAC 1/27/18
RULELIST "CARes_CO2DesignRating_SingleOrientation" 1 0 0 0   ; mark data set here as normal rule (not user input) to prevent project file storage
;*************************************************************************
   ; incl. adjustments for DHW StdSolar PV credit - SAC 5/5/20 (FlexibilityCredit)
 	"Set ResultSummary[1]:CO2DesignRtg"			Proj:ResultSummary[1]:CO2DesignRtg		= {
         if (IfValidAnd( RunResults[10]:DRtgTotalCarbon != 0 )==0) then  UNDEFINED
         else   int( ( ValidOr( RunResults[10]:PropTotalCarbon[1], 0 )  * 1000 / RunResults[10]:DRtgTotalCarbon)+0.5 )/10
         endif  }
 	"Set ResultSummary[1]:CO2DesignRtgNoPV"	Proj:ResultSummary[1]:CO2DesignRtgNoPV	= {
         if (IfValidAnd( RunResults[10]:DRtgTotalCarbon != 0 )==0) then  UNDEFINED
         else  int( ((ValidOr( RunResults[10]:PropTotalCarbon[1], 0 ) - ValidOr( RunResults[13]:PropTotalCarbon[1], 0 ) -
                      ValidOr( RunResults[14]:PropTotalCarbon[1], 0 ) + ValidOr( ResultSummary[1]:GHCEnergyEffCO2, 0 ) +
                      ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) *
                     1000 / RunResults[10]:DRtgTotalCarbon)+0.5 )/10
         endif  }
 	"Set ResultSummary[1]:CO2DesignRtgPVOnly"	Proj:ResultSummary[1]:CO2DesignRtgPVOnly	= {
         if (LocalStatus( ResultSummary[1]:CO2DesignRtgNoPV ) < 1 .OR. LocalStatus( ResultSummary[1]:CO2DesignRtg ) < 1) then  UNDEFINED
         else	ResultSummary[1]:CO2DesignRtgNoPV - ResultSummary[1]:CO2DesignRtg
         endif  }
; SAC 6/25/17 - testing
;"testing"  Proj:Action = {  PostMessageToLog( "DRtg TDV = %g / TotPropTDV = %g / PropPVCred[2] = %g / PropPVTDV = %g / PropBattTDV = %g // DR = %g / DRNoPV = %g / RDPVOnly = %g",
;       RunResults[10]:DRtgTotalCarbon, RunResults[10]:PropTotalCarbon[1], RunResults[6]:PropPVCreditTDV[2], RunResults[13]:PropTotalCarbon[1], RunResults[14]:PropTotalCarbon[1], ResultSummary[1]:CO2DesignRtg, ResultSummary[1]:CO2DesignRtgNoPV, ResultSummary[1]:CO2DesignRtgPVOnly )  }

 	"Set ResultSummary[1]:CO2DesignRtgStd"		Proj:ResultSummary[1]:CO2DesignRtgStd		= {
         if (IfValidAnd( RunResults[10]:DRtgTotalCarbon != 0 )==0 .OR.
             AnalysisType < 3) then  UNDEFINED
			else	int( ((	RunResults[1]:StdTotalCarbon    ; SpcHt
      					 +	RunResults[2]:StdTotalCarbon    ; SpcCl
      					 +	RunResults[3]:StdTotalCarbon    ; IAQVent
		      			 +	RunResults[4]:StdTotalCarbon    ; OthrHVAC
      					 +	RunResults[5]:StdTotalCarbon    ; WtrHt
		      			 +	RunResults[6]:StdTotalCarbon    ; InsLtg
      					 +	RunResults[7]:StdTotalCarbon    ; AppCkg
		      			 +	RunResults[8]:StdTotalCarbon    ; Plugs
				      	 +	RunResults[9]:StdTotalCarbon    ; Ext
      					 +	RunResults[13]:StdTotalCarbon   ; PV
		      			 +	RunResults[14]:StdTotalCarbon ) ; Battery
				      			* 1000 / RunResults[10]:DRtgTotalCarbon)+0.5 )/10
			endif  }
 	"Set ResultSummary[1]:CO2DesignRtgStdNoPV"		Proj:ResultSummary[1]:CO2DesignRtgStdNoPV		= {
         if (IfValidAnd( RunResults[10]:DRtgTotalCarbon != 0 )==0 .OR.
             AnalysisType < 3) then  UNDEFINED
			else	int( ((	RunResults[1]:StdTotalCarbon    ; SpcHt
      					 +	RunResults[2]:StdTotalCarbon    ; SpcCl
      					 +	RunResults[3]:StdTotalCarbon    ; IAQVent
		      			 +	RunResults[4]:StdTotalCarbon    ; OthrHVAC
      					 +	RunResults[5]:StdTotalCarbon    ; WtrHt
		      			 +	RunResults[6]:StdTotalCarbon    ; InsLtg
      					 +	RunResults[7]:StdTotalCarbon    ; AppCkg
		      			 +	RunResults[8]:StdTotalCarbon    ; Plugs
				      	 +	RunResults[9]:StdTotalCarbon )  ; Ext
				      			* 1000 / RunResults[10]:DRtgTotalCarbon)+0.5 )/10
			endif  }
;"dbg" Proj:Action = { PostMessageToLog( "   Just set ResultSummary[1]:CO2DesignRtgStd = %g  based on RunResults[10]:DRtgTotalCarbon = %g  and ResultSummary[1]:StdMixedFuelPVTDV = %g",
;                           ValidOr( ResultSummary[1]:CO2DesignRtgStd, -999 ), ValidOr( RunResults[10]:DRtgTotalCarbon, -999 ), ValidOr( ResultSummary[1]:StdMixedFuelPVTDV, -999 ) )  }
   "Set ResultSummary[1]:CO2DesignRtgStdPVOnly"    Proj:ResultSummary[1]:CO2DesignRtgStdPVOnly  = {
         if (LocalStatus( ResultSummary[1]:CO2DesignRtgStdNoPV ) < 1 .OR. LocalStatus( ResultSummary[1]:CO2DesignRtgStd ) < 1) then  UNDEFINED
         else	ResultSummary[1]:CO2DesignRtgStdNoPV - ResultSummary[1]:CO2DesignRtgStd
         endif  }

  ; DesignRating Electric CO2 Emissions
	"Set ResultSummary[1]:Title1[20]"			Proj:ResultSummary[1]:Title1[20]		= {	"Ref Design"  }
	"Set ResultSummary[1]:Title2[20]"			Proj:ResultSummary[1]:Title2[20]		= {	"Electric CO2"  }
	"Set ResultSummary[1]:Title3[20]"			Proj:ResultSummary[1]:Title3[20]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[1]:Enduse1[20]"			Proj:ResultSummary[1]:Enduse1[20]	= {	if (IfValidAnd( RunResults[1]:DRtgElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[1]:DRtgElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse2[20]"			Proj:ResultSummary[1]:Enduse2[20]	= {	if (IfValidAnd( RunResults[2]:DRtgElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[2]:DRtgElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse3[20]"			Proj:ResultSummary[1]:Enduse3[20]	= {	if (IfValidAnd( RunResults[3]:DRtgElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[3]:DRtgElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse4[20]"			Proj:ResultSummary[1]:Enduse4[20]	= {	if (IfValidAnd( RunResults[4]:DRtgElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[4]:DRtgElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse5[20]"			Proj:ResultSummary[1]:Enduse5[20]	= {	if (IfValidAnd( RunResults[5]:DRtgElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[5]:DRtgElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse14[20]"			Proj:ResultSummary[1]:Enduse14[20]	= {	if (IfValidAnd( RunResults[14]:DRtgElecCarbon[1] != 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[14]:DRtgElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse6[20]"			Proj:ResultSummary[1]:Enduse6[20]	= {	if (IfValidAnd( RunResults[6]:DRtgElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[6]:DRtgElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse7[20]"			Proj:ResultSummary[1]:Enduse7[20]	= {	if (IfValidAnd( RunResults[7]:DRtgElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[7]:DRtgElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse8[20]"			Proj:ResultSummary[1]:Enduse8[20]	= {	if (IfValidAnd( RunResults[8]:DRtgElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[8]:DRtgElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse9[20]"			Proj:ResultSummary[1]:Enduse9[20]	= {	if (IfValidAnd( RunResults[9]:DRtgElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[9]:DRtgElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse10[20]"			Proj:ResultSummary[1]:Enduse10[20]	= {	if (IfValidAnd( RunResults[10]:DRtgElecCarbon[1] > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[10]:DRtgElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse11[20]"			Proj:ResultSummary[1]:Enduse11[20]	= {	if (IfValidAnd( RunResults[11]:DRtgElecCarbon[1] > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[11]:DRtgElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
;	"Set ResultSummary[1]:Enduse12[20]"			Proj:ResultSummary[1]:Enduse12[20]	= {	if (IfValidAnd( RunResults[12]:DRtgElecCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( (int( (RunResults[12]:DRtgElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse13[20]"			Proj:ResultSummary[1]:Enduse13[20]	= {	if (IfValidAnd( RunResults[13]:DRtgElecCarbon[1] != 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[13]:DRtgElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }

  ; DesignRating Fuel CO2 Emissions
	"Set ResultSummary[1]:Title1[21]"			Proj:ResultSummary[1]:Title1[21]		= {	"Ref Design"  }
	"Set ResultSummary[1]:Title2[21]"			Proj:ResultSummary[1]:Title2[21]		= {	"Fuel CO2"  }
	"Set ResultSummary[1]:Title3[21]"			Proj:ResultSummary[1]:Title3[21]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[1]:Enduse1[21]"			Proj:ResultSummary[1]:Enduse1[21]	= {	if (IfValidAnd(   RunResults[1]:DRtgNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[1]:DRtgOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[1]:DRtgNatGasCarbon[1]  + RunResults[1]:DRtgOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse2[21]"			Proj:ResultSummary[1]:Enduse2[21]	= {	if (IfValidAnd(   RunResults[2]:DRtgNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[2]:DRtgOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[2]:DRtgNatGasCarbon[1]  + RunResults[2]:DRtgOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse3[21]"			Proj:ResultSummary[1]:Enduse3[21]	= {	if (IfValidAnd(   RunResults[3]:DRtgNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[3]:DRtgOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[3]:DRtgNatGasCarbon[1]  + RunResults[3]:DRtgOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse4[21]"			Proj:ResultSummary[1]:Enduse4[21]	= {	if (IfValidAnd(   RunResults[4]:DRtgNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[4]:DRtgOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[4]:DRtgNatGasCarbon[1]  + RunResults[4]:DRtgOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse5[21]"			Proj:ResultSummary[1]:Enduse5[21]	= {	if (IfValidAnd(   RunResults[5]:DRtgNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[5]:DRtgOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[5]:DRtgNatGasCarbon[1]  + RunResults[5]:DRtgOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse14[21]"			Proj:ResultSummary[1]:Enduse14[21]	= {	if (IfValidAnd(   RunResults[14]:DRtgNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResults[14]:DRtgOtherCarbon[1] > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[14]:DRtgNatGasCarbon[1] + RunResults[14]:DRtgOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse6[21]"			Proj:ResultSummary[1]:Enduse6[21]	= {	if (IfValidAnd(   RunResults[6]:DRtgNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[6]:DRtgOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[6]:DRtgNatGasCarbon[1]  + RunResults[6]:DRtgOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse7[21]"			Proj:ResultSummary[1]:Enduse7[21]	= {	if (IfValidAnd(   RunResults[7]:DRtgNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[7]:DRtgOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[7]:DRtgNatGasCarbon[1]  + RunResults[7]:DRtgOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse8[21]"			Proj:ResultSummary[1]:Enduse8[21]	= {	if (IfValidAnd(   RunResults[8]:DRtgNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[8]:DRtgOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[8]:DRtgNatGasCarbon[1]  + RunResults[8]:DRtgOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse9[21]"			Proj:ResultSummary[1]:Enduse9[21]	= {	if (IfValidAnd(   RunResults[9]:DRtgNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[9]:DRtgOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[9]:DRtgNatGasCarbon[1]  + RunResults[9]:DRtgOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse10[21]"			Proj:ResultSummary[1]:Enduse10[21]	= {	if (IfValidAnd(   RunResults[10]:DRtgNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResults[10]:DRtgOtherCarbon[1] > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[10]:DRtgNatGasCarbon[1] + RunResults[10]:DRtgOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse11[21]"			Proj:ResultSummary[1]:Enduse11[21]	= {	if (IfValidAnd(   RunResults[11]:DRtgNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResults[11]:DRtgOtherCarbon[1] > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[11]:DRtgNatGasCarbon[1] + RunResults[11]:DRtgOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
;	"Set ResultSummary[1]:Enduse12[21]"			Proj:ResultSummary[1]:Enduse12[21]	= {	if (IfValidAnd(   RunResults[12]:DRtgNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResults[12]:DRtgOtherCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( ((RunResults[12]:DRtgNatGasCarbon[1] + RunResults[12]:DRtgOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse13[21]"			Proj:ResultSummary[1]:Enduse13[21]	= {	UNDEFINED  }		; PV

  ; DesignRating Total CO2 Emissions
	"Set ResultSummary[1]:Title1[22]"			Proj:ResultSummary[1]:Title1[22]		= {	"Ref Design"  }
	"Set ResultSummary[1]:Title2[22]"			Proj:ResultSummary[1]:Title2[22]		= {	"Total CO2"  }
	"Set ResultSummary[1]:Title3[22]"			Proj:ResultSummary[1]:Title3[22]		= {	Format( "Emis. (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[1]:Enduse1[22]"			Proj:ResultSummary[1]:Enduse1[22]	= {	if (LocalCompAssigned( RunResults[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[1]:DRtgTotalCarbon[1] , 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse2[22]"			Proj:ResultSummary[1]:Enduse2[22]	= {	if (LocalCompAssigned( RunResults[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[2]:DRtgTotalCarbon[1] , 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse3[22]"			Proj:ResultSummary[1]:Enduse3[22]	= {	if (LocalCompAssigned( RunResults[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[3]:DRtgTotalCarbon[1] , 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse4[22]"			Proj:ResultSummary[1]:Enduse4[22]	= {	if (LocalCompAssigned( RunResults[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[4]:DRtgTotalCarbon[1] , 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse5[22]"			Proj:ResultSummary[1]:Enduse5[22]	= {	if (LocalCompAssigned( RunResults[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[5]:DRtgTotalCarbon[1] , 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse14[22]"			Proj:ResultSummary[1]:Enduse14[22]	= {	if (LocalCompAssigned( RunResults[14] ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[14]:DRtgTotalCarbon[1], 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse6[22]"			Proj:ResultSummary[1]:Enduse6[22]	= {	if (LocalCompAssigned( RunResults[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[6]:DRtgTotalCarbon[1] , 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse7[22]"			Proj:ResultSummary[1]:Enduse7[22]	= {	if (LocalCompAssigned( RunResults[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[7]:DRtgTotalCarbon[1] , 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse8[22]"			Proj:ResultSummary[1]:Enduse8[22]	= {	if (LocalCompAssigned( RunResults[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[8]:DRtgTotalCarbon[1] , 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse9[22]"			Proj:ResultSummary[1]:Enduse9[22]	= {	if (LocalCompAssigned( RunResults[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[9]:DRtgTotalCarbon[1] , 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[1]:Enduse10[22]"			Proj:ResultSummary[1]:Enduse10[22]	= {	if (LocalCompAssigned( RunResults[10] ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[10]:DRtgTotalCarbon[1], 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[1]:Enduse11[22]"			Proj:ResultSummary[1]:Enduse11[22]	= {	if (LocalCompAssigned( RunResults[11] ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[11]:DRtgTotalCarbon[1], 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[1]:Enduse12[22]"			Proj:ResultSummary[1]:Enduse12[22]	= {	if (LocalCompAssigned( RunResults[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[12]:DRtgTotalCarbon[1], 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[1]:Enduse13[22]"			Proj:ResultSummary[1]:Enduse13[22]	= {	if (LocalCompAssigned( RunResults[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (ValidOr( RunResults[13]:DRtgTotalCarbon[1], 0 ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse99[22]"			Proj:ResultSummary[1]:Enduse99[22]	= {	"0"  }		; GHC

  ; DesignRating Margin CO2 Emissions
   ; incl. adjustments for DHW StdSolar PV credit - SAC 5/5/20 (FlexibilityCredit)
	"Set ResultSummary[1]:Title1[26]"			Proj:ResultSummary[1]:Title1[26]		= {	"Design Rating"  }
	"Set ResultSummary[1]:Title2[26]"			Proj:ResultSummary[1]:Title2[26]		= {	"CO2 Emissions"  }
	"Set ResultSummary[1]:Title3[26]"			Proj:ResultSummary[1]:Title3[26]		= {	Format( "Margin (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[1]:Enduse1[26]"			Proj:ResultSummary[1]:Enduse1[26]	= {	if (LocalCompAssigned( RunResults[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[1]:DRtgTotalCarbon[1]  - RunResults[1]:PropTotalCarbon[1]  ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse2[26]"			Proj:ResultSummary[1]:Enduse2[26]	= {	if (LocalCompAssigned( RunResults[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[2]:DRtgTotalCarbon[1]  - RunResults[2]:PropTotalCarbon[1]  ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse3[26]"			Proj:ResultSummary[1]:Enduse3[26]	= {	if (LocalCompAssigned( RunResults[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[3]:DRtgTotalCarbon[1]  - RunResults[3]:PropTotalCarbon[1]  ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse4[26]"			Proj:ResultSummary[1]:Enduse4[26]	= {	if (LocalCompAssigned( RunResults[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[4]:DRtgTotalCarbon[1]  - RunResults[4]:PropTotalCarbon[1]  ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse5[26]"			Proj:ResultSummary[1]:Enduse5[26]	= {	if (LocalCompAssigned( RunResults[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[5]:DRtgTotalCarbon[1]  - RunResults[5]:PropTotalCarbon[1]  ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse6[26]"			Proj:ResultSummary[1]:Enduse6[26]	= {	if (LocalCompAssigned( RunResults[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[6]:DRtgTotalCarbon[1]  - RunResults[6]:PropTotalCarbon[1]  ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse7[26]"			Proj:ResultSummary[1]:Enduse7[26]	= {	if (LocalCompAssigned( RunResults[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[7]:DRtgTotalCarbon[1]  - RunResults[7]:PropTotalCarbon[1]  ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse8[26]"			Proj:ResultSummary[1]:Enduse8[26]	= {	if (LocalCompAssigned( RunResults[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[8]:DRtgTotalCarbon[1]  - RunResults[8]:PropTotalCarbon[1]  ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse9[26]"			Proj:ResultSummary[1]:Enduse9[26]	= {	if (LocalCompAssigned( RunResults[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[9]:DRtgTotalCarbon[1]  - RunResults[9]:PropTotalCarbon[1]  ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[1]:Enduse10[26]"			Proj:ResultSummary[1]:Enduse10[26]	= {	if (LocalCompAssigned( RunResults[10] ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[10]:DRtgTotalCarbon[1] - RunResults[10]:PropTotalCarbon[1] ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[1]:Enduse11[26]"			Proj:ResultSummary[1]:Enduse11[26]	= {	if (LocalCompAssigned( RunResults[11] ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[11]:DRtgTotalCarbon[1] - RunResults[11]:PropTotalCarbon[1] ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[1]:Enduse12[26]"			Proj:ResultSummary[1]:Enduse12[26]	= {	if (LocalCompAssigned( RunResults[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (( RunResults[12]:DRtgTotalCarbon[1] - RunResults[12]:PropTotalCarbon[1] ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[1]:Enduse13[26]"			Proj:ResultSummary[1]:Enduse13[26]	=
      {  if (LocalCompAssigned( RunResults[13] ) == 0) then  UNDEFINED
         else  FltToStr( int( (( RunResults[13]:DRtgTotalCarbon[1] - RunResults[13]:PropTotalCarbon[1] + ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 ) ) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse14[26]"			Proj:ResultSummary[1]:Enduse14[26]	= {	if (IfValidAnd( RunResults[14]:PropTotalCarbon[1] != 0 )==0) then  "0"  
                                                                                       else if (IfValidAnd( ResultSummary[1]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( (-RunResults[14]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[1]:GHCEnergyEffCO2 >= (-1 * RunResults[14]:PropTotalCarbon[1])) then  "0"
	                                                                                    else  FltToStr( (int( ((ResultSummary[1]:GHCEnergyEffCO2 - RunResults[14]:PropTotalCarbon[1]) * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[1]:Enduse99[26]"			Proj:ResultSummary[1]:Enduse99[26]	=
      {  if (IfValidAnd( ResultSummary[1]:GHCEnergyEffCO2   != 0 )==0 .AND.
             IfValidAnd( ResultSummary[1]:DHWSlrPVCreditCO2 != 0 )==0) then  "0"  
         else  FltToStr( (int( ((ValidOr( ResultSummary[1]:GHCEnergyEffCO2, 0 ) + ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * -CO2TotalUnitMult) + 0.5 )), 0 )  endif  }
END
;*************************************************************************

;*************************************************************************  - SAC 2/4/19 - split out Prop/Std details (below) from CO2 design ratings (above)
RULELIST "CARes_CO2Details_SingleOrientation" 1 0 1 0
;*************************************************************************

   "Set ResultSummary[1]:CO2FuelUnitLabel"   Proj:ResultSummary[1]:CO2FuelUnitLabel   = {  Proj:CO2FuelUnitLabel   }
   "Set ResultSummary[1]:CO2TotalUnitLabel"  Proj:ResultSummary[1]:CO2TotalUnitLabel  = {  Proj:CO2TotalUnitLabel  }

  ; Proposed Electric CO2 Emissions
   ; incl. adjustments for DHW StdSolar PV credit - SAC 5/5/20 (FlexibilityCredit)
	"Set ResultSummary[1]:Title1[23]"			Proj:ResultSummary[1]:Title1[23]		= {	"Prop Design"  }
	"Set ResultSummary[1]:Title2[23]"			Proj:ResultSummary[1]:Title2[23]		= {	"Electric CO2"  }
	"Set ResultSummary[1]:Title3[23]"			Proj:ResultSummary[1]:Title3[23]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[1]:Enduse1[23]"			Proj:ResultSummary[1]:Enduse1[23]	= {	if (IfValidAnd( RunResults[1]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[1]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse2[23]"			Proj:ResultSummary[1]:Enduse2[23]	= {	if (IfValidAnd( RunResults[2]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[2]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse3[23]"			Proj:ResultSummary[1]:Enduse3[23]	= {	if (IfValidAnd( RunResults[3]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[3]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse4[23]"			Proj:ResultSummary[1]:Enduse4[23]	= {	if (IfValidAnd( RunResults[4]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[4]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse5[23]"			Proj:ResultSummary[1]:Enduse5[23]	= {	if (IfValidAnd( RunResults[5]:PropElecCarbon[1]  > 0 )==0) then 
																														if (Proj:ModelingDHW < 0.5) then  "- none -"  else  UNDEFINED  endif
																													else  FltToStr( (int( (RunResults[5]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse6[23]"			Proj:ResultSummary[1]:Enduse6[23]	= {	if (IfValidAnd( RunResults[6]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[6]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse7[23]"			Proj:ResultSummary[1]:Enduse7[23]	= {	if (IfValidAnd( RunResults[7]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[7]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse8[23]"			Proj:ResultSummary[1]:Enduse8[23]	= {	if (IfValidAnd( RunResults[8]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[8]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse9[23]"			Proj:ResultSummary[1]:Enduse9[23]	= {	if (IfValidAnd( RunResults[9]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[9]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
;	"Set ResultSummary[1]:Enduse12[23]"			Proj:ResultSummary[1]:Enduse12[23]	= {	if (IfValidAnd( RunResults[12]:PropElecCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( (int( (RunResults[12]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse13[23]"			Proj:ResultSummary[1]:Enduse13[23]	=
      {  if (IfValidAnd( RunResults[13]:PropElecCarbon[1] < 0 )==0) then  UNDEFINED  
         else  FltToStr( (int( ((RunResults[13]:PropElecCarbon[1] - ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse14[23]"			Proj:ResultSummary[1]:Enduse14[23]	= {	if (IfValidAnd( RunResults[14]:PropElecCarbon[1] != 0 )==0) then  UNDEFINED  
                                                                                       else if (IfValidAnd( ResultSummary[1]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( ( RunResults[14]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[1]:GHCEnergyEffCO2 >= (-1 * RunResults[14]:PropElecCarbon[1])) then  UNDEFINED
	                                                                                    else  FltToStr( (int( ((RunResults[14]:PropElecCarbon[1] - ResultSummary[1]:GHCEnergyEffCO2) * Proj:CO2FuelUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[1]:Enduse99[23]"			Proj:ResultSummary[1]:Enduse99[23]	=
	   {  if (IfValidAnd( ResultSummary[1]:GHCEnergyEffCO2   != 0 )==0 .AND.
	          IfValidAnd( ResultSummary[1]:DHWSlrPVCreditCO2 != 0 )==0) then  UNDEFINED  
         else  FltToStr( (int( ((ValidOr( ResultSummary[1]:GHCEnergyEffCO2, 0 ) + ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/3/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[1]:Enduse98[23]"			Proj:ResultSummary[1]:Enduse98[23]	= {   if (IfValidAnd( ResultSummary[1]:PFlxElecCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( (int( (ResultSummary[1]:PFlxElecCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[1]:Enduse11[23]"			Proj:ResultSummary[1]:Enduse11[23]	=
      {  if (IfValidAnd( RunResults[11]:PropElecCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResults[1]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[2]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[3]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResults[4]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[5]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( ResultSummary[1]:GHCEnergyEffCO2, 0 ) + ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse10[23]"			Proj:ResultSummary[1]:Enduse10[23]	=
      {  if (IfValidAnd( RunResults[10]:PropElecCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResults[1]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[2]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[3]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResults[4]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[5]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( ResultSummary[1]:GHCEnergyEffCO2, 0 ) + ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( RunResults[13]:PropElecCarbon[1], 0 ) - ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( RunResults[14]:PropElecCarbon[1], 0 ) - ValidOr( ResultSummary[1]:GHCEnergyEffCO2  , 0 )) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[1]:PFlxElecCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( (RunResults[6]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[7]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[8]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[9]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Proposed FUEL CO2 Emissions
	"Set ResultSummary[1]:Title1[24]"			Proj:ResultSummary[1]:Title1[24]		= {	"Prop Design"  }
	"Set ResultSummary[1]:Title2[24]"			Proj:ResultSummary[1]:Title2[24]		= {	"Fuel CO2"  }
	"Set ResultSummary[1]:Title3[24]"			Proj:ResultSummary[1]:Title3[24]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[1]:Enduse1[24]"			Proj:ResultSummary[1]:Enduse1[24]	= {	if (IfValidAnd( RunResults[1]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[1]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[1]:PropNatGasCarbon[1]  + RunResults[1]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse2[24]"			Proj:ResultSummary[1]:Enduse2[24]	= {	if (IfValidAnd( RunResults[2]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[2]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[2]:PropNatGasCarbon[1]  + RunResults[2]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse3[24]"			Proj:ResultSummary[1]:Enduse3[24]	= {	if (IfValidAnd( RunResults[3]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[3]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[3]:PropNatGasCarbon[1]  + RunResults[3]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse4[24]"			Proj:ResultSummary[1]:Enduse4[24]	= {	if (IfValidAnd( RunResults[4]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[4]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[4]:PropNatGasCarbon[1]  + RunResults[4]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse5[24]"			Proj:ResultSummary[1]:Enduse5[24]	= {	if (IfValidAnd( RunResults[5]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[5]:PropOtherCarbon[1]  > 0 )==0) then
																														if (Proj:ModelingDHW < 0.5) then  "- none -"  else  UNDEFINED  endif
																													else  FltToStr( ((RunResults[5]:PropNatGasCarbon[1]  + RunResults[5]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse6[24]"			Proj:ResultSummary[1]:Enduse6[24]	= {	if (IfValidAnd( RunResults[6]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[6]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[6]:PropNatGasCarbon[1]  + RunResults[6]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse7[24]"			Proj:ResultSummary[1]:Enduse7[24]	= {	if (IfValidAnd( RunResults[7]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[7]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[7]:PropNatGasCarbon[1]  + RunResults[7]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse8[24]"			Proj:ResultSummary[1]:Enduse8[24]	= {	if (IfValidAnd( RunResults[8]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[8]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[8]:PropNatGasCarbon[1]  + RunResults[8]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse9[24]"			Proj:ResultSummary[1]:Enduse9[24]	= {	if (IfValidAnd( RunResults[9]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[9]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[9]:PropNatGasCarbon[1]  + RunResults[9]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
;	"Set ResultSummary[1]:Enduse12[24]"			Proj:ResultSummary[1]:Enduse12[24]	= {	if (IfValidAnd( RunResults[12]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResults[12]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( ((RunResults[12]:PropNatGasCarbon[1] + RunResults[12]:PropOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse13[24]"			Proj:ResultSummary[1]:Enduse13[24]	= {	UNDEFINED  }		; PV
	"Set ResultSummary[1]:Enduse14[24]"			Proj:ResultSummary[1]:Enduse14[24]	= {	if (IfValidAnd( RunResults[14]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResults[14]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[14]:PropNatGasCarbon[1] + RunResults[14]:PropOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
      ; SAC 2/4/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[1]:Enduse98[24]"			Proj:ResultSummary[1]:Enduse98[24]	= {   if (IfValidAnd( ResultSummary[1]:PFlxFuelCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( int( (ResultSummary[1]:PFlxFuelCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 ), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[1]:Enduse11[24]"			Proj:ResultSummary[1]:Enduse11[24]	=
      {  if (IfValidAnd( RunResults[11]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResults[11]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( ((RunResults[1]:PropNatGasCarbon[1]  + RunResults[1]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[2]:PropNatGasCarbon[1]  + RunResults[2]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[3]:PropNatGasCarbon[1]  + RunResults[3]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResults[4]:PropNatGasCarbon[1]  + RunResults[4]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[5]:PropNatGasCarbon[1]  + RunResults[5]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse10[24]"			Proj:ResultSummary[1]:Enduse10[24]	=
      {  if (IfValidAnd( RunResults[10]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResults[10]:PropOtherCarbon[1] > 0 )==0) then  "0"  
         else  FltToStr( int( ((RunResults[1]:PropNatGasCarbon[1]  + RunResults[1]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[2]:PropNatGasCarbon[1]  + RunResults[2]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[3]:PropNatGasCarbon[1]  + RunResults[3]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResults[4]:PropNatGasCarbon[1]  + RunResults[4]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[5]:PropNatGasCarbon[1]  + RunResults[5]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[1]:PFlxFuelCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( ((RunResults[6]:PropNatGasCarbon[1]  + RunResults[6]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[7]:PropNatGasCarbon[1]  + RunResults[7]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[8]:PropNatGasCarbon[1]  + RunResults[8]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[9]:PropNatGasCarbon[1]  + RunResults[9]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Proposed Total CO2 Emissions
   ; incl. adjustments for DHW StdSolar PV credit - SAC 5/5/20 (FlexibilityCredit)
	"Set ResultSummary[1]:Title1[25]"			Proj:ResultSummary[1]:Title1[25]		= {	"Prop Design"  }
	"Set ResultSummary[1]:Title2[25]"			Proj:ResultSummary[1]:Title2[25]		= {	"Total CO2"  }
	"Set ResultSummary[1]:Title3[25]"			Proj:ResultSummary[1]:Title3[25]		= {	Format( "Emis. (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[1]:Enduse1[25]"			Proj:ResultSummary[1]:Enduse1[25]	= {	if (LocalCompAssigned( RunResults[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[1]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse2[25]"			Proj:ResultSummary[1]:Enduse2[25]	= {	if (LocalCompAssigned( RunResults[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[2]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse3[25]"			Proj:ResultSummary[1]:Enduse3[25]	= {	if (LocalCompAssigned( RunResults[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[3]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse4[25]"			Proj:ResultSummary[1]:Enduse4[25]	= {	if (LocalCompAssigned( RunResults[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[4]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse5[25]"			Proj:ResultSummary[1]:Enduse5[25]	= {	if (LocalCompAssigned( RunResults[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[5]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse6[25]"			Proj:ResultSummary[1]:Enduse6[25]	= {	if (LocalCompAssigned( RunResults[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[6]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse7[25]"			Proj:ResultSummary[1]:Enduse7[25]	= {	if (LocalCompAssigned( RunResults[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[7]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse8[25]"			Proj:ResultSummary[1]:Enduse8[25]	= {	if (LocalCompAssigned( RunResults[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[8]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse9[25]"			Proj:ResultSummary[1]:Enduse9[25]	= {	if (LocalCompAssigned( RunResults[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[9]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[1]:Enduse12[25]"			Proj:ResultSummary[1]:Enduse12[25]	= {	if (LocalCompAssigned( RunResults[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[12]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[1]:Enduse13[25]"			Proj:ResultSummary[1]:Enduse13[25]	=
      {  if (LocalCompAssigned( RunResults[13] ) == 0) then  UNDEFINED 
         else  FltToStr( int( ((RunResults[13]:PropTotalCarbon[1] - ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse14[25]"			Proj:ResultSummary[1]:Enduse14[25]	= {	if (IfValidAnd( RunResults[14]:PropTotalCarbon[1] != 0 )==0) then  "0"  
                                                                                       else if (IfValidAnd( ResultSummary[1]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( ( RunResults[14]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[1]:GHCEnergyEffCO2 >= (-1 * RunResults[14]:PropTotalCarbon[1])) then  "0"
	                                                                                    else  FltToStr( (int( ((RunResults[14]:PropTotalCarbon[1] - ResultSummary[1]:GHCEnergyEffCO2) * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[1]:Enduse99[25]"			Proj:ResultSummary[1]:Enduse99[25]	=
	   {  if (IfValidAnd( ResultSummary[1]:GHCEnergyEffCO2   != 0 )==0 .AND.
	          IfValidAnd( ResultSummary[1]:DHWSlrPVCreditCO2 != 0 )==0) then  "0"  
         else  FltToStr( (int( ((ValidOr( ResultSummary[1]:GHCEnergyEffCO2, 0 ) + ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * CO2TotalUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[1]:Enduse98[25]"			Proj:ResultSummary[1]:Enduse98[25]	= {   if (IfValidAnd( ResultSummary[1]:PFlxFinalCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( int( (ResultSummary[1]:PFlxFinalCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 ), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[1]:Enduse11[25]"			Proj:ResultSummary[1]:Enduse11[25]	=
      {  if (IfValidAnd( RunResults[11]:PropTotalCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResults[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResults[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( ResultSummary[1]:GHCEnergyEffCO2, 0 ) + ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse10[25]"			Proj:ResultSummary[1]:Enduse10[25]	=
      {  if (IfValidAnd( RunResults[10]:PropTotalCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResults[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResults[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( ResultSummary[1]:GHCEnergyEffCO2,  0 ) + ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( RunResults[13]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( RunResults[14]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[1]:GHCEnergyEffCO2  , 0 )) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[1]:PFlxFinalCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( (RunResults[6]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[7]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[8]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[9]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Standard Electric CO2 Emissions
	"Set ResultSummary[1]:Title1[27]"			Proj:ResultSummary[1]:Title1[27]		= {	"Std Design"  }
	"Set ResultSummary[1]:Title2[27]"			Proj:ResultSummary[1]:Title2[27]		= {	"Electric CO2"  }
	"Set ResultSummary[1]:Title3[27]"			Proj:ResultSummary[1]:Title3[27]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[1]:Enduse1[27]"			Proj:ResultSummary[1]:Enduse1[27]	= {	if (IfValidAnd( RunResults[1]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[1]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse2[27]"			Proj:ResultSummary[1]:Enduse2[27]	= {	if (IfValidAnd( RunResults[2]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[2]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse3[27]"			Proj:ResultSummary[1]:Enduse3[27]	= {	if (IfValidAnd( RunResults[3]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[3]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse4[27]"			Proj:ResultSummary[1]:Enduse4[27]	= {	if (IfValidAnd( RunResults[4]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[4]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse5[27]"			Proj:ResultSummary[1]:Enduse5[27]	= {	if (IfValidAnd( RunResults[5]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED
																													else  FltToStr( (int( (RunResults[5]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse6[27]"			Proj:ResultSummary[1]:Enduse6[27]	= {	if (IfValidAnd( RunResults[6]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[6]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse7[27]"			Proj:ResultSummary[1]:Enduse7[27]	= {	if (IfValidAnd( RunResults[7]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[7]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse8[27]"			Proj:ResultSummary[1]:Enduse8[27]	= {	if (IfValidAnd( RunResults[8]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[8]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse9[27]"			Proj:ResultSummary[1]:Enduse9[27]	= {	if (IfValidAnd( RunResults[9]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[9]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
;	"Set ResultSummary[1]:Enduse12[27]"			Proj:ResultSummary[1]:Enduse12[27]	= {	if (IfValidAnd( RunResults[12]:StdElecCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( (int( (RunResults[12]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse13[27]"			Proj:ResultSummary[1]:Enduse13[27]	= {	if (IfValidAnd( RunResults[13]:StdElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[13]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[1]:Enduse14[27]"			Proj:ResultSummary[1]:Enduse14[27]	= {	if (IfValidAnd( RunResults[14]:StdElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResults[14]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[1]:Enduse11[27]"			Proj:ResultSummary[1]:Enduse11[27]	=
      {  if (IfValidAnd( RunResults[11]:StdElecCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResults[1]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[2]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[3]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResults[4]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[5]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse10[27]"			Proj:ResultSummary[1]:Enduse10[27]	=
      {  if (IfValidAnd( RunResults[10]:StdElecCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResults[1]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[2]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[3]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResults[4]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[5]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResults[13]:StdElecCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResults[14]:StdElecCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[6]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[7]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[8]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[9]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Standard FUEL CO2 Emissions
	"Set ResultSummary[1]:Title1[28]"			Proj:ResultSummary[1]:Title1[28]		= {	"Std Design"  }
	"Set ResultSummary[1]:Title2[28]"			Proj:ResultSummary[1]:Title2[28]		= {	"Fuel CO2"  }
	"Set ResultSummary[1]:Title3[28]"			Proj:ResultSummary[1]:Title3[28]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[1]:Enduse1[28]"			Proj:ResultSummary[1]:Enduse1[28]	= {	if (IfValidAnd( RunResults[1]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[1]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[1]:StdNatGasCarbon[1]  + RunResults[1]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse2[28]"			Proj:ResultSummary[1]:Enduse2[28]	= {	if (IfValidAnd( RunResults[2]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[2]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[2]:StdNatGasCarbon[1]  + RunResults[2]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse3[28]"			Proj:ResultSummary[1]:Enduse3[28]	= {	if (IfValidAnd( RunResults[3]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[3]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[3]:StdNatGasCarbon[1]  + RunResults[3]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse4[28]"			Proj:ResultSummary[1]:Enduse4[28]	= {	if (IfValidAnd( RunResults[4]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[4]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[4]:StdNatGasCarbon[1]  + RunResults[4]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse5[28]"			Proj:ResultSummary[1]:Enduse5[28]	= {	if (IfValidAnd( RunResults[5]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[5]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED
																													else  FltToStr( ((RunResults[5]:StdNatGasCarbon[1]  + RunResults[5]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse6[28]"			Proj:ResultSummary[1]:Enduse6[28]	= {	if (IfValidAnd( RunResults[6]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[6]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[6]:StdNatGasCarbon[1]  + RunResults[6]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse7[28]"			Proj:ResultSummary[1]:Enduse7[28]	= {	if (IfValidAnd( RunResults[7]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[7]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[7]:StdNatGasCarbon[1]  + RunResults[7]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse8[28]"			Proj:ResultSummary[1]:Enduse8[28]	= {	if (IfValidAnd( RunResults[8]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[8]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[8]:StdNatGasCarbon[1]  + RunResults[8]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse9[28]"			Proj:ResultSummary[1]:Enduse9[28]	= {	if (IfValidAnd( RunResults[9]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResults[9]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResults[9]:StdNatGasCarbon[1]  + RunResults[9]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
;	"Set ResultSummary[1]:Enduse12[28]"			Proj:ResultSummary[1]:Enduse12[28]	= {	if (IfValidAnd( RunResults[12]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResults[12]:StdOtherCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( ((RunResults[12]:StdNatGasCarbon[1] + RunResults[12]:StdOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[1]:Enduse13[28]"			Proj:ResultSummary[1]:Enduse13[28]	= {	UNDEFINED  }		; PV
	"Set ResultSummary[1]:Enduse14[28]"			Proj:ResultSummary[1]:Enduse14[28]	= {	UNDEFINED  }      ; Batt
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[1]:Enduse11[28]"			Proj:ResultSummary[1]:Enduse11[28]	=
      {  if (IfValidAnd( RunResults[11]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResults[11]:StdOtherCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( ((RunResults[1]:StdNatGasCarbon[1] + RunResults[1]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[2]:StdNatGasCarbon[1] + RunResults[2]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[3]:StdNatGasCarbon[1] + RunResults[3]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResults[4]:StdNatGasCarbon[1] + RunResults[4]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[5]:StdNatGasCarbon[1] + RunResults[5]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse10[28]"			Proj:ResultSummary[1]:Enduse10[28]	=
      {  if (IfValidAnd( RunResults[10]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResults[10]:StdOtherCarbon[1] > 0 )==0) then  "0"  
         else  FltToStr( int( ((RunResults[1]:StdNatGasCarbon[1] + RunResults[1]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[2]:StdNatGasCarbon[1] + RunResults[2]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[3]:StdNatGasCarbon[1] + RunResults[3]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResults[4]:StdNatGasCarbon[1] + RunResults[4]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[5]:StdNatGasCarbon[1] + RunResults[5]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[6]:StdNatGasCarbon[1] + RunResults[6]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[7]:StdNatGasCarbon[1] + RunResults[7]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[8]:StdNatGasCarbon[1] + RunResults[8]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResults[9]:StdNatGasCarbon[1] + RunResults[9]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Standard Total CO2 Emissions
	"Set ResultSummary[1]:Title1[29]"			Proj:ResultSummary[1]:Title1[29]		= {	"Std Design"  }
	"Set ResultSummary[1]:Title2[29]"			Proj:ResultSummary[1]:Title2[29]		= {	"Total CO2"  }
	"Set ResultSummary[1]:Title3[29]"			Proj:ResultSummary[1]:Title3[29]		= {	Format( "Emis. (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[1]:Enduse1[29]"			Proj:ResultSummary[1]:Enduse1[29]	= {	if (LocalCompAssigned( RunResults[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[1]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse2[29]"			Proj:ResultSummary[1]:Enduse2[29]	= {	if (LocalCompAssigned( RunResults[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[2]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse3[29]"			Proj:ResultSummary[1]:Enduse3[29]	= {	if (LocalCompAssigned( RunResults[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[3]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse4[29]"			Proj:ResultSummary[1]:Enduse4[29]	= {	if (LocalCompAssigned( RunResults[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[4]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse5[29]"			Proj:ResultSummary[1]:Enduse5[29]	= {	if (LocalCompAssigned( RunResults[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[5]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse6[29]"			Proj:ResultSummary[1]:Enduse6[29]	= {	if (LocalCompAssigned( RunResults[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[6]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse7[29]"			Proj:ResultSummary[1]:Enduse7[29]	= {	if (LocalCompAssigned( RunResults[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[7]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse8[29]"			Proj:ResultSummary[1]:Enduse8[29]	= {	if (LocalCompAssigned( RunResults[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[8]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse9[29]"			Proj:ResultSummary[1]:Enduse9[29]	= {	if (LocalCompAssigned( RunResults[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[9]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[1]:Enduse12[29]"			Proj:ResultSummary[1]:Enduse12[29]	= {	if (LocalCompAssigned( RunResults[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[12]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[1]:Enduse13[29]"			Proj:ResultSummary[1]:Enduse13[29]	= {	if (LocalCompAssigned( RunResults[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[13]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse14[29]"			Proj:ResultSummary[1]:Enduse14[29]	= {	if (LocalCompAssigned( RunResults[14] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[14]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse99[29]"			Proj:ResultSummary[1]:Enduse99[29]	= {   "0"  }  
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[1]:Enduse11[29]"			Proj:ResultSummary[1]:Enduse11[29]	=
      {  if (IfValidAnd( RunResults[11]:StdTotalCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResults[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResults[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse10[29]"			Proj:ResultSummary[1]:Enduse10[29]	=
      {  if (IfValidAnd( RunResults[10]:StdTotalCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResults[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResults[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResults[13]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResults[14]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[6]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[7]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[8]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResults[9]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Std-Prop Margin CO2 Emissions
   ; incl. adjustments for DHW StdSolar PV credit - SAC 5/5/20 (FlexibilityCredit)
	"Set ResultSummary[1]:Title1[30]"			Proj:ResultSummary[1]:Title1[30]		= {	"CO2"  }    ; SAC 4/11/19 - was:  "Design Rating"
	"Set ResultSummary[1]:Title2[30]"			Proj:ResultSummary[1]:Title2[30]		= {	"Emissions"  }    ; SAC 4/11/19 - was:  "CO2 Emissions"
	"Set ResultSummary[1]:Title3[30]"			Proj:ResultSummary[1]:Title3[30]		= {	Format( "Margin (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[1]:Enduse1[30]"			Proj:ResultSummary[1]:Enduse1[30]	= {	if (LocalCompAssigned( RunResults[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[1]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResults[1]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse2[30]"			Proj:ResultSummary[1]:Enduse2[30]	= {	if (LocalCompAssigned( RunResults[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[2]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResults[2]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse3[30]"			Proj:ResultSummary[1]:Enduse3[30]	= {	if (LocalCompAssigned( RunResults[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[3]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResults[3]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
;	"Set ResultSummary[1]:Enduse4[30]"			Proj:ResultSummary[1]:Enduse4[30]	= {	if (LocalCompAssigned( RunResults[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[4]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResults[4]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse5[30]"			Proj:ResultSummary[1]:Enduse5[30]	= {	if (LocalCompAssigned( RunResults[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[5]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResults[5]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse6[30]"			Proj:ResultSummary[1]:Enduse6[30]	= {	if (LocalCompAssigned( RunResults[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[6]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResults[6]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse7[30]"			Proj:ResultSummary[1]:Enduse7[30]	= {	if (LocalCompAssigned( RunResults[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[7]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResults[7]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse8[30]"			Proj:ResultSummary[1]:Enduse8[30]	= {	if (LocalCompAssigned( RunResults[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[8]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResults[8]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse9[30]"			Proj:ResultSummary[1]:Enduse9[30]	= {	if (LocalCompAssigned( RunResults[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[9]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResults[9]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[1]:Enduse12[30]"			Proj:ResultSummary[1]:Enduse12[30]	= {	if (LocalCompAssigned( RunResults[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResults[12]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ) - int( (RunResults[12]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[1]:Enduse13[30]"			Proj:ResultSummary[1]:Enduse13[30]	=
      {  if (LocalCompAssigned( RunResults[13] ) == 0) then  UNDEFINED
         else  FltToStr( int( (RunResults[13]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) -
                         int( ((RunResults[13]:PropTotalCarbon[1] - ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse14[30]"			Proj:ResultSummary[1]:Enduse14[30]	= {	if (IfValidAnd( RunResults[14]:PropTotalCarbon[1] != 0 )==0) then  "0"  
                                                                                       else if (IfValidAnd( ResultSummary[1]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( (-RunResults[14]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[1]:GHCEnergyEffCO2 >= (-1 * RunResults[14]:PropTotalCarbon[1])) then  "0"
	                                                                                    else  FltToStr( (int( ((ResultSummary[1]:GHCEnergyEffCO2 - RunResults[14]:PropTotalCarbon[1]) * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }

	"Set ResultSummary[1]:Enduse98[30]"			Proj:ResultSummary[1]:Enduse98[30]	= {   if (IfValidAnd( ResultSummary[1]:PFlxFinalCarbon[2] != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (ResultSummary[1]:PFlxFinalCarbon[2] * -CO2TotalUnitMult / CondFloorArea) + 0.5 )), 0 )  endif  }   ; SAC 11/28/23 (2025)

	"Set ResultSummary[1]:Enduse99[30]"			Proj:ResultSummary[1]:Enduse99[30]	= {   if (IfValidAnd( ResultSummary[1]:GHCEnergyEffCO2 != 0 )==0 .AND.
	                                                                                        IfValidAnd( ResultSummary[1]:DHWSlrPVCreditCO2 != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( ((ValidOr( ResultSummary[1]:GHCEnergyEffCO2  , 0 ) +
                                                                                                               ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * -CO2TotalUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[1]:Enduse11[30]"			Proj:ResultSummary[1]:Enduse11[30]	=
      {  if (LocalCompAssigned( RunResults[11] ) == 0) then  UNDEFINED  
         else  FltToStr( ( int( (RunResults[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResults[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ) -
                         ( int( (RunResults[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResults[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[1]:GHCEnergyEffCO2  , 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) ), 0 )  endif  }
	"Set ResultSummary[1]:Enduse10[30]"			Proj:ResultSummary[1]:Enduse10[30]	=
      {  if (LocalCompAssigned( RunResults[10] ) == 0) then  "0"  
         else  FltToStr( ( int( (RunResults[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResults[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResults[13]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResults[14]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[6]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[7]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[8]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[9]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ) - 
                         ( int( (RunResults[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResults[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( ((ValidOr( ResultSummary[1]:GHCEnergyEffCO2 , 0 ) + ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                           int( ((ValidOr( RunResults[13]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[1]:DHWSlrPVCreditCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                           int( ((ValidOr( RunResults[14]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[1]:GHCEnergyEffCO2  , 0 )) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[1]:PFlxFinalCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                           int( (RunResults[6]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[7]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[8]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResults[9]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ), 0 )  endif  }
END
;*************************************************************************

;*************************************************************************  - SAC 2/4/19
RULELIST "CARes_CO2Details_AllOrientations" 1 0 1 0
;*************************************************************************
;-------------
;--- NORTH ---
;-------------
   "Set ResultSummary[2]:CO2FuelUnitLabel"   Proj:ResultSummary[2]:CO2FuelUnitLabel   = {  Proj:CO2FuelUnitLabel   }
   "Set ResultSummary[2]:CO2TotalUnitLabel"  Proj:ResultSummary[2]:CO2TotalUnitLabel  = {  Proj:CO2TotalUnitLabel  }

  ; Proposed Electric CO2 Emissions
	"Set ResultSummary[2]:Title1[23]"			Proj:ResultSummary[2]:Title1[23]		= {	"Prop Design"  }
	"Set ResultSummary[2]:Title2[23]"			Proj:ResultSummary[2]:Title2[23]		= {	"Electric CO2"  }
	"Set ResultSummary[2]:Title3[23]"			Proj:ResultSummary[2]:Title3[23]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[2]:Enduse1[23]"			Proj:ResultSummary[2]:Enduse1[23]	= {	if (IfValidAnd( RunResultsN[1]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[1]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse2[23]"			Proj:ResultSummary[2]:Enduse2[23]	= {	if (IfValidAnd( RunResultsN[2]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[2]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse3[23]"			Proj:ResultSummary[2]:Enduse3[23]	= {	if (IfValidAnd( RunResultsN[3]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[3]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse4[23]"			Proj:ResultSummary[2]:Enduse4[23]	= {	if (IfValidAnd( RunResultsN[4]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[4]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse5[23]"			Proj:ResultSummary[2]:Enduse5[23]	= {	if (IfValidAnd( RunResultsN[5]:PropElecCarbon[1]  > 0 )==0) then 
																														if (Proj:ModelingDHW < 0.5) then  "- none -"  else  UNDEFINED  endif
																													else  FltToStr( (int( (RunResultsN[5]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse6[23]"			Proj:ResultSummary[2]:Enduse6[23]	= {	if (IfValidAnd( RunResultsN[6]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[6]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse7[23]"			Proj:ResultSummary[2]:Enduse7[23]	= {	if (IfValidAnd( RunResultsN[7]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[7]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse8[23]"			Proj:ResultSummary[2]:Enduse8[23]	= {	if (IfValidAnd( RunResultsN[8]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[8]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse9[23]"			Proj:ResultSummary[2]:Enduse9[23]	= {	if (IfValidAnd( RunResultsN[9]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[9]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
;	"Set ResultSummary[2]:Enduse12[23]"			Proj:ResultSummary[2]:Enduse12[23]	= {	if (IfValidAnd( RunResultsN[12]:PropElecCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( (int( (RunResultsN[12]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse13[23]"			Proj:ResultSummary[2]:Enduse13[23]	= {	if (IfValidAnd( RunResultsN[13]:PropElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[13]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse14[23]"			Proj:ResultSummary[2]:Enduse14[23]	= {	if (IfValidAnd( RunResultsN[14]:PropElecCarbon[1] != 0 )==0) then  UNDEFINED  
                                                                                       else if (IfValidAnd( ResultSummary[2]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( ( RunResultsN[14]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[2]:GHCEnergyEffCO2 >= (-1 * RunResultsN[14]:PropElecCarbon[1])) then  UNDEFINED
	                                                                                    else  FltToStr( (int( ((RunResultsN[14]:PropElecCarbon[1] - ResultSummary[2]:GHCEnergyEffCO2) * Proj:CO2FuelUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[2]:Enduse99[23]"			Proj:ResultSummary[2]:Enduse99[23]	= {   if (IfValidAnd( ResultSummary[2]:GHCEnergyEffCO2 != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( (int( (ResultSummary[2]:GHCEnergyEffCO2 * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/3/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[2]:Enduse98[23]"			Proj:ResultSummary[2]:Enduse98[23]	= {   if (IfValidAnd( ResultSummary[2]:PFlxElecCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( (int( (ResultSummary[2]:PFlxElecCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[2]:Enduse11[23]"			Proj:ResultSummary[2]:Enduse11[23]	=
      {  if (IfValidAnd( RunResultsN[11]:PropElecCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsN[1]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[2]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[3]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsN[4]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[5]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[2]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse10[23]"			Proj:ResultSummary[2]:Enduse10[23]	=
      {  if (IfValidAnd( RunResultsN[10]:PropElecCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsN[1]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[2]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[3]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsN[4]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[5]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[2]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsN[13]:PropElecCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsN[14]:PropElecCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[2]:PFlxElecCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( (RunResultsN[6]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[7]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[8]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[9]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Proposed FUEL CO2 Emissions
	"Set ResultSummary[2]:Title1[24]"			Proj:ResultSummary[2]:Title1[24]		= {	"Prop Design"  }
	"Set ResultSummary[2]:Title2[24]"			Proj:ResultSummary[2]:Title2[24]		= {	"Fuel CO2"  }
	"Set ResultSummary[2]:Title3[24]"			Proj:ResultSummary[2]:Title3[24]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[2]:Enduse1[24]"			Proj:ResultSummary[2]:Enduse1[24]	= {	if (IfValidAnd( RunResultsN[1]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[1]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[1]:PropNatGasCarbon[1]  + RunResultsN[1]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse2[24]"			Proj:ResultSummary[2]:Enduse2[24]	= {	if (IfValidAnd( RunResultsN[2]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[2]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[2]:PropNatGasCarbon[1]  + RunResultsN[2]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse3[24]"			Proj:ResultSummary[2]:Enduse3[24]	= {	if (IfValidAnd( RunResultsN[3]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[3]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[3]:PropNatGasCarbon[1]  + RunResultsN[3]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse4[24]"			Proj:ResultSummary[2]:Enduse4[24]	= {	if (IfValidAnd( RunResultsN[4]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[4]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[4]:PropNatGasCarbon[1]  + RunResultsN[4]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse5[24]"			Proj:ResultSummary[2]:Enduse5[24]	= {	if (IfValidAnd( RunResultsN[5]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[5]:PropOtherCarbon[1]  > 0 )==0) then
																														if (Proj:ModelingDHW < 0.5) then  "- none -"  else  UNDEFINED  endif
																													else  FltToStr( ((RunResultsN[5]:PropNatGasCarbon[1]  + RunResultsN[5]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse6[24]"			Proj:ResultSummary[2]:Enduse6[24]	= {	if (IfValidAnd( RunResultsN[6]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[6]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[6]:PropNatGasCarbon[1]  + RunResultsN[6]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse7[24]"			Proj:ResultSummary[2]:Enduse7[24]	= {	if (IfValidAnd( RunResultsN[7]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[7]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[7]:PropNatGasCarbon[1]  + RunResultsN[7]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse8[24]"			Proj:ResultSummary[2]:Enduse8[24]	= {	if (IfValidAnd( RunResultsN[8]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[8]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[8]:PropNatGasCarbon[1]  + RunResultsN[8]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse9[24]"			Proj:ResultSummary[2]:Enduse9[24]	= {	if (IfValidAnd( RunResultsN[9]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[9]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[9]:PropNatGasCarbon[1]  + RunResultsN[9]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
;	"Set ResultSummary[2]:Enduse12[24]"			Proj:ResultSummary[2]:Enduse12[24]	= {	if (IfValidAnd( RunResultsN[12]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsN[12]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( ((RunResultsN[12]:PropNatGasCarbon[1] + RunResultsN[12]:PropOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse13[24]"			Proj:ResultSummary[2]:Enduse13[24]	= {	UNDEFINED  }		; PV
	"Set ResultSummary[2]:Enduse14[24]"			Proj:ResultSummary[2]:Enduse14[24]	= {	if (IfValidAnd( RunResultsN[14]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsN[14]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[14]:PropNatGasCarbon[1] + RunResultsN[14]:PropOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
      ; SAC 2/4/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[2]:Enduse98[24]"			Proj:ResultSummary[2]:Enduse98[24]	= {   if (IfValidAnd( ResultSummary[2]:PFlxFuelCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( int( (ResultSummary[2]:PFlxFuelCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 ), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[2]:Enduse11[24]"			Proj:ResultSummary[2]:Enduse11[24]	=
      {  if (IfValidAnd( RunResultsN[11]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsN[11]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( ((RunResultsN[1]:PropNatGasCarbon[1]  + RunResultsN[1]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[2]:PropNatGasCarbon[1]  + RunResultsN[2]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[3]:PropNatGasCarbon[1]  + RunResultsN[3]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsN[4]:PropNatGasCarbon[1]  + RunResultsN[4]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[5]:PropNatGasCarbon[1]  + RunResultsN[5]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse10[24]"			Proj:ResultSummary[2]:Enduse10[24]	=
      {  if (IfValidAnd( RunResultsN[10]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsN[10]:PropOtherCarbon[1] > 0 )==0) then  "0"  
         else  FltToStr( int( ((RunResultsN[1]:PropNatGasCarbon[1]  + RunResultsN[1]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[2]:PropNatGasCarbon[1]  + RunResultsN[2]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[3]:PropNatGasCarbon[1]  + RunResultsN[3]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsN[4]:PropNatGasCarbon[1]  + RunResultsN[4]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[5]:PropNatGasCarbon[1]  + RunResultsN[5]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[2]:PFlxFuelCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( ((RunResultsN[6]:PropNatGasCarbon[1]  + RunResultsN[6]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[7]:PropNatGasCarbon[1]  + RunResultsN[7]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[8]:PropNatGasCarbon[1]  + RunResultsN[8]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[9]:PropNatGasCarbon[1]  + RunResultsN[9]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Proposed Total CO2 Emissions
	"Set ResultSummary[2]:Title1[25]"			Proj:ResultSummary[2]:Title1[25]		= {	"Prop Design"  }
	"Set ResultSummary[2]:Title2[25]"			Proj:ResultSummary[2]:Title2[25]		= {	"Total CO2"  }
	"Set ResultSummary[2]:Title3[25]"			Proj:ResultSummary[2]:Title3[25]		= {	Format( "Emis. (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[2]:Enduse1[25]"			Proj:ResultSummary[2]:Enduse1[25]	= {	if (LocalCompAssigned( RunResultsN[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[1]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse2[25]"			Proj:ResultSummary[2]:Enduse2[25]	= {	if (LocalCompAssigned( RunResultsN[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[2]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse3[25]"			Proj:ResultSummary[2]:Enduse3[25]	= {	if (LocalCompAssigned( RunResultsN[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[3]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse4[25]"			Proj:ResultSummary[2]:Enduse4[25]	= {	if (LocalCompAssigned( RunResultsN[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[4]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse5[25]"			Proj:ResultSummary[2]:Enduse5[25]	= {	if (LocalCompAssigned( RunResultsN[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[5]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse6[25]"			Proj:ResultSummary[2]:Enduse6[25]	= {	if (LocalCompAssigned( RunResultsN[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[6]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse7[25]"			Proj:ResultSummary[2]:Enduse7[25]	= {	if (LocalCompAssigned( RunResultsN[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[7]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse8[25]"			Proj:ResultSummary[2]:Enduse8[25]	= {	if (LocalCompAssigned( RunResultsN[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[8]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse9[25]"			Proj:ResultSummary[2]:Enduse9[25]	= {	if (LocalCompAssigned( RunResultsN[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[9]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[2]:Enduse12[25]"			Proj:ResultSummary[2]:Enduse12[25]	= {	if (LocalCompAssigned( RunResultsN[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[12]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[2]:Enduse13[25]"			Proj:ResultSummary[2]:Enduse13[25]	= {	if (LocalCompAssigned( RunResultsN[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[13]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse14[25]"			Proj:ResultSummary[2]:Enduse14[25]	= {	if (IfValidAnd( RunResultsN[14]:PropTotalCarbon[1] != 0 )==0) then  "0"  
                                                                                       else if (IfValidAnd( ResultSummary[2]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( ( RunResultsN[14]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[2]:GHCEnergyEffCO2 >= (-1 * RunResultsN[14]:PropTotalCarbon[1])) then  "0"
	                                                                                    else  FltToStr( (int( ((RunResultsN[14]:PropTotalCarbon[1] - ResultSummary[2]:GHCEnergyEffCO2) * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[2]:Enduse99[25]"			Proj:ResultSummary[2]:Enduse99[25]	= {   if (IfValidAnd( ResultSummary[2]:GHCEnergyEffCO2 != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (ResultSummary[2]:GHCEnergyEffCO2 * CO2TotalUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[2]:Enduse98[25]"			Proj:ResultSummary[2]:Enduse98[25]	= {   if (IfValidAnd( ResultSummary[2]:PFlxFinalCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( int( (ResultSummary[2]:PFlxFinalCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 ), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[2]:Enduse11[25]"			Proj:ResultSummary[2]:Enduse11[25]	=
      {  if (IfValidAnd( RunResultsN[11]:PropTotalCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsN[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsN[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[2]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse10[25]"			Proj:ResultSummary[2]:Enduse10[25]	=
      {  if (IfValidAnd( RunResultsN[10]:PropTotalCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsN[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsN[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[2]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsN[13]:PropTotalCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( RunResultsN[14]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[2]:GHCEnergyEffCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[2]:PFlxFinalCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( (RunResultsN[6]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[7]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[8]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[9]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }


  ; Standard Electric CO2 Emissions
	"Set ResultSummary[2]:Title1[27]"			Proj:ResultSummary[2]:Title1[27]		= {	"Std Design"  }
	"Set ResultSummary[2]:Title2[27]"			Proj:ResultSummary[2]:Title2[27]		= {	"Electric CO2"  }
	"Set ResultSummary[2]:Title3[27]"			Proj:ResultSummary[2]:Title3[27]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[2]:Enduse1[27]"			Proj:ResultSummary[2]:Enduse1[27]	= {	if (IfValidAnd( RunResultsN[1]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[1]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse2[27]"			Proj:ResultSummary[2]:Enduse2[27]	= {	if (IfValidAnd( RunResultsN[2]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[2]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse3[27]"			Proj:ResultSummary[2]:Enduse3[27]	= {	if (IfValidAnd( RunResultsN[3]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[3]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse4[27]"			Proj:ResultSummary[2]:Enduse4[27]	= {	if (IfValidAnd( RunResultsN[4]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[4]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse5[27]"			Proj:ResultSummary[2]:Enduse5[27]	= {	if (IfValidAnd( RunResultsN[5]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED
																													else  FltToStr( (int( (RunResultsN[5]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse6[27]"			Proj:ResultSummary[2]:Enduse6[27]	= {	if (IfValidAnd( RunResultsN[6]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[6]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse7[27]"			Proj:ResultSummary[2]:Enduse7[27]	= {	if (IfValidAnd( RunResultsN[7]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[7]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse8[27]"			Proj:ResultSummary[2]:Enduse8[27]	= {	if (IfValidAnd( RunResultsN[8]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[8]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse9[27]"			Proj:ResultSummary[2]:Enduse9[27]	= {	if (IfValidAnd( RunResultsN[9]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[9]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
;	"Set ResultSummary[2]:Enduse12[27]"			Proj:ResultSummary[2]:Enduse12[27]	= {	if (IfValidAnd( RunResultsN[12]:StdElecCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( (int( (RunResultsN[12]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse13[27]"			Proj:ResultSummary[2]:Enduse13[27]	= {	if (IfValidAnd( RunResultsN[13]:StdElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[13]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[2]:Enduse14[27]"			Proj:ResultSummary[2]:Enduse14[27]	= {	if (IfValidAnd( RunResultsN[14]:StdElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsN[14]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[2]:Enduse11[27]"			Proj:ResultSummary[2]:Enduse11[27]	=
      {  if (IfValidAnd( RunResultsN[11]:StdElecCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsN[1]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[2]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[3]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsN[4]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[5]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse10[27]"			Proj:ResultSummary[2]:Enduse10[27]	=
      {  if (IfValidAnd( RunResultsN[10]:StdElecCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsN[1]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[2]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[3]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsN[4]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[5]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsN[13]:StdElecCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsN[14]:StdElecCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[6]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[7]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[8]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[9]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Standard FUEL CO2 Emissions
	"Set ResultSummary[2]:Title1[28]"			Proj:ResultSummary[2]:Title1[28]		= {	"Std Design"  }
	"Set ResultSummary[2]:Title2[28]"			Proj:ResultSummary[2]:Title2[28]		= {	"Fuel CO2"  }
	"Set ResultSummary[2]:Title3[28]"			Proj:ResultSummary[2]:Title3[28]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[2]:Enduse1[28]"			Proj:ResultSummary[2]:Enduse1[28]	= {	if (IfValidAnd( RunResultsN[1]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[1]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[1]:StdNatGasCarbon[1]  + RunResultsN[1]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse2[28]"			Proj:ResultSummary[2]:Enduse2[28]	= {	if (IfValidAnd( RunResultsN[2]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[2]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[2]:StdNatGasCarbon[1]  + RunResultsN[2]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse3[28]"			Proj:ResultSummary[2]:Enduse3[28]	= {	if (IfValidAnd( RunResultsN[3]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[3]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[3]:StdNatGasCarbon[1]  + RunResultsN[3]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse4[28]"			Proj:ResultSummary[2]:Enduse4[28]	= {	if (IfValidAnd( RunResultsN[4]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[4]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[4]:StdNatGasCarbon[1]  + RunResultsN[4]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse5[28]"			Proj:ResultSummary[2]:Enduse5[28]	= {	if (IfValidAnd( RunResultsN[5]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[5]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED
																													else  FltToStr( ((RunResultsN[5]:StdNatGasCarbon[1]  + RunResultsN[5]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse6[28]"			Proj:ResultSummary[2]:Enduse6[28]	= {	if (IfValidAnd( RunResultsN[6]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[6]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[6]:StdNatGasCarbon[1]  + RunResultsN[6]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse7[28]"			Proj:ResultSummary[2]:Enduse7[28]	= {	if (IfValidAnd( RunResultsN[7]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[7]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[7]:StdNatGasCarbon[1]  + RunResultsN[7]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse8[28]"			Proj:ResultSummary[2]:Enduse8[28]	= {	if (IfValidAnd( RunResultsN[8]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[8]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[8]:StdNatGasCarbon[1]  + RunResultsN[8]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse9[28]"			Proj:ResultSummary[2]:Enduse9[28]	= {	if (IfValidAnd( RunResultsN[9]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsN[9]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsN[9]:StdNatGasCarbon[1]  + RunResultsN[9]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
;	"Set ResultSummary[2]:Enduse12[28]"			Proj:ResultSummary[2]:Enduse12[28]	= {	if (IfValidAnd( RunResultsN[12]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsN[12]:StdOtherCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( ((RunResultsN[12]:StdNatGasCarbon[1] + RunResultsN[12]:StdOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[2]:Enduse13[28]"			Proj:ResultSummary[2]:Enduse13[28]	= {	UNDEFINED  }		; PV
	"Set ResultSummary[2]:Enduse14[28]"			Proj:ResultSummary[2]:Enduse14[28]	= {	UNDEFINED  }      ; Batt
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[2]:Enduse11[28]"			Proj:ResultSummary[2]:Enduse11[28]	=
      {  if (IfValidAnd( RunResultsN[11]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsN[11]:StdOtherCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( ((RunResultsN[1]:StdNatGasCarbon[1] + RunResultsN[1]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[2]:StdNatGasCarbon[1] + RunResultsN[2]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[3]:StdNatGasCarbon[1] + RunResultsN[3]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsN[4]:StdNatGasCarbon[1] + RunResultsN[4]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[5]:StdNatGasCarbon[1] + RunResultsN[5]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse10[28]"			Proj:ResultSummary[2]:Enduse10[28]	=
      {  if (IfValidAnd( RunResultsN[10]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsN[10]:StdOtherCarbon[1] > 0 )==0) then  "0"  
         else  FltToStr( int( ((RunResultsN[1]:StdNatGasCarbon[1] + RunResultsN[1]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[2]:StdNatGasCarbon[1] + RunResultsN[2]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[3]:StdNatGasCarbon[1] + RunResultsN[3]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsN[4]:StdNatGasCarbon[1] + RunResultsN[4]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[5]:StdNatGasCarbon[1] + RunResultsN[5]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[6]:StdNatGasCarbon[1] + RunResultsN[6]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[7]:StdNatGasCarbon[1] + RunResultsN[7]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[8]:StdNatGasCarbon[1] + RunResultsN[8]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsN[9]:StdNatGasCarbon[1] + RunResultsN[9]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Standard Total CO2 Emissions
	"Set ResultSummary[2]:Title1[29]"			Proj:ResultSummary[2]:Title1[29]		= {	"Std Design"  }
	"Set ResultSummary[2]:Title2[29]"			Proj:ResultSummary[2]:Title2[29]		= {	"Total CO2"  }
	"Set ResultSummary[2]:Title3[29]"			Proj:ResultSummary[2]:Title3[29]		= {	Format( "Emis. (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[2]:Enduse1[29]"			Proj:ResultSummary[2]:Enduse1[29]	= {	if (LocalCompAssigned( RunResultsN[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[1]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse2[29]"			Proj:ResultSummary[2]:Enduse2[29]	= {	if (LocalCompAssigned( RunResultsN[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[2]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse3[29]"			Proj:ResultSummary[2]:Enduse3[29]	= {	if (LocalCompAssigned( RunResultsN[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[3]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse4[29]"			Proj:ResultSummary[2]:Enduse4[29]	= {	if (LocalCompAssigned( RunResultsN[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[4]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse5[29]"			Proj:ResultSummary[2]:Enduse5[29]	= {	if (LocalCompAssigned( RunResultsN[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[5]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse6[29]"			Proj:ResultSummary[2]:Enduse6[29]	= {	if (LocalCompAssigned( RunResultsN[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[6]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse7[29]"			Proj:ResultSummary[2]:Enduse7[29]	= {	if (LocalCompAssigned( RunResultsN[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[7]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse8[29]"			Proj:ResultSummary[2]:Enduse8[29]	= {	if (LocalCompAssigned( RunResultsN[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[8]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse9[29]"			Proj:ResultSummary[2]:Enduse9[29]	= {	if (LocalCompAssigned( RunResultsN[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[9]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[2]:Enduse12[29]"			Proj:ResultSummary[2]:Enduse12[29]	= {	if (LocalCompAssigned( RunResultsN[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[12]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[2]:Enduse13[29]"			Proj:ResultSummary[2]:Enduse13[29]	= {	if (LocalCompAssigned( RunResultsN[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[13]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse14[29]"			Proj:ResultSummary[2]:Enduse14[29]	= {	if (LocalCompAssigned( RunResultsN[14] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[14]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse99[29]"			Proj:ResultSummary[2]:Enduse99[29]	= {   "0"  }  
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[2]:Enduse11[29]"			Proj:ResultSummary[2]:Enduse11[29]	=
      {  if (IfValidAnd( RunResultsN[11]:StdTotalCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsN[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsN[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse10[29]"			Proj:ResultSummary[2]:Enduse10[29]	=
      {  if (IfValidAnd( RunResultsN[10]:StdTotalCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsN[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsN[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsN[13]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsN[14]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[6]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[7]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[8]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsN[9]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Std-Prop Margin CO2 Emissions
	"Set ResultSummary[2]:Title1[30]"			Proj:ResultSummary[2]:Title1[30]		= {	"Design Rating"  }
	"Set ResultSummary[2]:Title2[30]"			Proj:ResultSummary[2]:Title2[30]		= {	"CO2 Emissions"  }
	"Set ResultSummary[2]:Title3[30]"			Proj:ResultSummary[2]:Title3[30]		= {	Format( "Margin (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[2]:Enduse1[30]"			Proj:ResultSummary[2]:Enduse1[30]	= {	if (LocalCompAssigned( RunResultsN[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[1]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsN[1]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse2[30]"			Proj:ResultSummary[2]:Enduse2[30]	= {	if (LocalCompAssigned( RunResultsN[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[2]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsN[2]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse3[30]"			Proj:ResultSummary[2]:Enduse3[30]	= {	if (LocalCompAssigned( RunResultsN[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[3]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsN[3]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
;	"Set ResultSummary[2]:Enduse4[30]"			Proj:ResultSummary[2]:Enduse4[30]	= {	if (LocalCompAssigned( RunResultsN[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[4]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsN[4]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse5[30]"			Proj:ResultSummary[2]:Enduse5[30]	= {	if (LocalCompAssigned( RunResultsN[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[5]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsN[5]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse6[30]"			Proj:ResultSummary[2]:Enduse6[30]	= {	if (LocalCompAssigned( RunResultsN[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[6]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsN[6]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse7[30]"			Proj:ResultSummary[2]:Enduse7[30]	= {	if (LocalCompAssigned( RunResultsN[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[7]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsN[7]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse8[30]"			Proj:ResultSummary[2]:Enduse8[30]	= {	if (LocalCompAssigned( RunResultsN[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[8]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsN[8]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse9[30]"			Proj:ResultSummary[2]:Enduse9[30]	= {	if (LocalCompAssigned( RunResultsN[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[9]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsN[9]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[2]:Enduse12[30]"			Proj:ResultSummary[2]:Enduse12[30]	= {	if (LocalCompAssigned( RunResultsN[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[12]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsN[12]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[2]:Enduse13[30]"			Proj:ResultSummary[2]:Enduse13[30]	= {	if (LocalCompAssigned( RunResultsN[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsN[13]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsN[13]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse14[30]"			Proj:ResultSummary[2]:Enduse14[30]	= {	if (IfValidAnd( RunResultsN[14]:PropTotalCarbon[1] != 0 )==0) then  "0"  
                                                                                       else if (IfValidAnd( ResultSummary[2]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( (-RunResultsN[14]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[2]:GHCEnergyEffCO2 >= (-1 * RunResultsN[14]:PropTotalCarbon[1])) then  "0"
	                                                                                    else  FltToStr( (int( ((ResultSummary[2]:GHCEnergyEffCO2 - RunResultsN[14]:PropTotalCarbon[1]) * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[2]:Enduse98[30]"			Proj:ResultSummary[2]:Enduse98[30]	= {   if (IfValidAnd( ResultSummary[2]:PFlxFinalCarbon[2] != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (ResultSummary[2]:PFlxFinalCarbon[2] * -CO2TotalUnitMult / CondFloorArea) + 0.5 )), 0 )  endif  }   ; SAC 11/28/23 (2025)
	"Set ResultSummary[2]:Enduse99[30]"			Proj:ResultSummary[2]:Enduse99[30]	= {   if (IfValidAnd( ResultSummary[2]:GHCEnergyEffCO2 != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (-ResultSummary[2]:GHCEnergyEffCO2 * CO2TotalUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[2]:Enduse11[30]"			Proj:ResultSummary[2]:Enduse11[30]	=
      {  if (LocalCompAssigned( RunResultsN[11] ) == 0) then  UNDEFINED  
         else  FltToStr( ( int( (RunResultsN[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsN[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ) -
                         ( int( (RunResultsN[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsN[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[2]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) ), 0 )  endif  }
	"Set ResultSummary[2]:Enduse10[30]"			Proj:ResultSummary[2]:Enduse10[30]	=
      {  if (LocalCompAssigned( RunResultsN[10] ) == 0) then  "0"  
         else  FltToStr( ( int( (RunResultsN[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsN[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsN[13]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsN[14]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[6]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[7]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[8]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[9]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ) - 
                         ( int( (RunResultsN[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsN[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[2]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsN[13]:PropTotalCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( ((ValidOr( RunResultsN[14]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[2]:GHCEnergyEffCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[2]:PFlxFinalCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                           int( (RunResultsN[6]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[7]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[8]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsN[9]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ), 0 )  endif  }

;-------------
;--- EAST  ---
;-------------
   "Set ResultSummary[3]:CO2FuelUnitLabel"   Proj:ResultSummary[3]:CO2FuelUnitLabel   = {  Proj:CO2FuelUnitLabel   }
   "Set ResultSummary[3]:CO2TotalUnitLabel"  Proj:ResultSummary[3]:CO2TotalUnitLabel  = {  Proj:CO2TotalUnitLabel  }

  ; Proposed Electric CO2 Emissions
	"Set ResultSummary[3]:Title1[23]"			Proj:ResultSummary[3]:Title1[23]		= {	"Prop Design"  }
	"Set ResultSummary[3]:Title2[23]"			Proj:ResultSummary[3]:Title2[23]		= {	"Electric CO2"  }
	"Set ResultSummary[3]:Title3[23]"			Proj:ResultSummary[3]:Title3[23]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[3]:Enduse1[23]"			Proj:ResultSummary[3]:Enduse1[23]	= {	if (IfValidAnd( RunResultsE[1]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[1]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse2[23]"			Proj:ResultSummary[3]:Enduse2[23]	= {	if (IfValidAnd( RunResultsE[2]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[2]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse3[23]"			Proj:ResultSummary[3]:Enduse3[23]	= {	if (IfValidAnd( RunResultsE[3]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[3]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse4[23]"			Proj:ResultSummary[3]:Enduse4[23]	= {	if (IfValidAnd( RunResultsE[4]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[4]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse5[23]"			Proj:ResultSummary[3]:Enduse5[23]	= {	if (IfValidAnd( RunResultsE[5]:PropElecCarbon[1]  > 0 )==0) then 
																														if (Proj:ModelingDHW < 0.5) then  "- none -"  else  UNDEFINED  endif
																													else  FltToStr( (int( (RunResultsE[5]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse6[23]"			Proj:ResultSummary[3]:Enduse6[23]	= {	if (IfValidAnd( RunResultsE[6]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[6]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse7[23]"			Proj:ResultSummary[3]:Enduse7[23]	= {	if (IfValidAnd( RunResultsE[7]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[7]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse8[23]"			Proj:ResultSummary[3]:Enduse8[23]	= {	if (IfValidAnd( RunResultsE[8]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[8]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse9[23]"			Proj:ResultSummary[3]:Enduse9[23]	= {	if (IfValidAnd( RunResultsE[9]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[9]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
;	"Set ResultSummary[3]:Enduse12[23]"			Proj:ResultSummary[3]:Enduse12[23]	= {	if (IfValidAnd( RunResultsE[12]:PropElecCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( (int( (RunResultsE[12]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse13[23]"			Proj:ResultSummary[3]:Enduse13[23]	= {	if (IfValidAnd( RunResultsE[13]:PropElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[13]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse14[23]"			Proj:ResultSummary[3]:Enduse14[23]	= {	if (IfValidAnd( RunResultsE[14]:PropElecCarbon[1] != 0 )==0) then  UNDEFINED  
                                                                                       else if (IfValidAnd( ResultSummary[3]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( ( RunResultsE[14]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[3]:GHCEnergyEffCO2 >= (-1 * RunResultsE[14]:PropElecCarbon[1])) then  UNDEFINED
	                                                                                    else  FltToStr( (int( ((RunResultsE[14]:PropElecCarbon[1] - ResultSummary[3]:GHCEnergyEffCO2) * Proj:CO2FuelUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[3]:Enduse99[23]"			Proj:ResultSummary[3]:Enduse99[23]	= {   if (IfValidAnd( ResultSummary[3]:GHCEnergyEffCO2 != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( (int( (ResultSummary[3]:GHCEnergyEffCO2 * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/3/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[3]:Enduse98[23]"			Proj:ResultSummary[3]:Enduse98[23]	= {   if (IfValidAnd( ResultSummary[3]:PFlxElecCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( (int( (ResultSummary[3]:PFlxElecCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[3]:Enduse11[23]"			Proj:ResultSummary[3]:Enduse11[23]	=
      {  if (IfValidAnd( RunResultsE[11]:PropElecCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsE[1]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[2]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[3]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsE[4]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[5]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[3]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse10[23]"			Proj:ResultSummary[3]:Enduse10[23]	=
      {  if (IfValidAnd( RunResultsE[10]:PropElecCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsE[1]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[2]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[3]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsE[4]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[5]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[3]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsE[13]:PropElecCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsE[14]:PropElecCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[3]:PFlxElecCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( (RunResultsE[6]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[7]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[8]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[9]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Proposed FUEL CO2 Emissions
	"Set ResultSummary[3]:Title1[24]"			Proj:ResultSummary[3]:Title1[24]		= {	"Prop Design"  }
	"Set ResultSummary[3]:Title2[24]"			Proj:ResultSummary[3]:Title2[24]		= {	"Fuel CO2"  }
	"Set ResultSummary[3]:Title3[24]"			Proj:ResultSummary[3]:Title3[24]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[3]:Enduse1[24]"			Proj:ResultSummary[3]:Enduse1[24]	= {	if (IfValidAnd( RunResultsE[1]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[1]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[1]:PropNatGasCarbon[1]  + RunResultsE[1]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse2[24]"			Proj:ResultSummary[3]:Enduse2[24]	= {	if (IfValidAnd( RunResultsE[2]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[2]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[2]:PropNatGasCarbon[1]  + RunResultsE[2]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse3[24]"			Proj:ResultSummary[3]:Enduse3[24]	= {	if (IfValidAnd( RunResultsE[3]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[3]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[3]:PropNatGasCarbon[1]  + RunResultsE[3]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse4[24]"			Proj:ResultSummary[3]:Enduse4[24]	= {	if (IfValidAnd( RunResultsE[4]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[4]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[4]:PropNatGasCarbon[1]  + RunResultsE[4]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse5[24]"			Proj:ResultSummary[3]:Enduse5[24]	= {	if (IfValidAnd( RunResultsE[5]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[5]:PropOtherCarbon[1]  > 0 )==0) then
																														if (Proj:ModelingDHW < 0.5) then  "- none -"  else  UNDEFINED  endif
																													else  FltToStr( ((RunResultsE[5]:PropNatGasCarbon[1]  + RunResultsE[5]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse6[24]"			Proj:ResultSummary[3]:Enduse6[24]	= {	if (IfValidAnd( RunResultsE[6]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[6]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[6]:PropNatGasCarbon[1]  + RunResultsE[6]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse7[24]"			Proj:ResultSummary[3]:Enduse7[24]	= {	if (IfValidAnd( RunResultsE[7]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[7]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[7]:PropNatGasCarbon[1]  + RunResultsE[7]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse8[24]"			Proj:ResultSummary[3]:Enduse8[24]	= {	if (IfValidAnd( RunResultsE[8]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[8]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[8]:PropNatGasCarbon[1]  + RunResultsE[8]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse9[24]"			Proj:ResultSummary[3]:Enduse9[24]	= {	if (IfValidAnd( RunResultsE[9]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[9]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[9]:PropNatGasCarbon[1]  + RunResultsE[9]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
;	"Set ResultSummary[3]:Enduse12[24]"			Proj:ResultSummary[3]:Enduse12[24]	= {	if (IfValidAnd( RunResultsE[12]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsE[12]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( ((RunResultsE[12]:PropNatGasCarbon[1] + RunResultsE[12]:PropOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse13[24]"			Proj:ResultSummary[3]:Enduse13[24]	= {	UNDEFINED  }		; PV
	"Set ResultSummary[3]:Enduse14[24]"			Proj:ResultSummary[3]:Enduse14[24]	= {	if (IfValidAnd( RunResultsE[14]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsE[14]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[14]:PropNatGasCarbon[1] + RunResultsE[14]:PropOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
      ; SAC 2/4/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[3]:Enduse98[24]"			Proj:ResultSummary[3]:Enduse98[24]	= {   if (IfValidAnd( ResultSummary[3]:PFlxFuelCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( int( (ResultSummary[3]:PFlxFuelCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 ), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[3]:Enduse11[24]"			Proj:ResultSummary[3]:Enduse11[24]	=
      {  if (IfValidAnd( RunResultsE[11]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsE[11]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( ((RunResultsE[1]:PropNatGasCarbon[1]  + RunResultsE[1]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[2]:PropNatGasCarbon[1]  + RunResultsE[2]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[3]:PropNatGasCarbon[1]  + RunResultsE[3]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsE[4]:PropNatGasCarbon[1]  + RunResultsE[4]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[5]:PropNatGasCarbon[1]  + RunResultsE[5]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse10[24]"			Proj:ResultSummary[3]:Enduse10[24]	=
      {  if (IfValidAnd( RunResultsE[10]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsE[10]:PropOtherCarbon[1] > 0 )==0) then  "0"  
         else  FltToStr( int( ((RunResultsE[1]:PropNatGasCarbon[1]  + RunResultsE[1]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[2]:PropNatGasCarbon[1]  + RunResultsE[2]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[3]:PropNatGasCarbon[1]  + RunResultsE[3]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsE[4]:PropNatGasCarbon[1]  + RunResultsE[4]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[5]:PropNatGasCarbon[1]  + RunResultsE[5]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[3]:PFlxFuelCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( ((RunResultsE[6]:PropNatGasCarbon[1]  + RunResultsE[6]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[7]:PropNatGasCarbon[1]  + RunResultsE[7]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[8]:PropNatGasCarbon[1]  + RunResultsE[8]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[9]:PropNatGasCarbon[1]  + RunResultsE[9]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Proposed Total CO2 Emissions
	"Set ResultSummary[3]:Title1[25]"			Proj:ResultSummary[3]:Title1[25]		= {	"Prop Design"  }
	"Set ResultSummary[3]:Title2[25]"			Proj:ResultSummary[3]:Title2[25]		= {	"Total CO2"  }
	"Set ResultSummary[3]:Title3[25]"			Proj:ResultSummary[3]:Title3[25]		= {	Format( "Emis. (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[3]:Enduse1[25]"			Proj:ResultSummary[3]:Enduse1[25]	= {	if (LocalCompAssigned( RunResultsE[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[1]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse2[25]"			Proj:ResultSummary[3]:Enduse2[25]	= {	if (LocalCompAssigned( RunResultsE[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[2]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse3[25]"			Proj:ResultSummary[3]:Enduse3[25]	= {	if (LocalCompAssigned( RunResultsE[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[3]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse4[25]"			Proj:ResultSummary[3]:Enduse4[25]	= {	if (LocalCompAssigned( RunResultsE[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[4]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse5[25]"			Proj:ResultSummary[3]:Enduse5[25]	= {	if (LocalCompAssigned( RunResultsE[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[5]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse6[25]"			Proj:ResultSummary[3]:Enduse6[25]	= {	if (LocalCompAssigned( RunResultsE[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[6]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse7[25]"			Proj:ResultSummary[3]:Enduse7[25]	= {	if (LocalCompAssigned( RunResultsE[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[7]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse8[25]"			Proj:ResultSummary[3]:Enduse8[25]	= {	if (LocalCompAssigned( RunResultsE[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[8]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse9[25]"			Proj:ResultSummary[3]:Enduse9[25]	= {	if (LocalCompAssigned( RunResultsE[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[9]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[3]:Enduse12[25]"			Proj:ResultSummary[3]:Enduse12[25]	= {	if (LocalCompAssigned( RunResultsE[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[12]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[3]:Enduse13[25]"			Proj:ResultSummary[3]:Enduse13[25]	= {	if (LocalCompAssigned( RunResultsE[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[13]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse14[25]"			Proj:ResultSummary[3]:Enduse14[25]	= {	if (IfValidAnd( RunResultsE[14]:PropTotalCarbon[1] != 0 )==0) then  "0"  
                                                                                       else if (IfValidAnd( ResultSummary[3]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( ( RunResultsE[14]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[3]:GHCEnergyEffCO2 >= (-1 * RunResultsE[14]:PropTotalCarbon[1])) then  "0"
	                                                                                    else  FltToStr( (int( ((RunResultsE[14]:PropTotalCarbon[1] - ResultSummary[3]:GHCEnergyEffCO2) * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[3]:Enduse99[25]"			Proj:ResultSummary[3]:Enduse99[25]	= {   if (IfValidAnd( ResultSummary[3]:GHCEnergyEffCO2 != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (ResultSummary[3]:GHCEnergyEffCO2 * CO2TotalUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[3]:Enduse98[25]"			Proj:ResultSummary[3]:Enduse98[25]	= {   if (IfValidAnd( ResultSummary[3]:PFlxFinalCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( int( (ResultSummary[3]:PFlxFinalCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 ), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[3]:Enduse11[25]"			Proj:ResultSummary[3]:Enduse11[25]	=
      {  if (IfValidAnd( RunResultsE[11]:PropTotalCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsE[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsE[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[3]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse10[25]"			Proj:ResultSummary[3]:Enduse10[25]	=
      {  if (IfValidAnd( RunResultsE[10]:PropTotalCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsE[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsE[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[3]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsE[13]:PropTotalCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( RunResultsE[14]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[3]:GHCEnergyEffCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[3]:PFlxFinalCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( (RunResultsE[6]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[7]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[8]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[9]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }


  ; Standard Electric CO2 Emissions
	"Set ResultSummary[3]:Title1[27]"			Proj:ResultSummary[3]:Title1[27]		= {	"Std Design"  }
	"Set ResultSummary[3]:Title2[27]"			Proj:ResultSummary[3]:Title2[27]		= {	"Electric CO2"  }
	"Set ResultSummary[3]:Title3[27]"			Proj:ResultSummary[3]:Title3[27]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[3]:Enduse1[27]"			Proj:ResultSummary[3]:Enduse1[27]	= {	if (IfValidAnd( RunResultsE[1]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[1]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse2[27]"			Proj:ResultSummary[3]:Enduse2[27]	= {	if (IfValidAnd( RunResultsE[2]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[2]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse3[27]"			Proj:ResultSummary[3]:Enduse3[27]	= {	if (IfValidAnd( RunResultsE[3]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[3]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse4[27]"			Proj:ResultSummary[3]:Enduse4[27]	= {	if (IfValidAnd( RunResultsE[4]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[4]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse5[27]"			Proj:ResultSummary[3]:Enduse5[27]	= {	if (IfValidAnd( RunResultsE[5]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED
																													else  FltToStr( (int( (RunResultsE[5]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse6[27]"			Proj:ResultSummary[3]:Enduse6[27]	= {	if (IfValidAnd( RunResultsE[6]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[6]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse7[27]"			Proj:ResultSummary[3]:Enduse7[27]	= {	if (IfValidAnd( RunResultsE[7]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[7]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse8[27]"			Proj:ResultSummary[3]:Enduse8[27]	= {	if (IfValidAnd( RunResultsE[8]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[8]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse9[27]"			Proj:ResultSummary[3]:Enduse9[27]	= {	if (IfValidAnd( RunResultsE[9]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[9]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
;	"Set ResultSummary[3]:Enduse12[27]"			Proj:ResultSummary[3]:Enduse12[27]	= {	if (IfValidAnd( RunResultsE[12]:StdElecCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( (int( (RunResultsE[12]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse13[27]"			Proj:ResultSummary[3]:Enduse13[27]	= {	if (IfValidAnd( RunResultsE[13]:StdElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[13]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[3]:Enduse14[27]"			Proj:ResultSummary[3]:Enduse14[27]	= {	if (IfValidAnd( RunResultsE[14]:StdElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsE[14]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[3]:Enduse11[27]"			Proj:ResultSummary[3]:Enduse11[27]	=
      {  if (IfValidAnd( RunResultsE[11]:StdElecCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsE[1]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[2]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[3]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsE[4]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[5]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse10[27]"			Proj:ResultSummary[3]:Enduse10[27]	=
      {  if (IfValidAnd( RunResultsE[10]:StdElecCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsE[1]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[2]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[3]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsE[4]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[5]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsE[13]:StdElecCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsE[14]:StdElecCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[6]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[7]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[8]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[9]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Standard FUEL CO2 Emissions
	"Set ResultSummary[3]:Title1[28]"			Proj:ResultSummary[3]:Title1[28]		= {	"Std Design"  }
	"Set ResultSummary[3]:Title2[28]"			Proj:ResultSummary[3]:Title2[28]		= {	"Fuel CO2"  }
	"Set ResultSummary[3]:Title3[28]"			Proj:ResultSummary[3]:Title3[28]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[3]:Enduse1[28]"			Proj:ResultSummary[3]:Enduse1[28]	= {	if (IfValidAnd( RunResultsE[1]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[1]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[1]:StdNatGasCarbon[1]  + RunResultsE[1]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse2[28]"			Proj:ResultSummary[3]:Enduse2[28]	= {	if (IfValidAnd( RunResultsE[2]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[2]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[2]:StdNatGasCarbon[1]  + RunResultsE[2]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse3[28]"			Proj:ResultSummary[3]:Enduse3[28]	= {	if (IfValidAnd( RunResultsE[3]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[3]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[3]:StdNatGasCarbon[1]  + RunResultsE[3]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse4[28]"			Proj:ResultSummary[3]:Enduse4[28]	= {	if (IfValidAnd( RunResultsE[4]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[4]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[4]:StdNatGasCarbon[1]  + RunResultsE[4]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse5[28]"			Proj:ResultSummary[3]:Enduse5[28]	= {	if (IfValidAnd( RunResultsE[5]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[5]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED
																													else  FltToStr( ((RunResultsE[5]:StdNatGasCarbon[1]  + RunResultsE[5]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse6[28]"			Proj:ResultSummary[3]:Enduse6[28]	= {	if (IfValidAnd( RunResultsE[6]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[6]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[6]:StdNatGasCarbon[1]  + RunResultsE[6]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse7[28]"			Proj:ResultSummary[3]:Enduse7[28]	= {	if (IfValidAnd( RunResultsE[7]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[7]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[7]:StdNatGasCarbon[1]  + RunResultsE[7]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse8[28]"			Proj:ResultSummary[3]:Enduse8[28]	= {	if (IfValidAnd( RunResultsE[8]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[8]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[8]:StdNatGasCarbon[1]  + RunResultsE[8]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse9[28]"			Proj:ResultSummary[3]:Enduse9[28]	= {	if (IfValidAnd( RunResultsE[9]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsE[9]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsE[9]:StdNatGasCarbon[1]  + RunResultsE[9]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
;	"Set ResultSummary[3]:Enduse12[28]"			Proj:ResultSummary[3]:Enduse12[28]	= {	if (IfValidAnd( RunResultsE[12]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsE[12]:StdOtherCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( ((RunResultsE[12]:StdNatGasCarbon[1] + RunResultsE[12]:StdOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[3]:Enduse13[28]"			Proj:ResultSummary[3]:Enduse13[28]	= {	UNDEFINED  }		; PV
	"Set ResultSummary[3]:Enduse14[28]"			Proj:ResultSummary[3]:Enduse14[28]	= {	UNDEFINED  }      ; Batt
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[3]:Enduse11[28]"			Proj:ResultSummary[3]:Enduse11[28]	=
      {  if (IfValidAnd( RunResultsE[11]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsE[11]:StdOtherCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( ((RunResultsE[1]:StdNatGasCarbon[1] + RunResultsE[1]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[2]:StdNatGasCarbon[1] + RunResultsE[2]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[3]:StdNatGasCarbon[1] + RunResultsE[3]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsE[4]:StdNatGasCarbon[1] + RunResultsE[4]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[5]:StdNatGasCarbon[1] + RunResultsE[5]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse10[28]"			Proj:ResultSummary[3]:Enduse10[28]	=
      {  if (IfValidAnd( RunResultsE[10]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsE[10]:StdOtherCarbon[1] > 0 )==0) then  "0"  
         else  FltToStr( int( ((RunResultsE[1]:StdNatGasCarbon[1] + RunResultsE[1]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[2]:StdNatGasCarbon[1] + RunResultsE[2]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[3]:StdNatGasCarbon[1] + RunResultsE[3]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsE[4]:StdNatGasCarbon[1] + RunResultsE[4]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[5]:StdNatGasCarbon[1] + RunResultsE[5]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[6]:StdNatGasCarbon[1] + RunResultsE[6]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[7]:StdNatGasCarbon[1] + RunResultsE[7]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[8]:StdNatGasCarbon[1] + RunResultsE[8]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsE[9]:StdNatGasCarbon[1] + RunResultsE[9]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Standard Total CO2 Emissions
	"Set ResultSummary[3]:Title1[29]"			Proj:ResultSummary[3]:Title1[29]		= {	"Std Design"  }
	"Set ResultSummary[3]:Title2[29]"			Proj:ResultSummary[3]:Title2[29]		= {	"Total CO2"  }
	"Set ResultSummary[3]:Title3[29]"			Proj:ResultSummary[3]:Title3[29]		= {	Format( "Emis. (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[3]:Enduse1[29]"			Proj:ResultSummary[3]:Enduse1[29]	= {	if (LocalCompAssigned( RunResultsE[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[1]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse2[29]"			Proj:ResultSummary[3]:Enduse2[29]	= {	if (LocalCompAssigned( RunResultsE[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[2]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse3[29]"			Proj:ResultSummary[3]:Enduse3[29]	= {	if (LocalCompAssigned( RunResultsE[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[3]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse4[29]"			Proj:ResultSummary[3]:Enduse4[29]	= {	if (LocalCompAssigned( RunResultsE[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[4]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse5[29]"			Proj:ResultSummary[3]:Enduse5[29]	= {	if (LocalCompAssigned( RunResultsE[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[5]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse6[29]"			Proj:ResultSummary[3]:Enduse6[29]	= {	if (LocalCompAssigned( RunResultsE[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[6]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse7[29]"			Proj:ResultSummary[3]:Enduse7[29]	= {	if (LocalCompAssigned( RunResultsE[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[7]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse8[29]"			Proj:ResultSummary[3]:Enduse8[29]	= {	if (LocalCompAssigned( RunResultsE[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[8]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse9[29]"			Proj:ResultSummary[3]:Enduse9[29]	= {	if (LocalCompAssigned( RunResultsE[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[9]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[3]:Enduse12[29]"			Proj:ResultSummary[3]:Enduse12[29]	= {	if (LocalCompAssigned( RunResultsE[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[12]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[3]:Enduse13[29]"			Proj:ResultSummary[3]:Enduse13[29]	= {	if (LocalCompAssigned( RunResultsE[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[13]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse14[29]"			Proj:ResultSummary[3]:Enduse14[29]	= {	if (LocalCompAssigned( RunResultsE[14] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[14]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse99[29]"			Proj:ResultSummary[3]:Enduse99[29]	= {   "0"  }  
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[3]:Enduse11[29]"			Proj:ResultSummary[3]:Enduse11[29]	=
      {  if (IfValidAnd( RunResultsE[11]:StdTotalCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsE[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsE[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse10[29]"			Proj:ResultSummary[3]:Enduse10[29]	=
      {  if (IfValidAnd( RunResultsE[10]:StdTotalCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsE[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsE[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsE[13]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsE[14]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[6]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[7]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[8]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsE[9]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Std-Prop Margin CO2 Emissions
	"Set ResultSummary[3]:Title1[30]"			Proj:ResultSummary[3]:Title1[30]		= {	"Design Rating"  }
	"Set ResultSummary[3]:Title2[30]"			Proj:ResultSummary[3]:Title2[30]		= {	"CO2 Emissions"  }
	"Set ResultSummary[3]:Title3[30]"			Proj:ResultSummary[3]:Title3[30]		= {	Format( "Margin (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[3]:Enduse1[30]"			Proj:ResultSummary[3]:Enduse1[30]	= {	if (LocalCompAssigned( RunResultsE[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[1]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsE[1]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse2[30]"			Proj:ResultSummary[3]:Enduse2[30]	= {	if (LocalCompAssigned( RunResultsE[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[2]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsE[2]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse3[30]"			Proj:ResultSummary[3]:Enduse3[30]	= {	if (LocalCompAssigned( RunResultsE[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[3]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsE[3]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
;	"Set ResultSummary[3]:Enduse4[30]"			Proj:ResultSummary[3]:Enduse4[30]	= {	if (LocalCompAssigned( RunResultsE[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[4]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsE[4]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse5[30]"			Proj:ResultSummary[3]:Enduse5[30]	= {	if (LocalCompAssigned( RunResultsE[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[5]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsE[5]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse6[30]"			Proj:ResultSummary[3]:Enduse6[30]	= {	if (LocalCompAssigned( RunResultsE[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[6]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsE[6]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse7[30]"			Proj:ResultSummary[3]:Enduse7[30]	= {	if (LocalCompAssigned( RunResultsE[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[7]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsE[7]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse8[30]"			Proj:ResultSummary[3]:Enduse8[30]	= {	if (LocalCompAssigned( RunResultsE[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[8]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsE[8]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse9[30]"			Proj:ResultSummary[3]:Enduse9[30]	= {	if (LocalCompAssigned( RunResultsE[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[9]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsE[9]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[3]:Enduse12[30]"			Proj:ResultSummary[3]:Enduse12[30]	= {	if (LocalCompAssigned( RunResultsE[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[12]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsE[12]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[3]:Enduse13[30]"			Proj:ResultSummary[3]:Enduse13[30]	= {	if (LocalCompAssigned( RunResultsE[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsE[13]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsE[13]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse14[30]"			Proj:ResultSummary[3]:Enduse14[30]	= {	if (IfValidAnd( RunResultsE[14]:PropTotalCarbon[1] != 0 )==0) then  "0"  
                                                                                       else if (IfValidAnd( ResultSummary[3]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( (-RunResultsE[14]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[3]:GHCEnergyEffCO2 >= (-1 * RunResultsE[14]:PropTotalCarbon[1])) then  "0"
	                                                                                    else  FltToStr( (int( ((ResultSummary[3]:GHCEnergyEffCO2 - RunResultsE[14]:PropTotalCarbon[1]) * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[3]:Enduse98[30]"			Proj:ResultSummary[3]:Enduse98[30]	= {   if (IfValidAnd( ResultSummary[3]:PFlxFinalCarbon[2] != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (ResultSummary[3]:PFlxFinalCarbon[2] * -CO2TotalUnitMult / CondFloorArea) + 0.5 )), 0 )  endif  }   ; SAC 11/28/23 (2025)
	"Set ResultSummary[3]:Enduse99[30]"			Proj:ResultSummary[3]:Enduse99[30]	= {   if (IfValidAnd( ResultSummary[3]:GHCEnergyEffCO2 != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (-ResultSummary[3]:GHCEnergyEffCO2 * CO2TotalUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[3]:Enduse11[30]"			Proj:ResultSummary[3]:Enduse11[30]	=
      {  if (LocalCompAssigned( RunResultsE[11] ) == 0) then  UNDEFINED  
         else  FltToStr( ( int( (RunResultsE[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsE[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ) -
                         ( int( (RunResultsE[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsE[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[3]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) ), 0 )  endif  }
	"Set ResultSummary[3]:Enduse10[30]"			Proj:ResultSummary[3]:Enduse10[30]	=
      {  if (LocalCompAssigned( RunResultsE[10] ) == 0) then  "0"  
         else  FltToStr( ( int( (RunResultsE[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsE[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsE[13]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsE[14]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[6]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[7]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[8]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[9]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ) - 
                         ( int( (RunResultsE[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsE[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[3]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsE[13]:PropTotalCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( ((ValidOr( RunResultsE[14]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[3]:GHCEnergyEffCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[3]:PFlxFinalCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                           int( (RunResultsE[6]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[7]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[8]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsE[9]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ), 0 )  endif  }

;-------------
;--- SOUTH ---
;-------------
   "Set ResultSummary[4]:CO2FuelUnitLabel"   Proj:ResultSummary[4]:CO2FuelUnitLabel   = {  Proj:CO2FuelUnitLabel   }
   "Set ResultSummary[4]:CO2TotalUnitLabel"  Proj:ResultSummary[4]:CO2TotalUnitLabel  = {  Proj:CO2TotalUnitLabel  }

  ; Proposed Electric CO2 Emissions
	"Set ResultSummary[4]:Title1[23]"			Proj:ResultSummary[4]:Title1[23]		= {	"Prop Design"  }
	"Set ResultSummary[4]:Title2[23]"			Proj:ResultSummary[4]:Title2[23]		= {	"Electric CO2"  }
	"Set ResultSummary[4]:Title3[23]"			Proj:ResultSummary[4]:Title3[23]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[4]:Enduse1[23]"			Proj:ResultSummary[4]:Enduse1[23]	= {	if (IfValidAnd( RunResultsS[1]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[1]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse2[23]"			Proj:ResultSummary[4]:Enduse2[23]	= {	if (IfValidAnd( RunResultsS[2]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[2]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse3[23]"			Proj:ResultSummary[4]:Enduse3[23]	= {	if (IfValidAnd( RunResultsS[3]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[3]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse4[23]"			Proj:ResultSummary[4]:Enduse4[23]	= {	if (IfValidAnd( RunResultsS[4]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[4]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse5[23]"			Proj:ResultSummary[4]:Enduse5[23]	= {	if (IfValidAnd( RunResultsS[5]:PropElecCarbon[1]  > 0 )==0) then 
																														if (Proj:ModelingDHW < 0.5) then  "- none -"  else  UNDEFINED  endif
																													else  FltToStr( (int( (RunResultsS[5]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse6[23]"			Proj:ResultSummary[4]:Enduse6[23]	= {	if (IfValidAnd( RunResultsS[6]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[6]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse7[23]"			Proj:ResultSummary[4]:Enduse7[23]	= {	if (IfValidAnd( RunResultsS[7]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[7]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse8[23]"			Proj:ResultSummary[4]:Enduse8[23]	= {	if (IfValidAnd( RunResultsS[8]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[8]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse9[23]"			Proj:ResultSummary[4]:Enduse9[23]	= {	if (IfValidAnd( RunResultsS[9]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[9]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
;	"Set ResultSummary[4]:Enduse12[23]"			Proj:ResultSummary[4]:Enduse12[23]	= {	if (IfValidAnd( RunResultsS[12]:PropElecCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( (int( (RunResultsS[12]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse13[23]"			Proj:ResultSummary[4]:Enduse13[23]	= {	if (IfValidAnd( RunResultsS[13]:PropElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[13]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse14[23]"			Proj:ResultSummary[4]:Enduse14[23]	= {	if (IfValidAnd( RunResultsS[14]:PropElecCarbon[1] != 0 )==0) then  UNDEFINED  
                                                                                       else if (IfValidAnd( ResultSummary[4]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( ( RunResultsS[14]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[4]:GHCEnergyEffCO2 >= (-1 * RunResultsS[14]:PropElecCarbon[1])) then  UNDEFINED
	                                                                                    else  FltToStr( (int( ((RunResultsS[14]:PropElecCarbon[1] - ResultSummary[4]:GHCEnergyEffCO2) * Proj:CO2FuelUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[4]:Enduse99[23]"			Proj:ResultSummary[4]:Enduse99[23]	= {   if (IfValidAnd( ResultSummary[4]:GHCEnergyEffCO2 != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( (int( (ResultSummary[4]:GHCEnergyEffCO2 * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/3/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[4]:Enduse98[23]"			Proj:ResultSummary[4]:Enduse98[23]	= {   if (IfValidAnd( ResultSummary[4]:PFlxElecCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( (int( (ResultSummary[4]:PFlxElecCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[4]:Enduse11[23]"			Proj:ResultSummary[4]:Enduse11[23]	=
      {  if (IfValidAnd( RunResultsS[11]:PropElecCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsS[1]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[2]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[3]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsS[4]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[5]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[4]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse10[23]"			Proj:ResultSummary[4]:Enduse10[23]	=
      {  if (IfValidAnd( RunResultsS[10]:PropElecCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsS[1]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[2]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[3]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsS[4]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[5]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[4]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsS[13]:PropElecCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsS[14]:PropElecCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[4]:PFlxElecCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( (RunResultsS[6]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[7]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[8]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[9]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Proposed FUEL CO2 Emissions
	"Set ResultSummary[4]:Title1[24]"			Proj:ResultSummary[4]:Title1[24]		= {	"Prop Design"  }
	"Set ResultSummary[4]:Title2[24]"			Proj:ResultSummary[4]:Title2[24]		= {	"Fuel CO2"  }
	"Set ResultSummary[4]:Title3[24]"			Proj:ResultSummary[4]:Title3[24]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[4]:Enduse1[24]"			Proj:ResultSummary[4]:Enduse1[24]	= {	if (IfValidAnd( RunResultsS[1]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[1]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[1]:PropNatGasCarbon[1]  + RunResultsS[1]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse2[24]"			Proj:ResultSummary[4]:Enduse2[24]	= {	if (IfValidAnd( RunResultsS[2]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[2]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[2]:PropNatGasCarbon[1]  + RunResultsS[2]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse3[24]"			Proj:ResultSummary[4]:Enduse3[24]	= {	if (IfValidAnd( RunResultsS[3]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[3]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[3]:PropNatGasCarbon[1]  + RunResultsS[3]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse4[24]"			Proj:ResultSummary[4]:Enduse4[24]	= {	if (IfValidAnd( RunResultsS[4]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[4]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[4]:PropNatGasCarbon[1]  + RunResultsS[4]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse5[24]"			Proj:ResultSummary[4]:Enduse5[24]	= {	if (IfValidAnd( RunResultsS[5]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[5]:PropOtherCarbon[1]  > 0 )==0) then
																														if (Proj:ModelingDHW < 0.5) then  "- none -"  else  UNDEFINED  endif
																													else  FltToStr( ((RunResultsS[5]:PropNatGasCarbon[1]  + RunResultsS[5]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse6[24]"			Proj:ResultSummary[4]:Enduse6[24]	= {	if (IfValidAnd( RunResultsS[6]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[6]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[6]:PropNatGasCarbon[1]  + RunResultsS[6]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse7[24]"			Proj:ResultSummary[4]:Enduse7[24]	= {	if (IfValidAnd( RunResultsS[7]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[7]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[7]:PropNatGasCarbon[1]  + RunResultsS[7]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse8[24]"			Proj:ResultSummary[4]:Enduse8[24]	= {	if (IfValidAnd( RunResultsS[8]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[8]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[8]:PropNatGasCarbon[1]  + RunResultsS[8]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse9[24]"			Proj:ResultSummary[4]:Enduse9[24]	= {	if (IfValidAnd( RunResultsS[9]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[9]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[9]:PropNatGasCarbon[1]  + RunResultsS[9]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
;	"Set ResultSummary[4]:Enduse12[24]"			Proj:ResultSummary[4]:Enduse12[24]	= {	if (IfValidAnd( RunResultsS[12]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsS[12]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( ((RunResultsS[12]:PropNatGasCarbon[1] + RunResultsS[12]:PropOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse13[24]"			Proj:ResultSummary[4]:Enduse13[24]	= {	UNDEFINED  }		; PV
	"Set ResultSummary[4]:Enduse14[24]"			Proj:ResultSummary[4]:Enduse14[24]	= {	if (IfValidAnd( RunResultsS[14]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsS[14]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[14]:PropNatGasCarbon[1] + RunResultsS[14]:PropOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
      ; SAC 2/4/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[4]:Enduse98[24]"			Proj:ResultSummary[4]:Enduse98[24]	= {   if (IfValidAnd( ResultSummary[4]:PFlxFuelCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( int( (ResultSummary[4]:PFlxFuelCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 ), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[4]:Enduse11[24]"			Proj:ResultSummary[4]:Enduse11[24]	=
      {  if (IfValidAnd( RunResultsS[11]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsS[11]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( ((RunResultsS[1]:PropNatGasCarbon[1]  + RunResultsS[1]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[2]:PropNatGasCarbon[1]  + RunResultsS[2]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[3]:PropNatGasCarbon[1]  + RunResultsS[3]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsS[4]:PropNatGasCarbon[1]  + RunResultsS[4]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[5]:PropNatGasCarbon[1]  + RunResultsS[5]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse10[24]"			Proj:ResultSummary[4]:Enduse10[24]	=
      {  if (IfValidAnd( RunResultsS[10]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsS[10]:PropOtherCarbon[1] > 0 )==0) then  "0"  
         else  FltToStr( int( ((RunResultsS[1]:PropNatGasCarbon[1]  + RunResultsS[1]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[2]:PropNatGasCarbon[1]  + RunResultsS[2]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[3]:PropNatGasCarbon[1]  + RunResultsS[3]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsS[4]:PropNatGasCarbon[1]  + RunResultsS[4]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[5]:PropNatGasCarbon[1]  + RunResultsS[5]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[4]:PFlxFuelCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( ((RunResultsS[6]:PropNatGasCarbon[1]  + RunResultsS[6]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[7]:PropNatGasCarbon[1]  + RunResultsS[7]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[8]:PropNatGasCarbon[1]  + RunResultsS[8]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[9]:PropNatGasCarbon[1]  + RunResultsS[9]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Proposed Total CO2 Emissions
	"Set ResultSummary[4]:Title1[25]"			Proj:ResultSummary[4]:Title1[25]		= {	"Prop Design"  }
	"Set ResultSummary[4]:Title2[25]"			Proj:ResultSummary[4]:Title2[25]		= {	"Total CO2"  }
	"Set ResultSummary[4]:Title3[25]"			Proj:ResultSummary[4]:Title3[25]		= {	Format( "Emis. (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[4]:Enduse1[25]"			Proj:ResultSummary[4]:Enduse1[25]	= {	if (LocalCompAssigned( RunResultsS[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[1]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse2[25]"			Proj:ResultSummary[4]:Enduse2[25]	= {	if (LocalCompAssigned( RunResultsS[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[2]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse3[25]"			Proj:ResultSummary[4]:Enduse3[25]	= {	if (LocalCompAssigned( RunResultsS[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[3]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse4[25]"			Proj:ResultSummary[4]:Enduse4[25]	= {	if (LocalCompAssigned( RunResultsS[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[4]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse5[25]"			Proj:ResultSummary[4]:Enduse5[25]	= {	if (LocalCompAssigned( RunResultsS[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[5]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse6[25]"			Proj:ResultSummary[4]:Enduse6[25]	= {	if (LocalCompAssigned( RunResultsS[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[6]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse7[25]"			Proj:ResultSummary[4]:Enduse7[25]	= {	if (LocalCompAssigned( RunResultsS[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[7]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse8[25]"			Proj:ResultSummary[4]:Enduse8[25]	= {	if (LocalCompAssigned( RunResultsS[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[8]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse9[25]"			Proj:ResultSummary[4]:Enduse9[25]	= {	if (LocalCompAssigned( RunResultsS[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[9]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[4]:Enduse12[25]"			Proj:ResultSummary[4]:Enduse12[25]	= {	if (LocalCompAssigned( RunResultsS[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[12]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[4]:Enduse13[25]"			Proj:ResultSummary[4]:Enduse13[25]	= {	if (LocalCompAssigned( RunResultsS[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[13]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse14[25]"			Proj:ResultSummary[4]:Enduse14[25]	= {	if (IfValidAnd( RunResultsS[14]:PropTotalCarbon[1] != 0 )==0) then  "0"  
                                                                                       else if (IfValidAnd( ResultSummary[4]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( ( RunResultsS[14]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[4]:GHCEnergyEffCO2 >= (-1 * RunResultsS[14]:PropTotalCarbon[1])) then  "0"
	                                                                                    else  FltToStr( (int( ((RunResultsS[14]:PropTotalCarbon[1] - ResultSummary[4]:GHCEnergyEffCO2) * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[4]:Enduse99[25]"			Proj:ResultSummary[4]:Enduse99[25]	= {   if (IfValidAnd( ResultSummary[4]:GHCEnergyEffCO2 != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (ResultSummary[4]:GHCEnergyEffCO2 * CO2TotalUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[4]:Enduse98[25]"			Proj:ResultSummary[4]:Enduse98[25]	= {   if (IfValidAnd( ResultSummary[4]:PFlxFinalCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( int( (ResultSummary[4]:PFlxFinalCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 ), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[4]:Enduse11[25]"			Proj:ResultSummary[4]:Enduse11[25]	=
      {  if (IfValidAnd( RunResultsS[11]:PropTotalCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsS[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsS[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[4]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse10[25]"			Proj:ResultSummary[4]:Enduse10[25]	=
      {  if (IfValidAnd( RunResultsS[10]:PropTotalCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsS[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsS[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[4]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsS[13]:PropTotalCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( RunResultsS[14]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[4]:GHCEnergyEffCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[4]:PFlxFinalCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( (RunResultsS[6]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[7]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[8]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[9]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }


  ; Standard Electric CO2 Emissions
	"Set ResultSummary[4]:Title1[27]"			Proj:ResultSummary[4]:Title1[27]		= {	"Std Design"  }
	"Set ResultSummary[4]:Title2[27]"			Proj:ResultSummary[4]:Title2[27]		= {	"Electric CO2"  }
	"Set ResultSummary[4]:Title3[27]"			Proj:ResultSummary[4]:Title3[27]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[4]:Enduse1[27]"			Proj:ResultSummary[4]:Enduse1[27]	= {	if (IfValidAnd( RunResultsS[1]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[1]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse2[27]"			Proj:ResultSummary[4]:Enduse2[27]	= {	if (IfValidAnd( RunResultsS[2]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[2]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse3[27]"			Proj:ResultSummary[4]:Enduse3[27]	= {	if (IfValidAnd( RunResultsS[3]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[3]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse4[27]"			Proj:ResultSummary[4]:Enduse4[27]	= {	if (IfValidAnd( RunResultsS[4]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[4]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse5[27]"			Proj:ResultSummary[4]:Enduse5[27]	= {	if (IfValidAnd( RunResultsS[5]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED
																													else  FltToStr( (int( (RunResultsS[5]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse6[27]"			Proj:ResultSummary[4]:Enduse6[27]	= {	if (IfValidAnd( RunResultsS[6]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[6]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse7[27]"			Proj:ResultSummary[4]:Enduse7[27]	= {	if (IfValidAnd( RunResultsS[7]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[7]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse8[27]"			Proj:ResultSummary[4]:Enduse8[27]	= {	if (IfValidAnd( RunResultsS[8]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[8]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse9[27]"			Proj:ResultSummary[4]:Enduse9[27]	= {	if (IfValidAnd( RunResultsS[9]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[9]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
;	"Set ResultSummary[4]:Enduse12[27]"			Proj:ResultSummary[4]:Enduse12[27]	= {	if (IfValidAnd( RunResultsS[12]:StdElecCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( (int( (RunResultsS[12]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse13[27]"			Proj:ResultSummary[4]:Enduse13[27]	= {	if (IfValidAnd( RunResultsS[13]:StdElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[13]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[4]:Enduse14[27]"			Proj:ResultSummary[4]:Enduse14[27]	= {	if (IfValidAnd( RunResultsS[14]:StdElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsS[14]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[4]:Enduse11[27]"			Proj:ResultSummary[4]:Enduse11[27]	=
      {  if (IfValidAnd( RunResultsS[11]:StdElecCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsS[1]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[2]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[3]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsS[4]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[5]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse10[27]"			Proj:ResultSummary[4]:Enduse10[27]	=
      {  if (IfValidAnd( RunResultsS[10]:StdElecCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsS[1]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[2]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[3]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsS[4]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[5]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsS[13]:StdElecCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsS[14]:StdElecCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[6]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[7]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[8]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[9]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Standard FUEL CO2 Emissions
	"Set ResultSummary[4]:Title1[28]"			Proj:ResultSummary[4]:Title1[28]		= {	"Std Design"  }
	"Set ResultSummary[4]:Title2[28]"			Proj:ResultSummary[4]:Title2[28]		= {	"Fuel CO2"  }
	"Set ResultSummary[4]:Title3[28]"			Proj:ResultSummary[4]:Title3[28]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[4]:Enduse1[28]"			Proj:ResultSummary[4]:Enduse1[28]	= {	if (IfValidAnd( RunResultsS[1]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[1]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[1]:StdNatGasCarbon[1]  + RunResultsS[1]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse2[28]"			Proj:ResultSummary[4]:Enduse2[28]	= {	if (IfValidAnd( RunResultsS[2]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[2]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[2]:StdNatGasCarbon[1]  + RunResultsS[2]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse3[28]"			Proj:ResultSummary[4]:Enduse3[28]	= {	if (IfValidAnd( RunResultsS[3]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[3]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[3]:StdNatGasCarbon[1]  + RunResultsS[3]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse4[28]"			Proj:ResultSummary[4]:Enduse4[28]	= {	if (IfValidAnd( RunResultsS[4]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[4]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[4]:StdNatGasCarbon[1]  + RunResultsS[4]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse5[28]"			Proj:ResultSummary[4]:Enduse5[28]	= {	if (IfValidAnd( RunResultsS[5]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[5]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED
																													else  FltToStr( ((RunResultsS[5]:StdNatGasCarbon[1]  + RunResultsS[5]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse6[28]"			Proj:ResultSummary[4]:Enduse6[28]	= {	if (IfValidAnd( RunResultsS[6]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[6]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[6]:StdNatGasCarbon[1]  + RunResultsS[6]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse7[28]"			Proj:ResultSummary[4]:Enduse7[28]	= {	if (IfValidAnd( RunResultsS[7]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[7]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[7]:StdNatGasCarbon[1]  + RunResultsS[7]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse8[28]"			Proj:ResultSummary[4]:Enduse8[28]	= {	if (IfValidAnd( RunResultsS[8]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[8]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[8]:StdNatGasCarbon[1]  + RunResultsS[8]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse9[28]"			Proj:ResultSummary[4]:Enduse9[28]	= {	if (IfValidAnd( RunResultsS[9]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsS[9]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsS[9]:StdNatGasCarbon[1]  + RunResultsS[9]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
;	"Set ResultSummary[4]:Enduse12[28]"			Proj:ResultSummary[4]:Enduse12[28]	= {	if (IfValidAnd( RunResultsS[12]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsS[12]:StdOtherCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( ((RunResultsS[12]:StdNatGasCarbon[1] + RunResultsS[12]:StdOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[4]:Enduse13[28]"			Proj:ResultSummary[4]:Enduse13[28]	= {	UNDEFINED  }		; PV
	"Set ResultSummary[4]:Enduse14[28]"			Proj:ResultSummary[4]:Enduse14[28]	= {	UNDEFINED  }      ; Batt
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[4]:Enduse11[28]"			Proj:ResultSummary[4]:Enduse11[28]	=
      {  if (IfValidAnd( RunResultsS[11]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsS[11]:StdOtherCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( ((RunResultsS[1]:StdNatGasCarbon[1] + RunResultsS[1]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[2]:StdNatGasCarbon[1] + RunResultsS[2]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[3]:StdNatGasCarbon[1] + RunResultsS[3]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsS[4]:StdNatGasCarbon[1] + RunResultsS[4]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[5]:StdNatGasCarbon[1] + RunResultsS[5]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse10[28]"			Proj:ResultSummary[4]:Enduse10[28]	=
      {  if (IfValidAnd( RunResultsS[10]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsS[10]:StdOtherCarbon[1] > 0 )==0) then  "0"  
         else  FltToStr( int( ((RunResultsS[1]:StdNatGasCarbon[1] + RunResultsS[1]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[2]:StdNatGasCarbon[1] + RunResultsS[2]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[3]:StdNatGasCarbon[1] + RunResultsS[3]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsS[4]:StdNatGasCarbon[1] + RunResultsS[4]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[5]:StdNatGasCarbon[1] + RunResultsS[5]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[6]:StdNatGasCarbon[1] + RunResultsS[6]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[7]:StdNatGasCarbon[1] + RunResultsS[7]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[8]:StdNatGasCarbon[1] + RunResultsS[8]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsS[9]:StdNatGasCarbon[1] + RunResultsS[9]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Standard Total CO2 Emissions
	"Set ResultSummary[4]:Title1[29]"			Proj:ResultSummary[4]:Title1[29]		= {	"Std Design"  }
	"Set ResultSummary[4]:Title2[29]"			Proj:ResultSummary[4]:Title2[29]		= {	"Total CO2"  }
	"Set ResultSummary[4]:Title3[29]"			Proj:ResultSummary[4]:Title3[29]		= {	Format( "Emis. (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[4]:Enduse1[29]"			Proj:ResultSummary[4]:Enduse1[29]	= {	if (LocalCompAssigned( RunResultsS[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[1]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse2[29]"			Proj:ResultSummary[4]:Enduse2[29]	= {	if (LocalCompAssigned( RunResultsS[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[2]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse3[29]"			Proj:ResultSummary[4]:Enduse3[29]	= {	if (LocalCompAssigned( RunResultsS[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[3]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse4[29]"			Proj:ResultSummary[4]:Enduse4[29]	= {	if (LocalCompAssigned( RunResultsS[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[4]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse5[29]"			Proj:ResultSummary[4]:Enduse5[29]	= {	if (LocalCompAssigned( RunResultsS[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[5]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse6[29]"			Proj:ResultSummary[4]:Enduse6[29]	= {	if (LocalCompAssigned( RunResultsS[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[6]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse7[29]"			Proj:ResultSummary[4]:Enduse7[29]	= {	if (LocalCompAssigned( RunResultsS[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[7]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse8[29]"			Proj:ResultSummary[4]:Enduse8[29]	= {	if (LocalCompAssigned( RunResultsS[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[8]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse9[29]"			Proj:ResultSummary[4]:Enduse9[29]	= {	if (LocalCompAssigned( RunResultsS[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[9]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[4]:Enduse12[29]"			Proj:ResultSummary[4]:Enduse12[29]	= {	if (LocalCompAssigned( RunResultsS[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[12]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[4]:Enduse13[29]"			Proj:ResultSummary[4]:Enduse13[29]	= {	if (LocalCompAssigned( RunResultsS[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[13]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse14[29]"			Proj:ResultSummary[4]:Enduse14[29]	= {	if (LocalCompAssigned( RunResultsS[14] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[14]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse99[29]"			Proj:ResultSummary[4]:Enduse99[29]	= {   "0"  }  
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[4]:Enduse11[29]"			Proj:ResultSummary[4]:Enduse11[29]	=
      {  if (IfValidAnd( RunResultsS[11]:StdTotalCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsS[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsS[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse10[29]"			Proj:ResultSummary[4]:Enduse10[29]	=
      {  if (IfValidAnd( RunResultsS[10]:StdTotalCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsS[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsS[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsS[13]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsS[14]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[6]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[7]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[8]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsS[9]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Std-Prop Margin CO2 Emissions
	"Set ResultSummary[4]:Title1[30]"			Proj:ResultSummary[4]:Title1[30]		= {	"Design Rating"  }
	"Set ResultSummary[4]:Title2[30]"			Proj:ResultSummary[4]:Title2[30]		= {	"CO2 Emissions"  }
	"Set ResultSummary[4]:Title3[30]"			Proj:ResultSummary[4]:Title3[30]		= {	Format( "Margin (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[4]:Enduse1[30]"			Proj:ResultSummary[4]:Enduse1[30]	= {	if (LocalCompAssigned( RunResultsS[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[1]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsS[1]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse2[30]"			Proj:ResultSummary[4]:Enduse2[30]	= {	if (LocalCompAssigned( RunResultsS[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[2]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsS[2]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse3[30]"			Proj:ResultSummary[4]:Enduse3[30]	= {	if (LocalCompAssigned( RunResultsS[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[3]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsS[3]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
;	"Set ResultSummary[4]:Enduse4[30]"			Proj:ResultSummary[4]:Enduse4[30]	= {	if (LocalCompAssigned( RunResultsS[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[4]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsS[4]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse5[30]"			Proj:ResultSummary[4]:Enduse5[30]	= {	if (LocalCompAssigned( RunResultsS[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[5]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsS[5]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse6[30]"			Proj:ResultSummary[4]:Enduse6[30]	= {	if (LocalCompAssigned( RunResultsS[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[6]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsS[6]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse7[30]"			Proj:ResultSummary[4]:Enduse7[30]	= {	if (LocalCompAssigned( RunResultsS[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[7]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsS[7]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse8[30]"			Proj:ResultSummary[4]:Enduse8[30]	= {	if (LocalCompAssigned( RunResultsS[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[8]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsS[8]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse9[30]"			Proj:ResultSummary[4]:Enduse9[30]	= {	if (LocalCompAssigned( RunResultsS[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[9]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsS[9]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[4]:Enduse12[30]"			Proj:ResultSummary[4]:Enduse12[30]	= {	if (LocalCompAssigned( RunResultsS[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[12]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsS[12]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[4]:Enduse13[30]"			Proj:ResultSummary[4]:Enduse13[30]	= {	if (LocalCompAssigned( RunResultsS[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsS[13]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsS[13]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse14[30]"			Proj:ResultSummary[4]:Enduse14[30]	= {	if (IfValidAnd( RunResultsS[14]:PropTotalCarbon[1] != 0 )==0) then  "0"  
                                                                                       else if (IfValidAnd( ResultSummary[4]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( (-RunResultsS[14]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[4]:GHCEnergyEffCO2 >= (-1 * RunResultsS[14]:PropTotalCarbon[1])) then  "0"
	                                                                                    else  FltToStr( (int( ((ResultSummary[4]:GHCEnergyEffCO2 - RunResultsS[14]:PropTotalCarbon[1]) * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[4]:Enduse98[30]"			Proj:ResultSummary[4]:Enduse98[30]	= {   if (IfValidAnd( ResultSummary[4]:PFlxFinalCarbon[2] != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (ResultSummary[4]:PFlxFinalCarbon[2] * -CO2TotalUnitMult / CondFloorArea) + 0.5 )), 0 )  endif  }   ; SAC 11/28/23 (2025)
	"Set ResultSummary[4]:Enduse99[30]"			Proj:ResultSummary[4]:Enduse99[30]	= {   if (IfValidAnd( ResultSummary[4]:GHCEnergyEffCO2 != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (-ResultSummary[4]:GHCEnergyEffCO2 * CO2TotalUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[4]:Enduse11[30]"			Proj:ResultSummary[4]:Enduse11[30]	=
      {  if (LocalCompAssigned( RunResultsS[11] ) == 0) then  UNDEFINED  
         else  FltToStr( ( int( (RunResultsS[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsS[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ) -
                         ( int( (RunResultsS[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsS[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[4]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) ), 0 )  endif  }
	"Set ResultSummary[4]:Enduse10[30]"			Proj:ResultSummary[4]:Enduse10[30]	=
      {  if (LocalCompAssigned( RunResultsS[10] ) == 0) then  "0"  
         else  FltToStr( ( int( (RunResultsS[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsS[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsS[13]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsS[14]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[6]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[7]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[8]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[9]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ) - 
                         ( int( (RunResultsS[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsS[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[4]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsS[13]:PropTotalCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( ((ValidOr( RunResultsS[14]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[4]:GHCEnergyEffCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[4]:PFlxFinalCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                           int( (RunResultsS[6]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[7]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[8]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsS[9]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ), 0 )  endif  }

;-------------
;--- WEST  ---
;-------------
   "Set ResultSummary[5]:CO2FuelUnitLabel"   Proj:ResultSummary[5]:CO2FuelUnitLabel   = {  Proj:CO2FuelUnitLabel   }
   "Set ResultSummary[5]:CO2TotalUnitLabel"  Proj:ResultSummary[5]:CO2TotalUnitLabel  = {  Proj:CO2TotalUnitLabel  }

  ; Proposed Electric CO2 Emissions
	"Set ResultSummary[5]:Title1[23]"			Proj:ResultSummary[5]:Title1[23]		= {	"Prop Design"  }
	"Set ResultSummary[5]:Title2[23]"			Proj:ResultSummary[5]:Title2[23]		= {	"Electric CO2"  }
	"Set ResultSummary[5]:Title3[23]"			Proj:ResultSummary[5]:Title3[23]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[5]:Enduse1[23]"			Proj:ResultSummary[5]:Enduse1[23]	= {	if (IfValidAnd( RunResultsW[1]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[1]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse2[23]"			Proj:ResultSummary[5]:Enduse2[23]	= {	if (IfValidAnd( RunResultsW[2]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[2]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse3[23]"			Proj:ResultSummary[5]:Enduse3[23]	= {	if (IfValidAnd( RunResultsW[3]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[3]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse4[23]"			Proj:ResultSummary[5]:Enduse4[23]	= {	if (IfValidAnd( RunResultsW[4]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[4]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse5[23]"			Proj:ResultSummary[5]:Enduse5[23]	= {	if (IfValidAnd( RunResultsW[5]:PropElecCarbon[1]  > 0 )==0) then 
																														if (Proj:ModelingDHW < 0.5) then  "- none -"  else  UNDEFINED  endif
																													else  FltToStr( (int( (RunResultsW[5]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse6[23]"			Proj:ResultSummary[5]:Enduse6[23]	= {	if (IfValidAnd( RunResultsW[6]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[6]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse7[23]"			Proj:ResultSummary[5]:Enduse7[23]	= {	if (IfValidAnd( RunResultsW[7]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[7]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse8[23]"			Proj:ResultSummary[5]:Enduse8[23]	= {	if (IfValidAnd( RunResultsW[8]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[8]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse9[23]"			Proj:ResultSummary[5]:Enduse9[23]	= {	if (IfValidAnd( RunResultsW[9]:PropElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[9]:PropElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
;	"Set ResultSummary[5]:Enduse12[23]"			Proj:ResultSummary[5]:Enduse12[23]	= {	if (IfValidAnd( RunResultsW[12]:PropElecCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( (int( (RunResultsW[12]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse13[23]"			Proj:ResultSummary[5]:Enduse13[23]	= {	if (IfValidAnd( RunResultsW[13]:PropElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[13]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse14[23]"			Proj:ResultSummary[5]:Enduse14[23]	= {	if (IfValidAnd( RunResultsW[14]:PropElecCarbon[1] != 0 )==0) then  UNDEFINED  
                                                                                       else if (IfValidAnd( ResultSummary[5]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( ( RunResultsW[14]:PropElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[5]:GHCEnergyEffCO2 >= (-1 * RunResultsW[14]:PropElecCarbon[1])) then  UNDEFINED
	                                                                                    else  FltToStr( (int( ((RunResultsW[14]:PropElecCarbon[1] - ResultSummary[5]:GHCEnergyEffCO2) * Proj:CO2FuelUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[5]:Enduse99[23]"			Proj:ResultSummary[5]:Enduse99[23]	= {   if (IfValidAnd( ResultSummary[5]:GHCEnergyEffCO2 != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( (int( (ResultSummary[5]:GHCEnergyEffCO2 * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/3/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[5]:Enduse98[23]"			Proj:ResultSummary[5]:Enduse98[23]	= {   if (IfValidAnd( ResultSummary[5]:PFlxElecCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( (int( (ResultSummary[5]:PFlxElecCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[5]:Enduse11[23]"			Proj:ResultSummary[5]:Enduse11[23]	=
      {  if (IfValidAnd( RunResultsW[11]:PropElecCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsW[1]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[2]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[3]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsW[4]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[5]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[5]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse10[23]"			Proj:ResultSummary[5]:Enduse10[23]	=
      {  if (IfValidAnd( RunResultsW[10]:PropElecCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsW[1]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[2]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[3]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsW[4]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[5]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[5]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsW[13]:PropElecCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsW[14]:PropElecCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[5]:PFlxElecCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( (RunResultsW[6]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[7]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[8]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[9]:PropElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Proposed FUEL CO2 Emissions
	"Set ResultSummary[5]:Title1[24]"			Proj:ResultSummary[5]:Title1[24]		= {	"Prop Design"  }
	"Set ResultSummary[5]:Title2[24]"			Proj:ResultSummary[5]:Title2[24]		= {	"Fuel CO2"  }
	"Set ResultSummary[5]:Title3[24]"			Proj:ResultSummary[5]:Title3[24]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[5]:Enduse1[24]"			Proj:ResultSummary[5]:Enduse1[24]	= {	if (IfValidAnd( RunResultsW[1]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[1]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[1]:PropNatGasCarbon[1]  + RunResultsW[1]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse2[24]"			Proj:ResultSummary[5]:Enduse2[24]	= {	if (IfValidAnd( RunResultsW[2]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[2]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[2]:PropNatGasCarbon[1]  + RunResultsW[2]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse3[24]"			Proj:ResultSummary[5]:Enduse3[24]	= {	if (IfValidAnd( RunResultsW[3]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[3]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[3]:PropNatGasCarbon[1]  + RunResultsW[3]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse4[24]"			Proj:ResultSummary[5]:Enduse4[24]	= {	if (IfValidAnd( RunResultsW[4]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[4]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[4]:PropNatGasCarbon[1]  + RunResultsW[4]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse5[24]"			Proj:ResultSummary[5]:Enduse5[24]	= {	if (IfValidAnd( RunResultsW[5]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[5]:PropOtherCarbon[1]  > 0 )==0) then
																														if (Proj:ModelingDHW < 0.5) then  "- none -"  else  UNDEFINED  endif
																													else  FltToStr( ((RunResultsW[5]:PropNatGasCarbon[1]  + RunResultsW[5]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse6[24]"			Proj:ResultSummary[5]:Enduse6[24]	= {	if (IfValidAnd( RunResultsW[6]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[6]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[6]:PropNatGasCarbon[1]  + RunResultsW[6]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse7[24]"			Proj:ResultSummary[5]:Enduse7[24]	= {	if (IfValidAnd( RunResultsW[7]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[7]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[7]:PropNatGasCarbon[1]  + RunResultsW[7]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse8[24]"			Proj:ResultSummary[5]:Enduse8[24]	= {	if (IfValidAnd( RunResultsW[8]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[8]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[8]:PropNatGasCarbon[1]  + RunResultsW[8]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse9[24]"			Proj:ResultSummary[5]:Enduse9[24]	= {	if (IfValidAnd( RunResultsW[9]:PropNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[9]:PropOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[9]:PropNatGasCarbon[1]  + RunResultsW[9]:PropOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
;	"Set ResultSummary[5]:Enduse12[24]"			Proj:ResultSummary[5]:Enduse12[24]	= {	if (IfValidAnd( RunResultsW[12]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsW[12]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( ((RunResultsW[12]:PropNatGasCarbon[1] + RunResultsW[12]:PropOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse13[24]"			Proj:ResultSummary[5]:Enduse13[24]	= {	UNDEFINED  }		; PV
	"Set ResultSummary[5]:Enduse14[24]"			Proj:ResultSummary[5]:Enduse14[24]	= {	if (IfValidAnd( RunResultsW[14]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsW[14]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[14]:PropNatGasCarbon[1] + RunResultsW[14]:PropOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
      ; SAC 2/4/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[5]:Enduse98[24]"			Proj:ResultSummary[5]:Enduse98[24]	= {   if (IfValidAnd( ResultSummary[5]:PFlxFuelCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( int( (ResultSummary[5]:PFlxFuelCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 ), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[5]:Enduse11[24]"			Proj:ResultSummary[5]:Enduse11[24]	=
      {  if (IfValidAnd( RunResultsW[11]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsW[11]:PropOtherCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( ((RunResultsW[1]:PropNatGasCarbon[1]  + RunResultsW[1]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[2]:PropNatGasCarbon[1]  + RunResultsW[2]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[3]:PropNatGasCarbon[1]  + RunResultsW[3]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsW[4]:PropNatGasCarbon[1]  + RunResultsW[4]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[5]:PropNatGasCarbon[1]  + RunResultsW[5]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse10[24]"			Proj:ResultSummary[5]:Enduse10[24]	=
      {  if (IfValidAnd( RunResultsW[10]:PropNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsW[10]:PropOtherCarbon[1] > 0 )==0) then  "0"  
         else  FltToStr( int( ((RunResultsW[1]:PropNatGasCarbon[1]  + RunResultsW[1]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[2]:PropNatGasCarbon[1]  + RunResultsW[2]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[3]:PropNatGasCarbon[1]  + RunResultsW[3]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsW[4]:PropNatGasCarbon[1]  + RunResultsW[4]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[5]:PropNatGasCarbon[1]  + RunResultsW[5]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[5]:PFlxFuelCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( ((RunResultsW[6]:PropNatGasCarbon[1]  + RunResultsW[6]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[7]:PropNatGasCarbon[1]  + RunResultsW[7]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[8]:PropNatGasCarbon[1]  + RunResultsW[8]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[9]:PropNatGasCarbon[1]  + RunResultsW[9]:PropOtherCarbon[1] ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Proposed Total CO2 Emissions
	"Set ResultSummary[5]:Title1[25]"			Proj:ResultSummary[5]:Title1[25]		= {	"Prop Design"  }
	"Set ResultSummary[5]:Title2[25]"			Proj:ResultSummary[5]:Title2[25]		= {	"Total CO2"  }
	"Set ResultSummary[5]:Title3[25]"			Proj:ResultSummary[5]:Title3[25]		= {	Format( "Emis. (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[5]:Enduse1[25]"			Proj:ResultSummary[5]:Enduse1[25]	= {	if (LocalCompAssigned( RunResultsW[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[1]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse2[25]"			Proj:ResultSummary[5]:Enduse2[25]	= {	if (LocalCompAssigned( RunResultsW[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[2]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse3[25]"			Proj:ResultSummary[5]:Enduse3[25]	= {	if (LocalCompAssigned( RunResultsW[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[3]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse4[25]"			Proj:ResultSummary[5]:Enduse4[25]	= {	if (LocalCompAssigned( RunResultsW[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[4]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse5[25]"			Proj:ResultSummary[5]:Enduse5[25]	= {	if (LocalCompAssigned( RunResultsW[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[5]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse6[25]"			Proj:ResultSummary[5]:Enduse6[25]	= {	if (LocalCompAssigned( RunResultsW[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[6]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse7[25]"			Proj:ResultSummary[5]:Enduse7[25]	= {	if (LocalCompAssigned( RunResultsW[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[7]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse8[25]"			Proj:ResultSummary[5]:Enduse8[25]	= {	if (LocalCompAssigned( RunResultsW[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[8]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse9[25]"			Proj:ResultSummary[5]:Enduse9[25]	= {	if (LocalCompAssigned( RunResultsW[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[9]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[5]:Enduse12[25]"			Proj:ResultSummary[5]:Enduse12[25]	= {	if (LocalCompAssigned( RunResultsW[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[12]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[5]:Enduse13[25]"			Proj:ResultSummary[5]:Enduse13[25]	= {	if (LocalCompAssigned( RunResultsW[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[13]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse14[25]"			Proj:ResultSummary[5]:Enduse14[25]	= {	if (IfValidAnd( RunResultsW[14]:PropTotalCarbon[1] != 0 )==0) then  "0"  
                                                                                       else if (IfValidAnd( ResultSummary[5]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( ( RunResultsW[14]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[5]:GHCEnergyEffCO2 >= (-1 * RunResultsW[14]:PropTotalCarbon[1])) then  "0"
	                                                                                    else  FltToStr( (int( ((RunResultsW[14]:PropTotalCarbon[1] - ResultSummary[5]:GHCEnergyEffCO2) * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[5]:Enduse99[25]"			Proj:ResultSummary[5]:Enduse99[25]	= {   if (IfValidAnd( ResultSummary[5]:GHCEnergyEffCO2 != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (ResultSummary[5]:GHCEnergyEffCO2 * CO2TotalUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - added PropFlex carbon and adjusted Total to include it (tic #1053)
	"Set ResultSummary[5]:Enduse98[25]"			Proj:ResultSummary[5]:Enduse98[25]	= {   if (IfValidAnd( ResultSummary[5]:PFlxFinalCarbon[2] != 0 )==0) then  UNDEFINED  
                                                                                       else  FltToStr( int( (ResultSummary[5]:PFlxFinalCarbon[2] * Proj:CO2FuelUnitMult / CondFloorArea) + 0.5 ), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[5]:Enduse11[25]"			Proj:ResultSummary[5]:Enduse11[25]	=
      {  if (IfValidAnd( RunResultsW[11]:PropTotalCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsW[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsW[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[5]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse10[25]"			Proj:ResultSummary[5]:Enduse10[25]	=
      {  if (IfValidAnd( RunResultsW[10]:PropTotalCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsW[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsW[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[5]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsW[13]:PropTotalCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((ValidOr( RunResultsW[14]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[5]:GHCEnergyEffCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( ResultSummary[5]:PFlxFinalCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                         int( (RunResultsW[6]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[7]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[8]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[9]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }


  ; Standard Electric CO2 Emissions
	"Set ResultSummary[5]:Title1[27]"			Proj:ResultSummary[5]:Title1[27]		= {	"Std Design"  }
	"Set ResultSummary[5]:Title2[27]"			Proj:ResultSummary[5]:Title2[27]		= {	"Electric CO2"  }
	"Set ResultSummary[5]:Title3[27]"			Proj:ResultSummary[5]:Title3[27]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[5]:Enduse1[27]"			Proj:ResultSummary[5]:Enduse1[27]	= {	if (IfValidAnd( RunResultsW[1]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[1]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse2[27]"			Proj:ResultSummary[5]:Enduse2[27]	= {	if (IfValidAnd( RunResultsW[2]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[2]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse3[27]"			Proj:ResultSummary[5]:Enduse3[27]	= {	if (IfValidAnd( RunResultsW[3]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[3]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse4[27]"			Proj:ResultSummary[5]:Enduse4[27]	= {	if (IfValidAnd( RunResultsW[4]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[4]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse5[27]"			Proj:ResultSummary[5]:Enduse5[27]	= {	if (IfValidAnd( RunResultsW[5]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED
																													else  FltToStr( (int( (RunResultsW[5]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse6[27]"			Proj:ResultSummary[5]:Enduse6[27]	= {	if (IfValidAnd( RunResultsW[6]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[6]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse7[27]"			Proj:ResultSummary[5]:Enduse7[27]	= {	if (IfValidAnd( RunResultsW[7]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[7]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse8[27]"			Proj:ResultSummary[5]:Enduse8[27]	= {	if (IfValidAnd( RunResultsW[8]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[8]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse9[27]"			Proj:ResultSummary[5]:Enduse9[27]	= {	if (IfValidAnd( RunResultsW[9]:StdElecCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[9]:StdElecCarbon[1]  * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
;	"Set ResultSummary[5]:Enduse12[27]"			Proj:ResultSummary[5]:Enduse12[27]	= {	if (IfValidAnd( RunResultsW[12]:StdElecCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( (int( (RunResultsW[12]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse13[27]"			Proj:ResultSummary[5]:Enduse13[27]	= {	if (IfValidAnd( RunResultsW[13]:StdElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[13]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
	"Set ResultSummary[5]:Enduse14[27]"			Proj:ResultSummary[5]:Enduse14[27]	= {	if (IfValidAnd( RunResultsW[14]:StdElecCarbon[1] < 0 )==0) then  UNDEFINED  
																													else  FltToStr( (int( (RunResultsW[14]:StdElecCarbon[1] * Proj:CO2FuelUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[5]:Enduse11[27]"			Proj:ResultSummary[5]:Enduse11[27]	=
      {  if (IfValidAnd( RunResultsW[11]:StdElecCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsW[1]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[2]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[3]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsW[4]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[5]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse10[27]"			Proj:ResultSummary[5]:Enduse10[27]	=
      {  if (IfValidAnd( RunResultsW[10]:StdElecCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsW[1]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[2]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[3]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsW[4]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[5]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsW[13]:StdElecCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsW[14]:StdElecCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[6]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[7]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[8]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[9]:StdElecCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Standard FUEL CO2 Emissions
	"Set ResultSummary[5]:Title1[28]"			Proj:ResultSummary[5]:Title1[28]		= {	"Std Design"  }
	"Set ResultSummary[5]:Title2[28]"			Proj:ResultSummary[5]:Title2[28]		= {	"Fuel CO2"  }
	"Set ResultSummary[5]:Title3[28]"			Proj:ResultSummary[5]:Title3[28]		= {	Format( "Emis. (%s)", Proj:CO2FuelUnitLabel )  }
	"Set ResultSummary[5]:Enduse1[28]"			Proj:ResultSummary[5]:Enduse1[28]	= {	if (IfValidAnd( RunResultsW[1]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[1]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[1]:StdNatGasCarbon[1]  + RunResultsW[1]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse2[28]"			Proj:ResultSummary[5]:Enduse2[28]	= {	if (IfValidAnd( RunResultsW[2]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[2]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[2]:StdNatGasCarbon[1]  + RunResultsW[2]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse3[28]"			Proj:ResultSummary[5]:Enduse3[28]	= {	if (IfValidAnd( RunResultsW[3]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[3]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[3]:StdNatGasCarbon[1]  + RunResultsW[3]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse4[28]"			Proj:ResultSummary[5]:Enduse4[28]	= {	if (IfValidAnd( RunResultsW[4]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[4]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[4]:StdNatGasCarbon[1]  + RunResultsW[4]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse5[28]"			Proj:ResultSummary[5]:Enduse5[28]	= {	if (IfValidAnd( RunResultsW[5]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[5]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED
																													else  FltToStr( ((RunResultsW[5]:StdNatGasCarbon[1]  + RunResultsW[5]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse6[28]"			Proj:ResultSummary[5]:Enduse6[28]	= {	if (IfValidAnd( RunResultsW[6]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[6]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[6]:StdNatGasCarbon[1]  + RunResultsW[6]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse7[28]"			Proj:ResultSummary[5]:Enduse7[28]	= {	if (IfValidAnd( RunResultsW[7]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[7]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[7]:StdNatGasCarbon[1]  + RunResultsW[7]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse8[28]"			Proj:ResultSummary[5]:Enduse8[28]	= {	if (IfValidAnd( RunResultsW[8]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[8]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[8]:StdNatGasCarbon[1]  + RunResultsW[8]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse9[28]"			Proj:ResultSummary[5]:Enduse9[28]	= {	if (IfValidAnd( RunResultsW[9]:StdNatGasCarbon[1]  > 0 )==0 .AND. IfValidAnd( RunResultsW[9]:StdOtherCarbon[1]  > 0 )==0) then  UNDEFINED  
																													else  FltToStr( ((RunResultsW[9]:StdNatGasCarbon[1]  + RunResultsW[9]:StdOtherCarbon[1] ) * Proj:CO2FuelUnitMult), 0 )  endif  }
;	"Set ResultSummary[5]:Enduse12[28]"			Proj:ResultSummary[5]:Enduse12[28]	= {	if (IfValidAnd( RunResultsW[12]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsW[12]:StdOtherCarbon[1] > 0 )==0) then  UNDEFINED  
;																													else  FltToStr( ((RunResultsW[12]:StdNatGasCarbon[1] + RunResultsW[12]:StdOtherCarbon[1]) * Proj:CO2FuelUnitMult), 0 )  endif  }
	"Set ResultSummary[5]:Enduse13[28]"			Proj:ResultSummary[5]:Enduse13[28]	= {	UNDEFINED  }		; PV
	"Set ResultSummary[5]:Enduse14[28]"			Proj:ResultSummary[5]:Enduse14[28]	= {	UNDEFINED  }      ; Batt
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[5]:Enduse11[28]"			Proj:ResultSummary[5]:Enduse11[28]	=
      {  if (IfValidAnd( RunResultsW[11]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsW[11]:StdOtherCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( ((RunResultsW[1]:StdNatGasCarbon[1] + RunResultsW[1]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[2]:StdNatGasCarbon[1] + RunResultsW[2]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[3]:StdNatGasCarbon[1] + RunResultsW[3]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsW[4]:StdNatGasCarbon[1] + RunResultsW[4]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[5]:StdNatGasCarbon[1] + RunResultsW[5]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse10[28]"			Proj:ResultSummary[5]:Enduse10[28]	=
      {  if (IfValidAnd( RunResultsW[10]:StdNatGasCarbon[1] > 0 )==0 .AND. IfValidAnd( RunResultsW[10]:StdOtherCarbon[1] > 0 )==0) then  "0"  
         else  FltToStr( int( ((RunResultsW[1]:StdNatGasCarbon[1] + RunResultsW[1]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[2]:StdNatGasCarbon[1] + RunResultsW[2]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[3]:StdNatGasCarbon[1] + RunResultsW[3]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                        ; int( ((RunResultsW[4]:StdNatGasCarbon[1] + RunResultsW[4]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[5]:StdNatGasCarbon[1] + RunResultsW[5]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[6]:StdNatGasCarbon[1] + RunResultsW[6]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[7]:StdNatGasCarbon[1] + RunResultsW[7]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[8]:StdNatGasCarbon[1] + RunResultsW[8]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ) +
                         int( ((RunResultsW[9]:StdNatGasCarbon[1] + RunResultsW[9]:StdOtherCarbon[1]) * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Standard Total CO2 Emissions
	"Set ResultSummary[5]:Title1[29]"			Proj:ResultSummary[5]:Title1[29]		= {	"Std Design"  }
	"Set ResultSummary[5]:Title2[29]"			Proj:ResultSummary[5]:Title2[29]		= {	"Total CO2"  }
	"Set ResultSummary[5]:Title3[29]"			Proj:ResultSummary[5]:Title3[29]		= {	Format( "Emis. (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[5]:Enduse1[29]"			Proj:ResultSummary[5]:Enduse1[29]	= {	if (LocalCompAssigned( RunResultsW[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[1]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse2[29]"			Proj:ResultSummary[5]:Enduse2[29]	= {	if (LocalCompAssigned( RunResultsW[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[2]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse3[29]"			Proj:ResultSummary[5]:Enduse3[29]	= {	if (LocalCompAssigned( RunResultsW[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[3]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse4[29]"			Proj:ResultSummary[5]:Enduse4[29]	= {	if (LocalCompAssigned( RunResultsW[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[4]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse5[29]"			Proj:ResultSummary[5]:Enduse5[29]	= {	if (LocalCompAssigned( RunResultsW[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[5]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse6[29]"			Proj:ResultSummary[5]:Enduse6[29]	= {	if (LocalCompAssigned( RunResultsW[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[6]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse7[29]"			Proj:ResultSummary[5]:Enduse7[29]	= {	if (LocalCompAssigned( RunResultsW[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[7]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse8[29]"			Proj:ResultSummary[5]:Enduse8[29]	= {	if (LocalCompAssigned( RunResultsW[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[8]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse9[29]"			Proj:ResultSummary[5]:Enduse9[29]	= {	if (LocalCompAssigned( RunResultsW[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[9]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
; 	"Set ResultSummary[5]:Enduse12[29]"			Proj:ResultSummary[5]:Enduse12[29]	= {	if (LocalCompAssigned( RunResultsW[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[12]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[5]:Enduse13[29]"			Proj:ResultSummary[5]:Enduse13[29]	= {	if (LocalCompAssigned( RunResultsW[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[13]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse14[29]"			Proj:ResultSummary[5]:Enduse14[29]	= {	if (LocalCompAssigned( RunResultsW[14] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[14]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse99[29]"			Proj:ResultSummary[5]:Enduse99[29]	= {   "0"  }  
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[5]:Enduse11[29]"			Proj:ResultSummary[5]:Enduse11[29]	=
      {  if (IfValidAnd( RunResultsW[11]:StdTotalCarbon[1] > 0 )==0) then  UNDEFINED  
         else  FltToStr( int( (RunResultsW[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsW[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse10[29]"			Proj:ResultSummary[5]:Enduse10[29]	=
      {  if (IfValidAnd( RunResultsW[10]:StdTotalCarbon[1] != 0 )==0) then  "0"  
         else  FltToStr( int( (RunResultsW[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                        ; int( (RunResultsW[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsW[13]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (ValidOr( RunResultsW[14]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[6]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[7]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[8]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                         int( (RunResultsW[9]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ), 0 )  endif  }

  ; Std-Prop Margin CO2 Emissions
	"Set ResultSummary[5]:Title1[30]"			Proj:ResultSummary[5]:Title1[30]		= {	"Design Rating"  }
	"Set ResultSummary[5]:Title2[30]"			Proj:ResultSummary[5]:Title2[30]		= {	"CO2 Emissions"  }
	"Set ResultSummary[5]:Title3[30]"			Proj:ResultSummary[5]:Title3[30]		= {	Format( "Margin (%s)", Proj:CO2TotalUnitLabel )  }
	"Set ResultSummary[5]:Enduse1[30]"			Proj:ResultSummary[5]:Enduse1[30]	= {	if (LocalCompAssigned( RunResultsW[1]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[1]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsW[1]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse2[30]"			Proj:ResultSummary[5]:Enduse2[30]	= {	if (LocalCompAssigned( RunResultsW[2]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[2]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsW[2]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse3[30]"			Proj:ResultSummary[5]:Enduse3[30]	= {	if (LocalCompAssigned( RunResultsW[3]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[3]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsW[3]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
;	"Set ResultSummary[5]:Enduse4[30]"			Proj:ResultSummary[5]:Enduse4[30]	= {	if (LocalCompAssigned( RunResultsW[4]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[4]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsW[4]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse5[30]"			Proj:ResultSummary[5]:Enduse5[30]	= {	if (LocalCompAssigned( RunResultsW[5]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[5]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsW[5]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse6[30]"			Proj:ResultSummary[5]:Enduse6[30]	= {	if (LocalCompAssigned( RunResultsW[6]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[6]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsW[6]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse7[30]"			Proj:ResultSummary[5]:Enduse7[30]	= {	if (LocalCompAssigned( RunResultsW[7]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[7]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsW[7]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse8[30]"			Proj:ResultSummary[5]:Enduse8[30]	= {	if (LocalCompAssigned( RunResultsW[8]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[8]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsW[8]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse9[30]"			Proj:ResultSummary[5]:Enduse9[30]	= {	if (LocalCompAssigned( RunResultsW[9]  ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[9]:StdTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsW[9]:PropTotalCarbon[1]  * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[5]:Enduse12[30]"			Proj:ResultSummary[5]:Enduse12[30]	= {	if (LocalCompAssigned( RunResultsW[12] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[12]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsW[12]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
 	"Set ResultSummary[5]:Enduse13[30]"			Proj:ResultSummary[5]:Enduse13[30]	= {	if (LocalCompAssigned( RunResultsW[13] ) == 0) then  UNDEFINED  else  FltToStr( int( (RunResultsW[13]:StdTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ) - int( (RunResultsW[13]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse14[30]"			Proj:ResultSummary[5]:Enduse14[30]	= {	if (IfValidAnd( RunResultsW[14]:PropTotalCarbon[1] != 0 )==0) then  "0"  
                                                                                       else if (IfValidAnd( ResultSummary[5]:GHCEnergyEffCO2 != 0 )==0)
																													then  FltToStr( (int( (-RunResultsW[14]:PropTotalCarbon[1] * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    else if (ResultSummary[5]:GHCEnergyEffCO2 >= (-1 * RunResultsW[14]:PropTotalCarbon[1])) then  "0"
	                                                                                    else  FltToStr( (int( ((ResultSummary[5]:GHCEnergyEffCO2 - RunResultsW[14]:PropTotalCarbon[1]) * CO2TotalUnitMult) + 0.5 )), 0 )
	                                                                                    endif endif endif  }
	"Set ResultSummary[5]:Enduse98[30]"			Proj:ResultSummary[5]:Enduse98[30]	= {   if (IfValidAnd( ResultSummary[5]:PFlxFinalCarbon[2] != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (ResultSummary[5]:PFlxFinalCarbon[2] * -CO2TotalUnitMult / CondFloorArea) + 0.5 )), 0 )  endif  }   ; SAC 11/28/23 (2025)
	"Set ResultSummary[5]:Enduse99[30]"			Proj:ResultSummary[5]:Enduse99[30]	= {   if (IfValidAnd( ResultSummary[5]:GHCEnergyEffCO2 != 0 )==0) then  "0"  
                                                                                       else  FltToStr( (int( (-ResultSummary[5]:GHCEnergyEffCO2 * CO2TotalUnitMult) + 0.5 )), 0 )  endif  }
      ; SAC 2/4/19 - revised sums to be individually averaged by line item (tic #1053)
	"Set ResultSummary[5]:Enduse11[30]"			Proj:ResultSummary[5]:Enduse11[30]	=
      {  if (LocalCompAssigned( RunResultsW[11] ) == 0) then  UNDEFINED  
         else  FltToStr( ( int( (RunResultsW[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsW[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ) -
                         ( int( (RunResultsW[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsW[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[5]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) ), 0 )  endif  }
	"Set ResultSummary[5]:Enduse10[30]"			Proj:ResultSummary[5]:Enduse10[30]	=
      {  if (LocalCompAssigned( RunResultsW[10] ) == 0) then  "0"  
         else  FltToStr( ( int( (RunResultsW[1]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[2]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[3]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsW[4]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[5]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsW[13]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsW[14]:StdTotalCarbon[1], 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[6]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[7]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[8]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[9]:StdTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ) - 
                         ( int( (RunResultsW[1]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[2]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[3]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                          ; int( (RunResultsW[4]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[5]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[5]:GHCEnergyEffCO2, 0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( RunResultsW[13]:PropTotalCarbon[1],   0 ) * CO2FuelUnitMult) + 0.5 ) +
                           int( ((ValidOr( RunResultsW[14]:PropTotalCarbon[1], 0 ) - ValidOr( ResultSummary[5]:GHCEnergyEffCO2, 0 )) * CO2FuelUnitMult) + 0.5 ) +
                           int( (ValidOr( ResultSummary[5]:PFlxFinalCarbon[2], 0 ) * CO2FuelUnitMult / CondFloorArea) + 0.5 ) +
                           int( (RunResultsW[6]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[7]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[8]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) +
                           int( (RunResultsW[9]:PropTotalCarbon[1] * CO2FuelUnitMult) + 0.5 ) ), 0 )  endif  }
END
;*************************************************************************




;*************************************************************************   - SAC 2/4/19
RULELIST "CARes_RunResults_SetWorstCarbon_N" 1 0 1 1
;*************************************************************************
   "Set ResultSummary[1]:CO2FuelUnitLabel"   Proj:ResultSummary[1]:CO2FuelUnitLabel   = {  if (LocalStatus( ResultSummary[2]:CO2FuelUnitLabel  ) > 0) then  ResultSummary[2]:CO2FuelUnitLabel   else  UNDEFINED  endif  }
   "Set ResultSummary[1]:CO2TotalUnitLabel"  Proj:ResultSummary[1]:CO2TotalUnitLabel  = {  if (LocalStatus( ResultSummary[2]:CO2TotalUnitLabel ) > 0) then  ResultSummary[2]:CO2TotalUnitLabel  else  UNDEFINED  endif  }
  ; Proposed Electric CO2 Emissions
	"Set ResultSummary[1]:Title1[23]"			Proj:ResultSummary[1]:Title1[23]		= {  if (LocalStatus( ResultSummary[2]:Title1[23]		 ) > 0) then  ResultSummary[2]:Title1[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[23]"			Proj:ResultSummary[1]:Title2[23]		= {  if (LocalStatus( ResultSummary[2]:Title2[23]		 ) > 0) then  ResultSummary[2]:Title2[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[23]"			Proj:ResultSummary[1]:Title3[23]		= {  if (LocalStatus( ResultSummary[2]:Title3[23]		 ) > 0) then  ResultSummary[2]:Title3[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[23]"			Proj:ResultSummary[1]:Enduse1[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse1[23]	   ) > 0) then  ResultSummary[2]:Enduse1[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[23]"			Proj:ResultSummary[1]:Enduse2[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse2[23]	   ) > 0) then  ResultSummary[2]:Enduse2[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[23]"			Proj:ResultSummary[1]:Enduse3[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse3[23]	   ) > 0) then  ResultSummary[2]:Enduse3[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[23]"			Proj:ResultSummary[1]:Enduse4[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse4[23]	   ) > 0) then  ResultSummary[2]:Enduse4[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[23]"			Proj:ResultSummary[1]:Enduse5[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse5[23]	   ) > 0) then  ResultSummary[2]:Enduse5[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[23]"			Proj:ResultSummary[1]:Enduse6[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse6[23]	   ) > 0) then  ResultSummary[2]:Enduse6[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[23]"			Proj:ResultSummary[1]:Enduse7[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse7[23]	   ) > 0) then  ResultSummary[2]:Enduse7[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[23]"			Proj:ResultSummary[1]:Enduse8[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse8[23]	   ) > 0) then  ResultSummary[2]:Enduse8[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[23]"			Proj:ResultSummary[1]:Enduse9[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse9[23]	   ) > 0) then  ResultSummary[2]:Enduse9[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[23]"			Proj:ResultSummary[1]:Enduse13[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse13[23]	 ) > 0) then  ResultSummary[2]:Enduse13[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[23]"			Proj:ResultSummary[1]:Enduse14[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse14[23]	 ) > 0) then  ResultSummary[2]:Enduse14[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[23]"			Proj:ResultSummary[1]:Enduse99[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse99[23]	 ) > 0) then  ResultSummary[2]:Enduse99[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[23]"			Proj:ResultSummary[1]:Enduse98[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse98[23]	 ) > 0) then  ResultSummary[2]:Enduse98[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[23]"			Proj:ResultSummary[1]:Enduse11[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse11[23]	 ) > 0) then  ResultSummary[2]:Enduse11[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[23]"			Proj:ResultSummary[1]:Enduse10[23]	= {  if (LocalStatus( ResultSummary[2]:Enduse10[23]	 ) > 0) then  ResultSummary[2]:Enduse10[23]	   else  UNDEFINED  endif  }
  ; Proposed FUEL CO2 Emissions
	"Set ResultSummary[1]:Title1[24]"			Proj:ResultSummary[1]:Title1[24]		= {  if (LocalStatus( ResultSummary[2]:Title1[24]		 ) > 0) then  ResultSummary[2]:Title1[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[24]"			Proj:ResultSummary[1]:Title2[24]		= {  if (LocalStatus( ResultSummary[2]:Title2[24]		 ) > 0) then  ResultSummary[2]:Title2[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[24]"			Proj:ResultSummary[1]:Title3[24]		= {  if (LocalStatus( ResultSummary[2]:Title3[24]		 ) > 0) then  ResultSummary[2]:Title3[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[24]"			Proj:ResultSummary[1]:Enduse1[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse1[24]	   ) > 0) then  ResultSummary[2]:Enduse1[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[24]"			Proj:ResultSummary[1]:Enduse2[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse2[24]	   ) > 0) then  ResultSummary[2]:Enduse2[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[24]"			Proj:ResultSummary[1]:Enduse3[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse3[24]	   ) > 0) then  ResultSummary[2]:Enduse3[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[24]"			Proj:ResultSummary[1]:Enduse4[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse4[24]	   ) > 0) then  ResultSummary[2]:Enduse4[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[24]"			Proj:ResultSummary[1]:Enduse5[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse5[24]	   ) > 0) then  ResultSummary[2]:Enduse5[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[24]"			Proj:ResultSummary[1]:Enduse6[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse6[24]	   ) > 0) then  ResultSummary[2]:Enduse6[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[24]"			Proj:ResultSummary[1]:Enduse7[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse7[24]	   ) > 0) then  ResultSummary[2]:Enduse7[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[24]"			Proj:ResultSummary[1]:Enduse8[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse8[24]	   ) > 0) then  ResultSummary[2]:Enduse8[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[24]"			Proj:ResultSummary[1]:Enduse9[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse9[24]	   ) > 0) then  ResultSummary[2]:Enduse9[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[24]"			Proj:ResultSummary[1]:Enduse13[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse13[24]	 ) > 0) then  ResultSummary[2]:Enduse13[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[24]"			Proj:ResultSummary[1]:Enduse14[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse14[24]	 ) > 0) then  ResultSummary[2]:Enduse14[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[24]"			Proj:ResultSummary[1]:Enduse98[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse98[24]	 ) > 0) then  ResultSummary[2]:Enduse98[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[24]"			Proj:ResultSummary[1]:Enduse11[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse11[24]	 ) > 0) then  ResultSummary[2]:Enduse11[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[24]"			Proj:ResultSummary[1]:Enduse10[24]	= {  if (LocalStatus( ResultSummary[2]:Enduse10[24]	 ) > 0) then  ResultSummary[2]:Enduse10[24]	   else  UNDEFINED  endif  }
  ; Proposed Total CO2 Emissions
	"Set ResultSummary[1]:Title1[25]"			Proj:ResultSummary[1]:Title1[25]		= {  if (LocalStatus( ResultSummary[2]:Title1[25]		 ) > 0) then  ResultSummary[2]:Title1[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[25]"			Proj:ResultSummary[1]:Title2[25]		= {  if (LocalStatus( ResultSummary[2]:Title2[25]		 ) > 0) then  ResultSummary[2]:Title2[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[25]"			Proj:ResultSummary[1]:Title3[25]		= {  if (LocalStatus( ResultSummary[2]:Title3[25]		 ) > 0) then  ResultSummary[2]:Title3[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[25]"			Proj:ResultSummary[1]:Enduse1[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse1[25]	   ) > 0) then  ResultSummary[2]:Enduse1[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[25]"			Proj:ResultSummary[1]:Enduse2[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse2[25]	   ) > 0) then  ResultSummary[2]:Enduse2[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[25]"			Proj:ResultSummary[1]:Enduse3[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse3[25]	   ) > 0) then  ResultSummary[2]:Enduse3[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[25]"			Proj:ResultSummary[1]:Enduse4[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse4[25]	   ) > 0) then  ResultSummary[2]:Enduse4[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[25]"			Proj:ResultSummary[1]:Enduse5[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse5[25]	   ) > 0) then  ResultSummary[2]:Enduse5[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[25]"			Proj:ResultSummary[1]:Enduse6[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse6[25]	   ) > 0) then  ResultSummary[2]:Enduse6[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[25]"			Proj:ResultSummary[1]:Enduse7[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse7[25]	   ) > 0) then  ResultSummary[2]:Enduse7[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[25]"			Proj:ResultSummary[1]:Enduse8[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse8[25]	   ) > 0) then  ResultSummary[2]:Enduse8[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[25]"			Proj:ResultSummary[1]:Enduse9[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse9[25]	   ) > 0) then  ResultSummary[2]:Enduse9[25]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[25]"			Proj:ResultSummary[1]:Enduse13[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse13[25]	 ) > 0) then  ResultSummary[2]:Enduse13[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[25]"			Proj:ResultSummary[1]:Enduse14[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse14[25]	 ) > 0) then  ResultSummary[2]:Enduse14[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[25]"			Proj:ResultSummary[1]:Enduse99[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse99[25]	 ) > 0) then  ResultSummary[2]:Enduse99[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[25]"			Proj:ResultSummary[1]:Enduse98[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse98[25]	 ) > 0) then  ResultSummary[2]:Enduse98[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[25]"			Proj:ResultSummary[1]:Enduse11[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse11[25]	 ) > 0) then  ResultSummary[2]:Enduse11[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[25]"			Proj:ResultSummary[1]:Enduse10[25]	= {  if (LocalStatus( ResultSummary[2]:Enduse10[25]	 ) > 0) then  ResultSummary[2]:Enduse10[25]	   else  UNDEFINED  endif  }
  ; Standard Electric CO2 Emissions
	"Set ResultSummary[1]:Title1[27]"			Proj:ResultSummary[1]:Title1[27]		= {  if (LocalStatus( ResultSummary[2]:Title1[27]		 ) > 0) then  ResultSummary[2]:Title1[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[27]"			Proj:ResultSummary[1]:Title2[27]		= {  if (LocalStatus( ResultSummary[2]:Title2[27]		 ) > 0) then  ResultSummary[2]:Title2[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[27]"			Proj:ResultSummary[1]:Title3[27]		= {  if (LocalStatus( ResultSummary[2]:Title3[27]		 ) > 0) then  ResultSummary[2]:Title3[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[27]"			Proj:ResultSummary[1]:Enduse1[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse1[27]	   ) > 0) then  ResultSummary[2]:Enduse1[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[27]"			Proj:ResultSummary[1]:Enduse2[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse2[27]	   ) > 0) then  ResultSummary[2]:Enduse2[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[27]"			Proj:ResultSummary[1]:Enduse3[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse3[27]	   ) > 0) then  ResultSummary[2]:Enduse3[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[27]"			Proj:ResultSummary[1]:Enduse4[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse4[27]	   ) > 0) then  ResultSummary[2]:Enduse4[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[27]"			Proj:ResultSummary[1]:Enduse5[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse5[27]	   ) > 0) then  ResultSummary[2]:Enduse5[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[27]"			Proj:ResultSummary[1]:Enduse6[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse6[27]	   ) > 0) then  ResultSummary[2]:Enduse6[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[27]"			Proj:ResultSummary[1]:Enduse7[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse7[27]	   ) > 0) then  ResultSummary[2]:Enduse7[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[27]"			Proj:ResultSummary[1]:Enduse8[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse8[27]	   ) > 0) then  ResultSummary[2]:Enduse8[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[27]"			Proj:ResultSummary[1]:Enduse9[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse9[27]	   ) > 0) then  ResultSummary[2]:Enduse9[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[27]"			Proj:ResultSummary[1]:Enduse13[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse13[27]	 ) > 0) then  ResultSummary[2]:Enduse13[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[27]"			Proj:ResultSummary[1]:Enduse14[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse14[27]	 ) > 0) then  ResultSummary[2]:Enduse14[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[27]"			Proj:ResultSummary[1]:Enduse11[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse11[27]	 ) > 0) then  ResultSummary[2]:Enduse11[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[27]"			Proj:ResultSummary[1]:Enduse10[27]	= {  if (LocalStatus( ResultSummary[2]:Enduse10[27]	 ) > 0) then  ResultSummary[2]:Enduse10[27]	   else  UNDEFINED  endif  }
  ; Standard FUEL CO2 Emissions
	"Set ResultSummary[1]:Title1[28]"			Proj:ResultSummary[1]:Title1[28]		= {  if (LocalStatus( ResultSummary[2]:Title1[28]		 ) > 0) then  ResultSummary[2]:Title1[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[28]"			Proj:ResultSummary[1]:Title2[28]		= {  if (LocalStatus( ResultSummary[2]:Title2[28]		 ) > 0) then  ResultSummary[2]:Title2[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[28]"			Proj:ResultSummary[1]:Title3[28]		= {  if (LocalStatus( ResultSummary[2]:Title3[28]		 ) > 0) then  ResultSummary[2]:Title3[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[28]"			Proj:ResultSummary[1]:Enduse1[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse1[28]	   ) > 0) then  ResultSummary[2]:Enduse1[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[28]"			Proj:ResultSummary[1]:Enduse2[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse2[28]	   ) > 0) then  ResultSummary[2]:Enduse2[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[28]"			Proj:ResultSummary[1]:Enduse3[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse3[28]	   ) > 0) then  ResultSummary[2]:Enduse3[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[28]"			Proj:ResultSummary[1]:Enduse4[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse4[28]	   ) > 0) then  ResultSummary[2]:Enduse4[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[28]"			Proj:ResultSummary[1]:Enduse5[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse5[28]	   ) > 0) then  ResultSummary[2]:Enduse5[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[28]"			Proj:ResultSummary[1]:Enduse6[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse6[28]	   ) > 0) then  ResultSummary[2]:Enduse6[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[28]"			Proj:ResultSummary[1]:Enduse7[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse7[28]	   ) > 0) then  ResultSummary[2]:Enduse7[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[28]"			Proj:ResultSummary[1]:Enduse8[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse8[28]	   ) > 0) then  ResultSummary[2]:Enduse8[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[28]"			Proj:ResultSummary[1]:Enduse9[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse9[28]	   ) > 0) then  ResultSummary[2]:Enduse9[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[28]"			Proj:ResultSummary[1]:Enduse13[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse13[28]	 ) > 0) then  ResultSummary[2]:Enduse13[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[28]"			Proj:ResultSummary[1]:Enduse14[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse14[28]	 ) > 0) then  ResultSummary[2]:Enduse14[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[28]"			Proj:ResultSummary[1]:Enduse11[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse11[28]	 ) > 0) then  ResultSummary[2]:Enduse11[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[28]"			Proj:ResultSummary[1]:Enduse10[28]	= {  if (LocalStatus( ResultSummary[2]:Enduse10[28]	 ) > 0) then  ResultSummary[2]:Enduse10[28]	   else  UNDEFINED  endif  }
  ; Standard Total CO2 Emissions
	"Set ResultSummary[1]:Title1[29]"			Proj:ResultSummary[1]:Title1[29]		= {  if (LocalStatus( ResultSummary[2]:Title1[29]		 ) > 0) then  ResultSummary[2]:Title1[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[29]"			Proj:ResultSummary[1]:Title2[29]		= {  if (LocalStatus( ResultSummary[2]:Title2[29]		 ) > 0) then  ResultSummary[2]:Title2[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[29]"			Proj:ResultSummary[1]:Title3[29]		= {  if (LocalStatus( ResultSummary[2]:Title3[29]		 ) > 0) then  ResultSummary[2]:Title3[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[29]"			Proj:ResultSummary[1]:Enduse1[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse1[29]	   ) > 0) then  ResultSummary[2]:Enduse1[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[29]"			Proj:ResultSummary[1]:Enduse2[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse2[29]	   ) > 0) then  ResultSummary[2]:Enduse2[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[29]"			Proj:ResultSummary[1]:Enduse3[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse3[29]	   ) > 0) then  ResultSummary[2]:Enduse3[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[29]"			Proj:ResultSummary[1]:Enduse4[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse4[29]	   ) > 0) then  ResultSummary[2]:Enduse4[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[29]"			Proj:ResultSummary[1]:Enduse5[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse5[29]	   ) > 0) then  ResultSummary[2]:Enduse5[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[29]"			Proj:ResultSummary[1]:Enduse6[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse6[29]	   ) > 0) then  ResultSummary[2]:Enduse6[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[29]"			Proj:ResultSummary[1]:Enduse7[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse7[29]	   ) > 0) then  ResultSummary[2]:Enduse7[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[29]"			Proj:ResultSummary[1]:Enduse8[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse8[29]	   ) > 0) then  ResultSummary[2]:Enduse8[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[29]"			Proj:ResultSummary[1]:Enduse9[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse9[29]	   ) > 0) then  ResultSummary[2]:Enduse9[29]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse12[29]"			Proj:ResultSummary[1]:Enduse12[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse12[29]	 ) > 0) then  ResultSummary[2]:Enduse12[29]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[29]"			Proj:ResultSummary[1]:Enduse13[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse13[29]	 ) > 0) then  ResultSummary[2]:Enduse13[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[29]"			Proj:ResultSummary[1]:Enduse14[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse14[29]	 ) > 0) then  ResultSummary[2]:Enduse14[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[29]"			Proj:ResultSummary[1]:Enduse99[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse99[29]	 ) > 0) then  ResultSummary[2]:Enduse99[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[29]"			Proj:ResultSummary[1]:Enduse11[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse11[29]	 ) > 0) then  ResultSummary[2]:Enduse11[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[29]"			Proj:ResultSummary[1]:Enduse10[29]	= {  if (LocalStatus( ResultSummary[2]:Enduse10[29]	 ) > 0) then  ResultSummary[2]:Enduse10[29]	   else  UNDEFINED  endif  }
  ; Std-Prop Margin CO2 Emissions
	"Set ResultSummary[1]:Title1[30]"			Proj:ResultSummary[1]:Title1[30]		= {  if (LocalStatus( ResultSummary[2]:Title1[30]		 ) > 0) then  ResultSummary[2]:Title1[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[30]"			Proj:ResultSummary[1]:Title2[30]		= {  if (LocalStatus( ResultSummary[2]:Title2[30]		 ) > 0) then  ResultSummary[2]:Title2[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[30]"			Proj:ResultSummary[1]:Title3[30]		= {  if (LocalStatus( ResultSummary[2]:Title3[30]		 ) > 0) then  ResultSummary[2]:Title3[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[30]"			Proj:ResultSummary[1]:Enduse1[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse1[30]	   ) > 0) then  ResultSummary[2]:Enduse1[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[30]"			Proj:ResultSummary[1]:Enduse2[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse2[30]	   ) > 0) then  ResultSummary[2]:Enduse2[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[30]"			Proj:ResultSummary[1]:Enduse3[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse3[30]	   ) > 0) then  ResultSummary[2]:Enduse3[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[30]"			Proj:ResultSummary[1]:Enduse4[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse4[30]	   ) > 0) then  ResultSummary[2]:Enduse4[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[30]"			Proj:ResultSummary[1]:Enduse5[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse5[30]	   ) > 0) then  ResultSummary[2]:Enduse5[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[30]"			Proj:ResultSummary[1]:Enduse6[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse6[30]	   ) > 0) then  ResultSummary[2]:Enduse6[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[30]"			Proj:ResultSummary[1]:Enduse7[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse7[30]	   ) > 0) then  ResultSummary[2]:Enduse7[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[30]"			Proj:ResultSummary[1]:Enduse8[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse8[30]	   ) > 0) then  ResultSummary[2]:Enduse8[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[30]"			Proj:ResultSummary[1]:Enduse9[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse9[30]	   ) > 0) then  ResultSummary[2]:Enduse9[30]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse12[30]"			Proj:ResultSummary[1]:Enduse12[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse12[30]	 ) > 0) then  ResultSummary[2]:Enduse12[30]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[30]"			Proj:ResultSummary[1]:Enduse13[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse13[30]	 ) > 0) then  ResultSummary[2]:Enduse13[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[30]"			Proj:ResultSummary[1]:Enduse14[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse14[30]	 ) > 0) then  ResultSummary[2]:Enduse14[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[30]"			Proj:ResultSummary[1]:Enduse99[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse99[30]	 ) > 0) then  ResultSummary[2]:Enduse99[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[30]"			Proj:ResultSummary[1]:Enduse11[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse11[30]	 ) > 0) then  ResultSummary[2]:Enduse11[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[30]"			Proj:ResultSummary[1]:Enduse10[30]	= {  if (LocalStatus( ResultSummary[2]:Enduse10[30]	 ) > 0) then  ResultSummary[2]:Enduse10[30]	   else  UNDEFINED  endif  }
END
;*************************************************************************   - SAC 2/4/19
RULELIST "CARes_RunResults_SetWorstCarbon_E" 1 0 1 1
;*************************************************************************
   "Set ResultSummary[1]:CO2FuelUnitLabel"   Proj:ResultSummary[1]:CO2FuelUnitLabel   = {  if (LocalStatus( ResultSummary[3]:CO2FuelUnitLabel  ) > 0) then  ResultSummary[3]:CO2FuelUnitLabel   else  UNDEFINED  endif  }
   "Set ResultSummary[1]:CO2TotalUnitLabel"  Proj:ResultSummary[1]:CO2TotalUnitLabel  = {  if (LocalStatus( ResultSummary[3]:CO2TotalUnitLabel ) > 0) then  ResultSummary[3]:CO2TotalUnitLabel  else  UNDEFINED  endif  }
  ; Proposed Electric CO2 Emissions
	"Set ResultSummary[1]:Title1[23]"			Proj:ResultSummary[1]:Title1[23]		= {  if (LocalStatus( ResultSummary[3]:Title1[23]		 ) > 0) then  ResultSummary[3]:Title1[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[23]"			Proj:ResultSummary[1]:Title2[23]		= {  if (LocalStatus( ResultSummary[3]:Title2[23]		 ) > 0) then  ResultSummary[3]:Title2[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[23]"			Proj:ResultSummary[1]:Title3[23]		= {  if (LocalStatus( ResultSummary[3]:Title3[23]		 ) > 0) then  ResultSummary[3]:Title3[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[23]"			Proj:ResultSummary[1]:Enduse1[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse1[23]	   ) > 0) then  ResultSummary[3]:Enduse1[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[23]"			Proj:ResultSummary[1]:Enduse2[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse2[23]	   ) > 0) then  ResultSummary[3]:Enduse2[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[23]"			Proj:ResultSummary[1]:Enduse3[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse3[23]	   ) > 0) then  ResultSummary[3]:Enduse3[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[23]"			Proj:ResultSummary[1]:Enduse4[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse4[23]	   ) > 0) then  ResultSummary[3]:Enduse4[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[23]"			Proj:ResultSummary[1]:Enduse5[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse5[23]	   ) > 0) then  ResultSummary[3]:Enduse5[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[23]"			Proj:ResultSummary[1]:Enduse6[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse6[23]	   ) > 0) then  ResultSummary[3]:Enduse6[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[23]"			Proj:ResultSummary[1]:Enduse7[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse7[23]	   ) > 0) then  ResultSummary[3]:Enduse7[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[23]"			Proj:ResultSummary[1]:Enduse8[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse8[23]	   ) > 0) then  ResultSummary[3]:Enduse8[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[23]"			Proj:ResultSummary[1]:Enduse9[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse9[23]	   ) > 0) then  ResultSummary[3]:Enduse9[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[23]"			Proj:ResultSummary[1]:Enduse13[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse13[23]	 ) > 0) then  ResultSummary[3]:Enduse13[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[23]"			Proj:ResultSummary[1]:Enduse14[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse14[23]	 ) > 0) then  ResultSummary[3]:Enduse14[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[23]"			Proj:ResultSummary[1]:Enduse99[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse99[23]	 ) > 0) then  ResultSummary[3]:Enduse99[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[23]"			Proj:ResultSummary[1]:Enduse98[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse98[23]	 ) > 0) then  ResultSummary[3]:Enduse98[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[23]"			Proj:ResultSummary[1]:Enduse11[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse11[23]	 ) > 0) then  ResultSummary[3]:Enduse11[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[23]"			Proj:ResultSummary[1]:Enduse10[23]	= {  if (LocalStatus( ResultSummary[3]:Enduse10[23]	 ) > 0) then  ResultSummary[3]:Enduse10[23]	   else  UNDEFINED  endif  }
  ; Proposed FUEL CO2 Emissions
	"Set ResultSummary[1]:Title1[24]"			Proj:ResultSummary[1]:Title1[24]		= {  if (LocalStatus( ResultSummary[3]:Title1[24]		 ) > 0) then  ResultSummary[3]:Title1[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[24]"			Proj:ResultSummary[1]:Title2[24]		= {  if (LocalStatus( ResultSummary[3]:Title2[24]		 ) > 0) then  ResultSummary[3]:Title2[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[24]"			Proj:ResultSummary[1]:Title3[24]		= {  if (LocalStatus( ResultSummary[3]:Title3[24]		 ) > 0) then  ResultSummary[3]:Title3[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[24]"			Proj:ResultSummary[1]:Enduse1[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse1[24]	   ) > 0) then  ResultSummary[3]:Enduse1[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[24]"			Proj:ResultSummary[1]:Enduse2[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse2[24]	   ) > 0) then  ResultSummary[3]:Enduse2[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[24]"			Proj:ResultSummary[1]:Enduse3[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse3[24]	   ) > 0) then  ResultSummary[3]:Enduse3[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[24]"			Proj:ResultSummary[1]:Enduse4[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse4[24]	   ) > 0) then  ResultSummary[3]:Enduse4[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[24]"			Proj:ResultSummary[1]:Enduse5[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse5[24]	   ) > 0) then  ResultSummary[3]:Enduse5[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[24]"			Proj:ResultSummary[1]:Enduse6[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse6[24]	   ) > 0) then  ResultSummary[3]:Enduse6[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[24]"			Proj:ResultSummary[1]:Enduse7[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse7[24]	   ) > 0) then  ResultSummary[3]:Enduse7[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[24]"			Proj:ResultSummary[1]:Enduse8[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse8[24]	   ) > 0) then  ResultSummary[3]:Enduse8[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[24]"			Proj:ResultSummary[1]:Enduse9[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse9[24]	   ) > 0) then  ResultSummary[3]:Enduse9[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[24]"			Proj:ResultSummary[1]:Enduse13[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse13[24]	 ) > 0) then  ResultSummary[3]:Enduse13[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[24]"			Proj:ResultSummary[1]:Enduse14[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse14[24]	 ) > 0) then  ResultSummary[3]:Enduse14[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[24]"			Proj:ResultSummary[1]:Enduse98[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse98[24]	 ) > 0) then  ResultSummary[3]:Enduse98[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[24]"			Proj:ResultSummary[1]:Enduse11[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse11[24]	 ) > 0) then  ResultSummary[3]:Enduse11[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[24]"			Proj:ResultSummary[1]:Enduse10[24]	= {  if (LocalStatus( ResultSummary[3]:Enduse10[24]	 ) > 0) then  ResultSummary[3]:Enduse10[24]	   else  UNDEFINED  endif  }
  ; Proposed Total CO2 Emissions
	"Set ResultSummary[1]:Title1[25]"			Proj:ResultSummary[1]:Title1[25]		= {  if (LocalStatus( ResultSummary[3]:Title1[25]		 ) > 0) then  ResultSummary[3]:Title1[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[25]"			Proj:ResultSummary[1]:Title2[25]		= {  if (LocalStatus( ResultSummary[3]:Title2[25]		 ) > 0) then  ResultSummary[3]:Title2[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[25]"			Proj:ResultSummary[1]:Title3[25]		= {  if (LocalStatus( ResultSummary[3]:Title3[25]		 ) > 0) then  ResultSummary[3]:Title3[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[25]"			Proj:ResultSummary[1]:Enduse1[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse1[25]	   ) > 0) then  ResultSummary[3]:Enduse1[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[25]"			Proj:ResultSummary[1]:Enduse2[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse2[25]	   ) > 0) then  ResultSummary[3]:Enduse2[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[25]"			Proj:ResultSummary[1]:Enduse3[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse3[25]	   ) > 0) then  ResultSummary[3]:Enduse3[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[25]"			Proj:ResultSummary[1]:Enduse4[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse4[25]	   ) > 0) then  ResultSummary[3]:Enduse4[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[25]"			Proj:ResultSummary[1]:Enduse5[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse5[25]	   ) > 0) then  ResultSummary[3]:Enduse5[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[25]"			Proj:ResultSummary[1]:Enduse6[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse6[25]	   ) > 0) then  ResultSummary[3]:Enduse6[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[25]"			Proj:ResultSummary[1]:Enduse7[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse7[25]	   ) > 0) then  ResultSummary[3]:Enduse7[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[25]"			Proj:ResultSummary[1]:Enduse8[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse8[25]	   ) > 0) then  ResultSummary[3]:Enduse8[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[25]"			Proj:ResultSummary[1]:Enduse9[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse9[25]	   ) > 0) then  ResultSummary[3]:Enduse9[25]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[25]"			Proj:ResultSummary[1]:Enduse13[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse13[25]	 ) > 0) then  ResultSummary[3]:Enduse13[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[25]"			Proj:ResultSummary[1]:Enduse14[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse14[25]	 ) > 0) then  ResultSummary[3]:Enduse14[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[25]"			Proj:ResultSummary[1]:Enduse99[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse99[25]	 ) > 0) then  ResultSummary[3]:Enduse99[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[25]"			Proj:ResultSummary[1]:Enduse98[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse98[25]	 ) > 0) then  ResultSummary[3]:Enduse98[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[25]"			Proj:ResultSummary[1]:Enduse11[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse11[25]	 ) > 0) then  ResultSummary[3]:Enduse11[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[25]"			Proj:ResultSummary[1]:Enduse10[25]	= {  if (LocalStatus( ResultSummary[3]:Enduse10[25]	 ) > 0) then  ResultSummary[3]:Enduse10[25]	   else  UNDEFINED  endif  }
  ; Standard Electric CO2 Emissions
	"Set ResultSummary[1]:Title1[27]"			Proj:ResultSummary[1]:Title1[27]		= {  if (LocalStatus( ResultSummary[3]:Title1[27]		 ) > 0) then  ResultSummary[3]:Title1[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[27]"			Proj:ResultSummary[1]:Title2[27]		= {  if (LocalStatus( ResultSummary[3]:Title2[27]		 ) > 0) then  ResultSummary[3]:Title2[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[27]"			Proj:ResultSummary[1]:Title3[27]		= {  if (LocalStatus( ResultSummary[3]:Title3[27]		 ) > 0) then  ResultSummary[3]:Title3[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[27]"			Proj:ResultSummary[1]:Enduse1[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse1[27]	   ) > 0) then  ResultSummary[3]:Enduse1[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[27]"			Proj:ResultSummary[1]:Enduse2[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse2[27]	   ) > 0) then  ResultSummary[3]:Enduse2[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[27]"			Proj:ResultSummary[1]:Enduse3[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse3[27]	   ) > 0) then  ResultSummary[3]:Enduse3[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[27]"			Proj:ResultSummary[1]:Enduse4[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse4[27]	   ) > 0) then  ResultSummary[3]:Enduse4[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[27]"			Proj:ResultSummary[1]:Enduse5[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse5[27]	   ) > 0) then  ResultSummary[3]:Enduse5[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[27]"			Proj:ResultSummary[1]:Enduse6[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse6[27]	   ) > 0) then  ResultSummary[3]:Enduse6[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[27]"			Proj:ResultSummary[1]:Enduse7[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse7[27]	   ) > 0) then  ResultSummary[3]:Enduse7[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[27]"			Proj:ResultSummary[1]:Enduse8[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse8[27]	   ) > 0) then  ResultSummary[3]:Enduse8[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[27]"			Proj:ResultSummary[1]:Enduse9[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse9[27]	   ) > 0) then  ResultSummary[3]:Enduse9[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[27]"			Proj:ResultSummary[1]:Enduse13[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse13[27]	 ) > 0) then  ResultSummary[3]:Enduse13[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[27]"			Proj:ResultSummary[1]:Enduse14[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse14[27]	 ) > 0) then  ResultSummary[3]:Enduse14[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[27]"			Proj:ResultSummary[1]:Enduse11[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse11[27]	 ) > 0) then  ResultSummary[3]:Enduse11[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[27]"			Proj:ResultSummary[1]:Enduse10[27]	= {  if (LocalStatus( ResultSummary[3]:Enduse10[27]	 ) > 0) then  ResultSummary[3]:Enduse10[27]	   else  UNDEFINED  endif  }
  ; Standard FUEL CO2 Emissions
	"Set ResultSummary[1]:Title1[28]"			Proj:ResultSummary[1]:Title1[28]		= {  if (LocalStatus( ResultSummary[3]:Title1[28]		 ) > 0) then  ResultSummary[3]:Title1[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[28]"			Proj:ResultSummary[1]:Title2[28]		= {  if (LocalStatus( ResultSummary[3]:Title2[28]		 ) > 0) then  ResultSummary[3]:Title2[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[28]"			Proj:ResultSummary[1]:Title3[28]		= {  if (LocalStatus( ResultSummary[3]:Title3[28]		 ) > 0) then  ResultSummary[3]:Title3[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[28]"			Proj:ResultSummary[1]:Enduse1[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse1[28]	   ) > 0) then  ResultSummary[3]:Enduse1[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[28]"			Proj:ResultSummary[1]:Enduse2[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse2[28]	   ) > 0) then  ResultSummary[3]:Enduse2[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[28]"			Proj:ResultSummary[1]:Enduse3[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse3[28]	   ) > 0) then  ResultSummary[3]:Enduse3[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[28]"			Proj:ResultSummary[1]:Enduse4[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse4[28]	   ) > 0) then  ResultSummary[3]:Enduse4[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[28]"			Proj:ResultSummary[1]:Enduse5[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse5[28]	   ) > 0) then  ResultSummary[3]:Enduse5[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[28]"			Proj:ResultSummary[1]:Enduse6[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse6[28]	   ) > 0) then  ResultSummary[3]:Enduse6[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[28]"			Proj:ResultSummary[1]:Enduse7[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse7[28]	   ) > 0) then  ResultSummary[3]:Enduse7[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[28]"			Proj:ResultSummary[1]:Enduse8[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse8[28]	   ) > 0) then  ResultSummary[3]:Enduse8[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[28]"			Proj:ResultSummary[1]:Enduse9[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse9[28]	   ) > 0) then  ResultSummary[3]:Enduse9[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[28]"			Proj:ResultSummary[1]:Enduse13[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse13[28]	 ) > 0) then  ResultSummary[3]:Enduse13[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[28]"			Proj:ResultSummary[1]:Enduse14[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse14[28]	 ) > 0) then  ResultSummary[3]:Enduse14[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[28]"			Proj:ResultSummary[1]:Enduse11[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse11[28]	 ) > 0) then  ResultSummary[3]:Enduse11[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[28]"			Proj:ResultSummary[1]:Enduse10[28]	= {  if (LocalStatus( ResultSummary[3]:Enduse10[28]	 ) > 0) then  ResultSummary[3]:Enduse10[28]	   else  UNDEFINED  endif  }
  ; Standard Total CO2 Emissions
	"Set ResultSummary[1]:Title1[29]"			Proj:ResultSummary[1]:Title1[29]		= {  if (LocalStatus( ResultSummary[3]:Title1[29]		 ) > 0) then  ResultSummary[3]:Title1[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[29]"			Proj:ResultSummary[1]:Title2[29]		= {  if (LocalStatus( ResultSummary[3]:Title2[29]		 ) > 0) then  ResultSummary[3]:Title2[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[29]"			Proj:ResultSummary[1]:Title3[29]		= {  if (LocalStatus( ResultSummary[3]:Title3[29]		 ) > 0) then  ResultSummary[3]:Title3[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[29]"			Proj:ResultSummary[1]:Enduse1[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse1[29]	   ) > 0) then  ResultSummary[3]:Enduse1[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[29]"			Proj:ResultSummary[1]:Enduse2[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse2[29]	   ) > 0) then  ResultSummary[3]:Enduse2[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[29]"			Proj:ResultSummary[1]:Enduse3[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse3[29]	   ) > 0) then  ResultSummary[3]:Enduse3[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[29]"			Proj:ResultSummary[1]:Enduse4[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse4[29]	   ) > 0) then  ResultSummary[3]:Enduse4[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[29]"			Proj:ResultSummary[1]:Enduse5[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse5[29]	   ) > 0) then  ResultSummary[3]:Enduse5[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[29]"			Proj:ResultSummary[1]:Enduse6[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse6[29]	   ) > 0) then  ResultSummary[3]:Enduse6[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[29]"			Proj:ResultSummary[1]:Enduse7[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse7[29]	   ) > 0) then  ResultSummary[3]:Enduse7[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[29]"			Proj:ResultSummary[1]:Enduse8[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse8[29]	   ) > 0) then  ResultSummary[3]:Enduse8[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[29]"			Proj:ResultSummary[1]:Enduse9[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse9[29]	   ) > 0) then  ResultSummary[3]:Enduse9[29]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse12[29]"			Proj:ResultSummary[1]:Enduse12[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse12[29]	 ) > 0) then  ResultSummary[3]:Enduse12[29]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[29]"			Proj:ResultSummary[1]:Enduse13[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse13[29]	 ) > 0) then  ResultSummary[3]:Enduse13[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[29]"			Proj:ResultSummary[1]:Enduse14[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse14[29]	 ) > 0) then  ResultSummary[3]:Enduse14[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[29]"			Proj:ResultSummary[1]:Enduse99[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse99[29]	 ) > 0) then  ResultSummary[3]:Enduse99[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[29]"			Proj:ResultSummary[1]:Enduse11[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse11[29]	 ) > 0) then  ResultSummary[3]:Enduse11[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[29]"			Proj:ResultSummary[1]:Enduse10[29]	= {  if (LocalStatus( ResultSummary[3]:Enduse10[29]	 ) > 0) then  ResultSummary[3]:Enduse10[29]	   else  UNDEFINED  endif  }
  ; Std-Prop Margin CO2 Emissions
	"Set ResultSummary[1]:Title1[30]"			Proj:ResultSummary[1]:Title1[30]		= {  if (LocalStatus( ResultSummary[3]:Title1[30]		 ) > 0) then  ResultSummary[3]:Title1[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[30]"			Proj:ResultSummary[1]:Title2[30]		= {  if (LocalStatus( ResultSummary[3]:Title2[30]		 ) > 0) then  ResultSummary[3]:Title2[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[30]"			Proj:ResultSummary[1]:Title3[30]		= {  if (LocalStatus( ResultSummary[3]:Title3[30]		 ) > 0) then  ResultSummary[3]:Title3[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[30]"			Proj:ResultSummary[1]:Enduse1[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse1[30]	   ) > 0) then  ResultSummary[3]:Enduse1[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[30]"			Proj:ResultSummary[1]:Enduse2[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse2[30]	   ) > 0) then  ResultSummary[3]:Enduse2[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[30]"			Proj:ResultSummary[1]:Enduse3[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse3[30]	   ) > 0) then  ResultSummary[3]:Enduse3[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[30]"			Proj:ResultSummary[1]:Enduse4[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse4[30]	   ) > 0) then  ResultSummary[3]:Enduse4[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[30]"			Proj:ResultSummary[1]:Enduse5[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse5[30]	   ) > 0) then  ResultSummary[3]:Enduse5[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[30]"			Proj:ResultSummary[1]:Enduse6[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse6[30]	   ) > 0) then  ResultSummary[3]:Enduse6[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[30]"			Proj:ResultSummary[1]:Enduse7[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse7[30]	   ) > 0) then  ResultSummary[3]:Enduse7[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[30]"			Proj:ResultSummary[1]:Enduse8[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse8[30]	   ) > 0) then  ResultSummary[3]:Enduse8[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[30]"			Proj:ResultSummary[1]:Enduse9[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse9[30]	   ) > 0) then  ResultSummary[3]:Enduse9[30]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse12[30]"			Proj:ResultSummary[1]:Enduse12[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse12[30]	 ) > 0) then  ResultSummary[3]:Enduse12[30]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[30]"			Proj:ResultSummary[1]:Enduse13[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse13[30]	 ) > 0) then  ResultSummary[3]:Enduse13[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[30]"			Proj:ResultSummary[1]:Enduse14[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse14[30]	 ) > 0) then  ResultSummary[3]:Enduse14[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[30]"			Proj:ResultSummary[1]:Enduse99[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse99[30]	 ) > 0) then  ResultSummary[3]:Enduse99[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[30]"			Proj:ResultSummary[1]:Enduse11[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse11[30]	 ) > 0) then  ResultSummary[3]:Enduse11[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[30]"			Proj:ResultSummary[1]:Enduse10[30]	= {  if (LocalStatus( ResultSummary[3]:Enduse10[30]	 ) > 0) then  ResultSummary[3]:Enduse10[30]	   else  UNDEFINED  endif  }
END
;*************************************************************************   - SAC 2/4/19
RULELIST "CARes_RunResults_SetWorstCarbon_S" 1 0 1 1
;*************************************************************************
   "Set ResultSummary[1]:CO2FuelUnitLabel"   Proj:ResultSummary[1]:CO2FuelUnitLabel   = {  if (LocalStatus( ResultSummary[4]:CO2FuelUnitLabel  ) > 0) then  ResultSummary[4]:CO2FuelUnitLabel   else  UNDEFINED  endif  }
   "Set ResultSummary[1]:CO2TotalUnitLabel"  Proj:ResultSummary[1]:CO2TotalUnitLabel  = {  if (LocalStatus( ResultSummary[4]:CO2TotalUnitLabel ) > 0) then  ResultSummary[4]:CO2TotalUnitLabel  else  UNDEFINED  endif  }
  ; Proposed Electric CO2 Emissions
	"Set ResultSummary[1]:Title1[23]"			Proj:ResultSummary[1]:Title1[23]		= {  if (LocalStatus( ResultSummary[4]:Title1[23]		 ) > 0) then  ResultSummary[4]:Title1[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[23]"			Proj:ResultSummary[1]:Title2[23]		= {  if (LocalStatus( ResultSummary[4]:Title2[23]		 ) > 0) then  ResultSummary[4]:Title2[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[23]"			Proj:ResultSummary[1]:Title3[23]		= {  if (LocalStatus( ResultSummary[4]:Title3[23]		 ) > 0) then  ResultSummary[4]:Title3[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[23]"			Proj:ResultSummary[1]:Enduse1[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse1[23]	   ) > 0) then  ResultSummary[4]:Enduse1[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[23]"			Proj:ResultSummary[1]:Enduse2[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse2[23]	   ) > 0) then  ResultSummary[4]:Enduse2[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[23]"			Proj:ResultSummary[1]:Enduse3[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse3[23]	   ) > 0) then  ResultSummary[4]:Enduse3[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[23]"			Proj:ResultSummary[1]:Enduse4[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse4[23]	   ) > 0) then  ResultSummary[4]:Enduse4[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[23]"			Proj:ResultSummary[1]:Enduse5[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse5[23]	   ) > 0) then  ResultSummary[4]:Enduse5[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[23]"			Proj:ResultSummary[1]:Enduse6[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse6[23]	   ) > 0) then  ResultSummary[4]:Enduse6[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[23]"			Proj:ResultSummary[1]:Enduse7[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse7[23]	   ) > 0) then  ResultSummary[4]:Enduse7[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[23]"			Proj:ResultSummary[1]:Enduse8[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse8[23]	   ) > 0) then  ResultSummary[4]:Enduse8[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[23]"			Proj:ResultSummary[1]:Enduse9[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse9[23]	   ) > 0) then  ResultSummary[4]:Enduse9[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[23]"			Proj:ResultSummary[1]:Enduse13[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse13[23]	 ) > 0) then  ResultSummary[4]:Enduse13[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[23]"			Proj:ResultSummary[1]:Enduse14[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse14[23]	 ) > 0) then  ResultSummary[4]:Enduse14[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[23]"			Proj:ResultSummary[1]:Enduse99[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse99[23]	 ) > 0) then  ResultSummary[4]:Enduse99[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[23]"			Proj:ResultSummary[1]:Enduse98[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse98[23]	 ) > 0) then  ResultSummary[4]:Enduse98[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[23]"			Proj:ResultSummary[1]:Enduse11[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse11[23]	 ) > 0) then  ResultSummary[4]:Enduse11[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[23]"			Proj:ResultSummary[1]:Enduse10[23]	= {  if (LocalStatus( ResultSummary[4]:Enduse10[23]	 ) > 0) then  ResultSummary[4]:Enduse10[23]	   else  UNDEFINED  endif  }
  ; Proposed FUEL CO2 Emissions
	"Set ResultSummary[1]:Title1[24]"			Proj:ResultSummary[1]:Title1[24]		= {  if (LocalStatus( ResultSummary[4]:Title1[24]		 ) > 0) then  ResultSummary[4]:Title1[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[24]"			Proj:ResultSummary[1]:Title2[24]		= {  if (LocalStatus( ResultSummary[4]:Title2[24]		 ) > 0) then  ResultSummary[4]:Title2[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[24]"			Proj:ResultSummary[1]:Title3[24]		= {  if (LocalStatus( ResultSummary[4]:Title3[24]		 ) > 0) then  ResultSummary[4]:Title3[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[24]"			Proj:ResultSummary[1]:Enduse1[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse1[24]	   ) > 0) then  ResultSummary[4]:Enduse1[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[24]"			Proj:ResultSummary[1]:Enduse2[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse2[24]	   ) > 0) then  ResultSummary[4]:Enduse2[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[24]"			Proj:ResultSummary[1]:Enduse3[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse3[24]	   ) > 0) then  ResultSummary[4]:Enduse3[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[24]"			Proj:ResultSummary[1]:Enduse4[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse4[24]	   ) > 0) then  ResultSummary[4]:Enduse4[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[24]"			Proj:ResultSummary[1]:Enduse5[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse5[24]	   ) > 0) then  ResultSummary[4]:Enduse5[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[24]"			Proj:ResultSummary[1]:Enduse6[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse6[24]	   ) > 0) then  ResultSummary[4]:Enduse6[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[24]"			Proj:ResultSummary[1]:Enduse7[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse7[24]	   ) > 0) then  ResultSummary[4]:Enduse7[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[24]"			Proj:ResultSummary[1]:Enduse8[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse8[24]	   ) > 0) then  ResultSummary[4]:Enduse8[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[24]"			Proj:ResultSummary[1]:Enduse9[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse9[24]	   ) > 0) then  ResultSummary[4]:Enduse9[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[24]"			Proj:ResultSummary[1]:Enduse13[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse13[24]	 ) > 0) then  ResultSummary[4]:Enduse13[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[24]"			Proj:ResultSummary[1]:Enduse14[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse14[24]	 ) > 0) then  ResultSummary[4]:Enduse14[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[24]"			Proj:ResultSummary[1]:Enduse98[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse98[24]	 ) > 0) then  ResultSummary[4]:Enduse98[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[24]"			Proj:ResultSummary[1]:Enduse11[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse11[24]	 ) > 0) then  ResultSummary[4]:Enduse11[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[24]"			Proj:ResultSummary[1]:Enduse10[24]	= {  if (LocalStatus( ResultSummary[4]:Enduse10[24]	 ) > 0) then  ResultSummary[4]:Enduse10[24]	   else  UNDEFINED  endif  }
  ; Proposed Total CO2 Emissions
	"Set ResultSummary[1]:Title1[25]"			Proj:ResultSummary[1]:Title1[25]		= {  if (LocalStatus( ResultSummary[4]:Title1[25]		 ) > 0) then  ResultSummary[4]:Title1[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[25]"			Proj:ResultSummary[1]:Title2[25]		= {  if (LocalStatus( ResultSummary[4]:Title2[25]		 ) > 0) then  ResultSummary[4]:Title2[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[25]"			Proj:ResultSummary[1]:Title3[25]		= {  if (LocalStatus( ResultSummary[4]:Title3[25]		 ) > 0) then  ResultSummary[4]:Title3[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[25]"			Proj:ResultSummary[1]:Enduse1[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse1[25]	   ) > 0) then  ResultSummary[4]:Enduse1[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[25]"			Proj:ResultSummary[1]:Enduse2[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse2[25]	   ) > 0) then  ResultSummary[4]:Enduse2[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[25]"			Proj:ResultSummary[1]:Enduse3[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse3[25]	   ) > 0) then  ResultSummary[4]:Enduse3[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[25]"			Proj:ResultSummary[1]:Enduse4[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse4[25]	   ) > 0) then  ResultSummary[4]:Enduse4[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[25]"			Proj:ResultSummary[1]:Enduse5[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse5[25]	   ) > 0) then  ResultSummary[4]:Enduse5[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[25]"			Proj:ResultSummary[1]:Enduse6[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse6[25]	   ) > 0) then  ResultSummary[4]:Enduse6[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[25]"			Proj:ResultSummary[1]:Enduse7[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse7[25]	   ) > 0) then  ResultSummary[4]:Enduse7[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[25]"			Proj:ResultSummary[1]:Enduse8[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse8[25]	   ) > 0) then  ResultSummary[4]:Enduse8[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[25]"			Proj:ResultSummary[1]:Enduse9[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse9[25]	   ) > 0) then  ResultSummary[4]:Enduse9[25]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[25]"			Proj:ResultSummary[1]:Enduse13[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse13[25]	 ) > 0) then  ResultSummary[4]:Enduse13[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[25]"			Proj:ResultSummary[1]:Enduse14[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse14[25]	 ) > 0) then  ResultSummary[4]:Enduse14[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[25]"			Proj:ResultSummary[1]:Enduse99[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse99[25]	 ) > 0) then  ResultSummary[4]:Enduse99[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[25]"			Proj:ResultSummary[1]:Enduse98[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse98[25]	 ) > 0) then  ResultSummary[4]:Enduse98[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[25]"			Proj:ResultSummary[1]:Enduse11[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse11[25]	 ) > 0) then  ResultSummary[4]:Enduse11[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[25]"			Proj:ResultSummary[1]:Enduse10[25]	= {  if (LocalStatus( ResultSummary[4]:Enduse10[25]	 ) > 0) then  ResultSummary[4]:Enduse10[25]	   else  UNDEFINED  endif  }
  ; Standard Electric CO2 Emissions
	"Set ResultSummary[1]:Title1[27]"			Proj:ResultSummary[1]:Title1[27]		= {  if (LocalStatus( ResultSummary[4]:Title1[27]		 ) > 0) then  ResultSummary[4]:Title1[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[27]"			Proj:ResultSummary[1]:Title2[27]		= {  if (LocalStatus( ResultSummary[4]:Title2[27]		 ) > 0) then  ResultSummary[4]:Title2[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[27]"			Proj:ResultSummary[1]:Title3[27]		= {  if (LocalStatus( ResultSummary[4]:Title3[27]		 ) > 0) then  ResultSummary[4]:Title3[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[27]"			Proj:ResultSummary[1]:Enduse1[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse1[27]	   ) > 0) then  ResultSummary[4]:Enduse1[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[27]"			Proj:ResultSummary[1]:Enduse2[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse2[27]	   ) > 0) then  ResultSummary[4]:Enduse2[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[27]"			Proj:ResultSummary[1]:Enduse3[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse3[27]	   ) > 0) then  ResultSummary[4]:Enduse3[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[27]"			Proj:ResultSummary[1]:Enduse4[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse4[27]	   ) > 0) then  ResultSummary[4]:Enduse4[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[27]"			Proj:ResultSummary[1]:Enduse5[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse5[27]	   ) > 0) then  ResultSummary[4]:Enduse5[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[27]"			Proj:ResultSummary[1]:Enduse6[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse6[27]	   ) > 0) then  ResultSummary[4]:Enduse6[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[27]"			Proj:ResultSummary[1]:Enduse7[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse7[27]	   ) > 0) then  ResultSummary[4]:Enduse7[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[27]"			Proj:ResultSummary[1]:Enduse8[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse8[27]	   ) > 0) then  ResultSummary[4]:Enduse8[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[27]"			Proj:ResultSummary[1]:Enduse9[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse9[27]	   ) > 0) then  ResultSummary[4]:Enduse9[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[27]"			Proj:ResultSummary[1]:Enduse13[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse13[27]	 ) > 0) then  ResultSummary[4]:Enduse13[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[27]"			Proj:ResultSummary[1]:Enduse14[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse14[27]	 ) > 0) then  ResultSummary[4]:Enduse14[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[27]"			Proj:ResultSummary[1]:Enduse11[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse11[27]	 ) > 0) then  ResultSummary[4]:Enduse11[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[27]"			Proj:ResultSummary[1]:Enduse10[27]	= {  if (LocalStatus( ResultSummary[4]:Enduse10[27]	 ) > 0) then  ResultSummary[4]:Enduse10[27]	   else  UNDEFINED  endif  }
  ; Standard FUEL CO2 Emissions
	"Set ResultSummary[1]:Title1[28]"			Proj:ResultSummary[1]:Title1[28]		= {  if (LocalStatus( ResultSummary[4]:Title1[28]		 ) > 0) then  ResultSummary[4]:Title1[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[28]"			Proj:ResultSummary[1]:Title2[28]		= {  if (LocalStatus( ResultSummary[4]:Title2[28]		 ) > 0) then  ResultSummary[4]:Title2[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[28]"			Proj:ResultSummary[1]:Title3[28]		= {  if (LocalStatus( ResultSummary[4]:Title3[28]		 ) > 0) then  ResultSummary[4]:Title3[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[28]"			Proj:ResultSummary[1]:Enduse1[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse1[28]	   ) > 0) then  ResultSummary[4]:Enduse1[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[28]"			Proj:ResultSummary[1]:Enduse2[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse2[28]	   ) > 0) then  ResultSummary[4]:Enduse2[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[28]"			Proj:ResultSummary[1]:Enduse3[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse3[28]	   ) > 0) then  ResultSummary[4]:Enduse3[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[28]"			Proj:ResultSummary[1]:Enduse4[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse4[28]	   ) > 0) then  ResultSummary[4]:Enduse4[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[28]"			Proj:ResultSummary[1]:Enduse5[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse5[28]	   ) > 0) then  ResultSummary[4]:Enduse5[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[28]"			Proj:ResultSummary[1]:Enduse6[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse6[28]	   ) > 0) then  ResultSummary[4]:Enduse6[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[28]"			Proj:ResultSummary[1]:Enduse7[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse7[28]	   ) > 0) then  ResultSummary[4]:Enduse7[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[28]"			Proj:ResultSummary[1]:Enduse8[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse8[28]	   ) > 0) then  ResultSummary[4]:Enduse8[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[28]"			Proj:ResultSummary[1]:Enduse9[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse9[28]	   ) > 0) then  ResultSummary[4]:Enduse9[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[28]"			Proj:ResultSummary[1]:Enduse13[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse13[28]	 ) > 0) then  ResultSummary[4]:Enduse13[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[28]"			Proj:ResultSummary[1]:Enduse14[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse14[28]	 ) > 0) then  ResultSummary[4]:Enduse14[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[28]"			Proj:ResultSummary[1]:Enduse11[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse11[28]	 ) > 0) then  ResultSummary[4]:Enduse11[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[28]"			Proj:ResultSummary[1]:Enduse10[28]	= {  if (LocalStatus( ResultSummary[4]:Enduse10[28]	 ) > 0) then  ResultSummary[4]:Enduse10[28]	   else  UNDEFINED  endif  }
  ; Standard Total CO2 Emissions
	"Set ResultSummary[1]:Title1[29]"			Proj:ResultSummary[1]:Title1[29]		= {  if (LocalStatus( ResultSummary[4]:Title1[29]		 ) > 0) then  ResultSummary[4]:Title1[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[29]"			Proj:ResultSummary[1]:Title2[29]		= {  if (LocalStatus( ResultSummary[4]:Title2[29]		 ) > 0) then  ResultSummary[4]:Title2[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[29]"			Proj:ResultSummary[1]:Title3[29]		= {  if (LocalStatus( ResultSummary[4]:Title3[29]		 ) > 0) then  ResultSummary[4]:Title3[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[29]"			Proj:ResultSummary[1]:Enduse1[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse1[29]	   ) > 0) then  ResultSummary[4]:Enduse1[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[29]"			Proj:ResultSummary[1]:Enduse2[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse2[29]	   ) > 0) then  ResultSummary[4]:Enduse2[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[29]"			Proj:ResultSummary[1]:Enduse3[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse3[29]	   ) > 0) then  ResultSummary[4]:Enduse3[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[29]"			Proj:ResultSummary[1]:Enduse4[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse4[29]	   ) > 0) then  ResultSummary[4]:Enduse4[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[29]"			Proj:ResultSummary[1]:Enduse5[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse5[29]	   ) > 0) then  ResultSummary[4]:Enduse5[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[29]"			Proj:ResultSummary[1]:Enduse6[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse6[29]	   ) > 0) then  ResultSummary[4]:Enduse6[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[29]"			Proj:ResultSummary[1]:Enduse7[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse7[29]	   ) > 0) then  ResultSummary[4]:Enduse7[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[29]"			Proj:ResultSummary[1]:Enduse8[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse8[29]	   ) > 0) then  ResultSummary[4]:Enduse8[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[29]"			Proj:ResultSummary[1]:Enduse9[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse9[29]	   ) > 0) then  ResultSummary[4]:Enduse9[29]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse12[29]"			Proj:ResultSummary[1]:Enduse12[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse12[29]	 ) > 0) then  ResultSummary[4]:Enduse12[29]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[29]"			Proj:ResultSummary[1]:Enduse13[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse13[29]	 ) > 0) then  ResultSummary[4]:Enduse13[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[29]"			Proj:ResultSummary[1]:Enduse14[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse14[29]	 ) > 0) then  ResultSummary[4]:Enduse14[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[29]"			Proj:ResultSummary[1]:Enduse99[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse99[29]	 ) > 0) then  ResultSummary[4]:Enduse99[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[29]"			Proj:ResultSummary[1]:Enduse11[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse11[29]	 ) > 0) then  ResultSummary[4]:Enduse11[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[29]"			Proj:ResultSummary[1]:Enduse10[29]	= {  if (LocalStatus( ResultSummary[4]:Enduse10[29]	 ) > 0) then  ResultSummary[4]:Enduse10[29]	   else  UNDEFINED  endif  }
  ; Std-Prop Margin CO2 Emissions
	"Set ResultSummary[1]:Title1[30]"			Proj:ResultSummary[1]:Title1[30]		= {  if (LocalStatus( ResultSummary[4]:Title1[30]		 ) > 0) then  ResultSummary[4]:Title1[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[30]"			Proj:ResultSummary[1]:Title2[30]		= {  if (LocalStatus( ResultSummary[4]:Title2[30]		 ) > 0) then  ResultSummary[4]:Title2[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[30]"			Proj:ResultSummary[1]:Title3[30]		= {  if (LocalStatus( ResultSummary[4]:Title3[30]		 ) > 0) then  ResultSummary[4]:Title3[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[30]"			Proj:ResultSummary[1]:Enduse1[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse1[30]	   ) > 0) then  ResultSummary[4]:Enduse1[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[30]"			Proj:ResultSummary[1]:Enduse2[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse2[30]	   ) > 0) then  ResultSummary[4]:Enduse2[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[30]"			Proj:ResultSummary[1]:Enduse3[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse3[30]	   ) > 0) then  ResultSummary[4]:Enduse3[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[30]"			Proj:ResultSummary[1]:Enduse4[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse4[30]	   ) > 0) then  ResultSummary[4]:Enduse4[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[30]"			Proj:ResultSummary[1]:Enduse5[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse5[30]	   ) > 0) then  ResultSummary[4]:Enduse5[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[30]"			Proj:ResultSummary[1]:Enduse6[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse6[30]	   ) > 0) then  ResultSummary[4]:Enduse6[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[30]"			Proj:ResultSummary[1]:Enduse7[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse7[30]	   ) > 0) then  ResultSummary[4]:Enduse7[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[30]"			Proj:ResultSummary[1]:Enduse8[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse8[30]	   ) > 0) then  ResultSummary[4]:Enduse8[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[30]"			Proj:ResultSummary[1]:Enduse9[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse9[30]	   ) > 0) then  ResultSummary[4]:Enduse9[30]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse12[30]"			Proj:ResultSummary[1]:Enduse12[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse12[30]	 ) > 0) then  ResultSummary[4]:Enduse12[30]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[30]"			Proj:ResultSummary[1]:Enduse13[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse13[30]	 ) > 0) then  ResultSummary[4]:Enduse13[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[30]"			Proj:ResultSummary[1]:Enduse14[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse14[30]	 ) > 0) then  ResultSummary[4]:Enduse14[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[30]"			Proj:ResultSummary[1]:Enduse99[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse99[30]	 ) > 0) then  ResultSummary[4]:Enduse99[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[30]"			Proj:ResultSummary[1]:Enduse11[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse11[30]	 ) > 0) then  ResultSummary[4]:Enduse11[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[30]"			Proj:ResultSummary[1]:Enduse10[30]	= {  if (LocalStatus( ResultSummary[4]:Enduse10[30]	 ) > 0) then  ResultSummary[4]:Enduse10[30]	   else  UNDEFINED  endif  }
END
;*************************************************************************   - SAC 2/4/19
RULELIST "CARes_RunResults_SetWorstCarbon_W" 1 0 1 1
;*************************************************************************
   "Set ResultSummary[1]:CO2FuelUnitLabel"   Proj:ResultSummary[1]:CO2FuelUnitLabel   = {  if (LocalStatus( ResultSummary[5]:CO2FuelUnitLabel  ) > 0) then  ResultSummary[5]:CO2FuelUnitLabel   else  UNDEFINED  endif  }
   "Set ResultSummary[1]:CO2TotalUnitLabel"  Proj:ResultSummary[1]:CO2TotalUnitLabel  = {  if (LocalStatus( ResultSummary[5]:CO2TotalUnitLabel ) > 0) then  ResultSummary[5]:CO2TotalUnitLabel  else  UNDEFINED  endif  }
  ; Proposed Electric CO2 Emissions
	"Set ResultSummary[1]:Title1[23]"			Proj:ResultSummary[1]:Title1[23]		= {  if (LocalStatus( ResultSummary[5]:Title1[23]		 ) > 0) then  ResultSummary[5]:Title1[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[23]"			Proj:ResultSummary[1]:Title2[23]		= {  if (LocalStatus( ResultSummary[5]:Title2[23]		 ) > 0) then  ResultSummary[5]:Title2[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[23]"			Proj:ResultSummary[1]:Title3[23]		= {  if (LocalStatus( ResultSummary[5]:Title3[23]		 ) > 0) then  ResultSummary[5]:Title3[23]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[23]"			Proj:ResultSummary[1]:Enduse1[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse1[23]	   ) > 0) then  ResultSummary[5]:Enduse1[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[23]"			Proj:ResultSummary[1]:Enduse2[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse2[23]	   ) > 0) then  ResultSummary[5]:Enduse2[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[23]"			Proj:ResultSummary[1]:Enduse3[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse3[23]	   ) > 0) then  ResultSummary[5]:Enduse3[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[23]"			Proj:ResultSummary[1]:Enduse4[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse4[23]	   ) > 0) then  ResultSummary[5]:Enduse4[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[23]"			Proj:ResultSummary[1]:Enduse5[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse5[23]	   ) > 0) then  ResultSummary[5]:Enduse5[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[23]"			Proj:ResultSummary[1]:Enduse6[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse6[23]	   ) > 0) then  ResultSummary[5]:Enduse6[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[23]"			Proj:ResultSummary[1]:Enduse7[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse7[23]	   ) > 0) then  ResultSummary[5]:Enduse7[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[23]"			Proj:ResultSummary[1]:Enduse8[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse8[23]	   ) > 0) then  ResultSummary[5]:Enduse8[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[23]"			Proj:ResultSummary[1]:Enduse9[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse9[23]	   ) > 0) then  ResultSummary[5]:Enduse9[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[23]"			Proj:ResultSummary[1]:Enduse13[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse13[23]	 ) > 0) then  ResultSummary[5]:Enduse13[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[23]"			Proj:ResultSummary[1]:Enduse14[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse14[23]	 ) > 0) then  ResultSummary[5]:Enduse14[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[23]"			Proj:ResultSummary[1]:Enduse99[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse99[23]	 ) > 0) then  ResultSummary[5]:Enduse99[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[23]"			Proj:ResultSummary[1]:Enduse98[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse98[23]	 ) > 0) then  ResultSummary[5]:Enduse98[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[23]"			Proj:ResultSummary[1]:Enduse11[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse11[23]	 ) > 0) then  ResultSummary[5]:Enduse11[23]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[23]"			Proj:ResultSummary[1]:Enduse10[23]	= {  if (LocalStatus( ResultSummary[5]:Enduse10[23]	 ) > 0) then  ResultSummary[5]:Enduse10[23]	   else  UNDEFINED  endif  }
  ; Proposed FUEL CO2 Emissions
	"Set ResultSummary[1]:Title1[24]"			Proj:ResultSummary[1]:Title1[24]		= {  if (LocalStatus( ResultSummary[5]:Title1[24]		 ) > 0) then  ResultSummary[5]:Title1[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[24]"			Proj:ResultSummary[1]:Title2[24]		= {  if (LocalStatus( ResultSummary[5]:Title2[24]		 ) > 0) then  ResultSummary[5]:Title2[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[24]"			Proj:ResultSummary[1]:Title3[24]		= {  if (LocalStatus( ResultSummary[5]:Title3[24]		 ) > 0) then  ResultSummary[5]:Title3[24]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[24]"			Proj:ResultSummary[1]:Enduse1[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse1[24]	   ) > 0) then  ResultSummary[5]:Enduse1[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[24]"			Proj:ResultSummary[1]:Enduse2[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse2[24]	   ) > 0) then  ResultSummary[5]:Enduse2[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[24]"			Proj:ResultSummary[1]:Enduse3[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse3[24]	   ) > 0) then  ResultSummary[5]:Enduse3[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[24]"			Proj:ResultSummary[1]:Enduse4[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse4[24]	   ) > 0) then  ResultSummary[5]:Enduse4[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[24]"			Proj:ResultSummary[1]:Enduse5[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse5[24]	   ) > 0) then  ResultSummary[5]:Enduse5[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[24]"			Proj:ResultSummary[1]:Enduse6[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse6[24]	   ) > 0) then  ResultSummary[5]:Enduse6[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[24]"			Proj:ResultSummary[1]:Enduse7[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse7[24]	   ) > 0) then  ResultSummary[5]:Enduse7[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[24]"			Proj:ResultSummary[1]:Enduse8[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse8[24]	   ) > 0) then  ResultSummary[5]:Enduse8[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[24]"			Proj:ResultSummary[1]:Enduse9[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse9[24]	   ) > 0) then  ResultSummary[5]:Enduse9[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[24]"			Proj:ResultSummary[1]:Enduse13[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse13[24]	 ) > 0) then  ResultSummary[5]:Enduse13[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[24]"			Proj:ResultSummary[1]:Enduse14[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse14[24]	 ) > 0) then  ResultSummary[5]:Enduse14[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[24]"			Proj:ResultSummary[1]:Enduse98[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse98[24]	 ) > 0) then  ResultSummary[5]:Enduse98[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[24]"			Proj:ResultSummary[1]:Enduse11[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse11[24]	 ) > 0) then  ResultSummary[5]:Enduse11[24]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[24]"			Proj:ResultSummary[1]:Enduse10[24]	= {  if (LocalStatus( ResultSummary[5]:Enduse10[24]	 ) > 0) then  ResultSummary[5]:Enduse10[24]	   else  UNDEFINED  endif  }
  ; Proposed Total CO2 Emissions
	"Set ResultSummary[1]:Title1[25]"			Proj:ResultSummary[1]:Title1[25]		= {  if (LocalStatus( ResultSummary[5]:Title1[25]		 ) > 0) then  ResultSummary[5]:Title1[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[25]"			Proj:ResultSummary[1]:Title2[25]		= {  if (LocalStatus( ResultSummary[5]:Title2[25]		 ) > 0) then  ResultSummary[5]:Title2[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[25]"			Proj:ResultSummary[1]:Title3[25]		= {  if (LocalStatus( ResultSummary[5]:Title3[25]		 ) > 0) then  ResultSummary[5]:Title3[25]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[25]"			Proj:ResultSummary[1]:Enduse1[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse1[25]	   ) > 0) then  ResultSummary[5]:Enduse1[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[25]"			Proj:ResultSummary[1]:Enduse2[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse2[25]	   ) > 0) then  ResultSummary[5]:Enduse2[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[25]"			Proj:ResultSummary[1]:Enduse3[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse3[25]	   ) > 0) then  ResultSummary[5]:Enduse3[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[25]"			Proj:ResultSummary[1]:Enduse4[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse4[25]	   ) > 0) then  ResultSummary[5]:Enduse4[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[25]"			Proj:ResultSummary[1]:Enduse5[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse5[25]	   ) > 0) then  ResultSummary[5]:Enduse5[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[25]"			Proj:ResultSummary[1]:Enduse6[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse6[25]	   ) > 0) then  ResultSummary[5]:Enduse6[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[25]"			Proj:ResultSummary[1]:Enduse7[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse7[25]	   ) > 0) then  ResultSummary[5]:Enduse7[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[25]"			Proj:ResultSummary[1]:Enduse8[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse8[25]	   ) > 0) then  ResultSummary[5]:Enduse8[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[25]"			Proj:ResultSummary[1]:Enduse9[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse9[25]	   ) > 0) then  ResultSummary[5]:Enduse9[25]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[25]"			Proj:ResultSummary[1]:Enduse13[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse13[25]	 ) > 0) then  ResultSummary[5]:Enduse13[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[25]"			Proj:ResultSummary[1]:Enduse14[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse14[25]	 ) > 0) then  ResultSummary[5]:Enduse14[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[25]"			Proj:ResultSummary[1]:Enduse99[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse99[25]	 ) > 0) then  ResultSummary[5]:Enduse99[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse98[25]"			Proj:ResultSummary[1]:Enduse98[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse98[25]	 ) > 0) then  ResultSummary[5]:Enduse98[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[25]"			Proj:ResultSummary[1]:Enduse11[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse11[25]	 ) > 0) then  ResultSummary[5]:Enduse11[25]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[25]"			Proj:ResultSummary[1]:Enduse10[25]	= {  if (LocalStatus( ResultSummary[5]:Enduse10[25]	 ) > 0) then  ResultSummary[5]:Enduse10[25]	   else  UNDEFINED  endif  }
  ; Standard Electric CO2 Emissions
	"Set ResultSummary[1]:Title1[27]"			Proj:ResultSummary[1]:Title1[27]		= {  if (LocalStatus( ResultSummary[5]:Title1[27]		 ) > 0) then  ResultSummary[5]:Title1[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[27]"			Proj:ResultSummary[1]:Title2[27]		= {  if (LocalStatus( ResultSummary[5]:Title2[27]		 ) > 0) then  ResultSummary[5]:Title2[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[27]"			Proj:ResultSummary[1]:Title3[27]		= {  if (LocalStatus( ResultSummary[5]:Title3[27]		 ) > 0) then  ResultSummary[5]:Title3[27]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[27]"			Proj:ResultSummary[1]:Enduse1[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse1[27]	   ) > 0) then  ResultSummary[5]:Enduse1[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[27]"			Proj:ResultSummary[1]:Enduse2[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse2[27]	   ) > 0) then  ResultSummary[5]:Enduse2[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[27]"			Proj:ResultSummary[1]:Enduse3[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse3[27]	   ) > 0) then  ResultSummary[5]:Enduse3[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[27]"			Proj:ResultSummary[1]:Enduse4[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse4[27]	   ) > 0) then  ResultSummary[5]:Enduse4[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[27]"			Proj:ResultSummary[1]:Enduse5[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse5[27]	   ) > 0) then  ResultSummary[5]:Enduse5[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[27]"			Proj:ResultSummary[1]:Enduse6[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse6[27]	   ) > 0) then  ResultSummary[5]:Enduse6[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[27]"			Proj:ResultSummary[1]:Enduse7[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse7[27]	   ) > 0) then  ResultSummary[5]:Enduse7[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[27]"			Proj:ResultSummary[1]:Enduse8[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse8[27]	   ) > 0) then  ResultSummary[5]:Enduse8[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[27]"			Proj:ResultSummary[1]:Enduse9[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse9[27]	   ) > 0) then  ResultSummary[5]:Enduse9[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[27]"			Proj:ResultSummary[1]:Enduse13[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse13[27]	 ) > 0) then  ResultSummary[5]:Enduse13[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[27]"			Proj:ResultSummary[1]:Enduse14[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse14[27]	 ) > 0) then  ResultSummary[5]:Enduse14[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[27]"			Proj:ResultSummary[1]:Enduse11[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse11[27]	 ) > 0) then  ResultSummary[5]:Enduse11[27]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[27]"			Proj:ResultSummary[1]:Enduse10[27]	= {  if (LocalStatus( ResultSummary[5]:Enduse10[27]	 ) > 0) then  ResultSummary[5]:Enduse10[27]	   else  UNDEFINED  endif  }
  ; Standard FUEL CO2 Emissions
	"Set ResultSummary[1]:Title1[28]"			Proj:ResultSummary[1]:Title1[28]		= {  if (LocalStatus( ResultSummary[5]:Title1[28]		 ) > 0) then  ResultSummary[5]:Title1[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[28]"			Proj:ResultSummary[1]:Title2[28]		= {  if (LocalStatus( ResultSummary[5]:Title2[28]		 ) > 0) then  ResultSummary[5]:Title2[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[28]"			Proj:ResultSummary[1]:Title3[28]		= {  if (LocalStatus( ResultSummary[5]:Title3[28]		 ) > 0) then  ResultSummary[5]:Title3[28]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[28]"			Proj:ResultSummary[1]:Enduse1[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse1[28]	   ) > 0) then  ResultSummary[5]:Enduse1[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[28]"			Proj:ResultSummary[1]:Enduse2[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse2[28]	   ) > 0) then  ResultSummary[5]:Enduse2[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[28]"			Proj:ResultSummary[1]:Enduse3[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse3[28]	   ) > 0) then  ResultSummary[5]:Enduse3[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[28]"			Proj:ResultSummary[1]:Enduse4[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse4[28]	   ) > 0) then  ResultSummary[5]:Enduse4[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[28]"			Proj:ResultSummary[1]:Enduse5[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse5[28]	   ) > 0) then  ResultSummary[5]:Enduse5[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[28]"			Proj:ResultSummary[1]:Enduse6[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse6[28]	   ) > 0) then  ResultSummary[5]:Enduse6[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[28]"			Proj:ResultSummary[1]:Enduse7[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse7[28]	   ) > 0) then  ResultSummary[5]:Enduse7[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[28]"			Proj:ResultSummary[1]:Enduse8[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse8[28]	   ) > 0) then  ResultSummary[5]:Enduse8[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[28]"			Proj:ResultSummary[1]:Enduse9[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse9[28]	   ) > 0) then  ResultSummary[5]:Enduse9[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse13[28]"			Proj:ResultSummary[1]:Enduse13[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse13[28]	 ) > 0) then  ResultSummary[5]:Enduse13[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[28]"			Proj:ResultSummary[1]:Enduse14[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse14[28]	 ) > 0) then  ResultSummary[5]:Enduse14[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[28]"			Proj:ResultSummary[1]:Enduse11[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse11[28]	 ) > 0) then  ResultSummary[5]:Enduse11[28]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[28]"			Proj:ResultSummary[1]:Enduse10[28]	= {  if (LocalStatus( ResultSummary[5]:Enduse10[28]	 ) > 0) then  ResultSummary[5]:Enduse10[28]	   else  UNDEFINED  endif  }
  ; Standard Total CO2 Emissions
	"Set ResultSummary[1]:Title1[29]"			Proj:ResultSummary[1]:Title1[29]		= {  if (LocalStatus( ResultSummary[5]:Title1[29]		 ) > 0) then  ResultSummary[5]:Title1[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[29]"			Proj:ResultSummary[1]:Title2[29]		= {  if (LocalStatus( ResultSummary[5]:Title2[29]		 ) > 0) then  ResultSummary[5]:Title2[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[29]"			Proj:ResultSummary[1]:Title3[29]		= {  if (LocalStatus( ResultSummary[5]:Title3[29]		 ) > 0) then  ResultSummary[5]:Title3[29]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[29]"			Proj:ResultSummary[1]:Enduse1[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse1[29]	   ) > 0) then  ResultSummary[5]:Enduse1[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[29]"			Proj:ResultSummary[1]:Enduse2[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse2[29]	   ) > 0) then  ResultSummary[5]:Enduse2[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[29]"			Proj:ResultSummary[1]:Enduse3[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse3[29]	   ) > 0) then  ResultSummary[5]:Enduse3[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[29]"			Proj:ResultSummary[1]:Enduse4[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse4[29]	   ) > 0) then  ResultSummary[5]:Enduse4[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[29]"			Proj:ResultSummary[1]:Enduse5[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse5[29]	   ) > 0) then  ResultSummary[5]:Enduse5[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[29]"			Proj:ResultSummary[1]:Enduse6[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse6[29]	   ) > 0) then  ResultSummary[5]:Enduse6[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[29]"			Proj:ResultSummary[1]:Enduse7[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse7[29]	   ) > 0) then  ResultSummary[5]:Enduse7[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[29]"			Proj:ResultSummary[1]:Enduse8[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse8[29]	   ) > 0) then  ResultSummary[5]:Enduse8[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[29]"			Proj:ResultSummary[1]:Enduse9[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse9[29]	   ) > 0) then  ResultSummary[5]:Enduse9[29]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse12[29]"			Proj:ResultSummary[1]:Enduse12[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse12[29]	 ) > 0) then  ResultSummary[5]:Enduse12[29]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[29]"			Proj:ResultSummary[1]:Enduse13[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse13[29]	 ) > 0) then  ResultSummary[5]:Enduse13[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[29]"			Proj:ResultSummary[1]:Enduse14[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse14[29]	 ) > 0) then  ResultSummary[5]:Enduse14[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[29]"			Proj:ResultSummary[1]:Enduse99[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse99[29]	 ) > 0) then  ResultSummary[5]:Enduse99[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[29]"			Proj:ResultSummary[1]:Enduse11[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse11[29]	 ) > 0) then  ResultSummary[5]:Enduse11[29]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[29]"			Proj:ResultSummary[1]:Enduse10[29]	= {  if (LocalStatus( ResultSummary[5]:Enduse10[29]	 ) > 0) then  ResultSummary[5]:Enduse10[29]	   else  UNDEFINED  endif  }
  ; Std-Prop Margin CO2 Emissions
	"Set ResultSummary[1]:Title1[30]"			Proj:ResultSummary[1]:Title1[30]		= {  if (LocalStatus( ResultSummary[5]:Title1[30]		 ) > 0) then  ResultSummary[5]:Title1[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title2[30]"			Proj:ResultSummary[1]:Title2[30]		= {  if (LocalStatus( ResultSummary[5]:Title2[30]		 ) > 0) then  ResultSummary[5]:Title2[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Title3[30]"			Proj:ResultSummary[1]:Title3[30]		= {  if (LocalStatus( ResultSummary[5]:Title3[30]		 ) > 0) then  ResultSummary[5]:Title3[30]		  else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse1[30]"			Proj:ResultSummary[1]:Enduse1[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse1[30]	   ) > 0) then  ResultSummary[5]:Enduse1[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse2[30]"			Proj:ResultSummary[1]:Enduse2[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse2[30]	   ) > 0) then  ResultSummary[5]:Enduse2[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse3[30]"			Proj:ResultSummary[1]:Enduse3[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse3[30]	   ) > 0) then  ResultSummary[5]:Enduse3[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse4[30]"			Proj:ResultSummary[1]:Enduse4[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse4[30]	   ) > 0) then  ResultSummary[5]:Enduse4[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse5[30]"			Proj:ResultSummary[1]:Enduse5[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse5[30]	   ) > 0) then  ResultSummary[5]:Enduse5[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse6[30]"			Proj:ResultSummary[1]:Enduse6[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse6[30]	   ) > 0) then  ResultSummary[5]:Enduse6[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse7[30]"			Proj:ResultSummary[1]:Enduse7[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse7[30]	   ) > 0) then  ResultSummary[5]:Enduse7[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse8[30]"			Proj:ResultSummary[1]:Enduse8[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse8[30]	   ) > 0) then  ResultSummary[5]:Enduse8[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse9[30]"			Proj:ResultSummary[1]:Enduse9[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse9[30]	   ) > 0) then  ResultSummary[5]:Enduse9[30]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse12[30]"			Proj:ResultSummary[1]:Enduse12[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse12[30]	 ) > 0) then  ResultSummary[5]:Enduse12[30]	   else  UNDEFINED  endif  }
 	"Set ResultSummary[1]:Enduse13[30]"			Proj:ResultSummary[1]:Enduse13[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse13[30]	 ) > 0) then  ResultSummary[5]:Enduse13[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse14[30]"			Proj:ResultSummary[1]:Enduse14[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse14[30]	 ) > 0) then  ResultSummary[5]:Enduse14[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse99[30]"			Proj:ResultSummary[1]:Enduse99[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse99[30]	 ) > 0) then  ResultSummary[5]:Enduse99[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse11[30]"			Proj:ResultSummary[1]:Enduse11[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse11[30]	 ) > 0) then  ResultSummary[5]:Enduse11[30]	   else  UNDEFINED  endif  }
	"Set ResultSummary[1]:Enduse10[30]"			Proj:ResultSummary[1]:Enduse10[30]	= {  if (LocalStatus( ResultSummary[5]:Enduse10[30]	 ) > 0) then  ResultSummary[5]:Enduse10[30]	   else  UNDEFINED  endif  }
END
;*************************************************************************



;*************************************************************************
;*************************************************************************

ENDFILE

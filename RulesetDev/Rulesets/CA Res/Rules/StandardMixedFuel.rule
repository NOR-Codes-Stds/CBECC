; -------------------------------------------------------------------------
; Rules pertaining to:   Standard Mixed-Fuel model defaulting and sim setup
; CEC Title-24 Residential Energy Code
; -------------------------------------------------------------------------
; Copyright (c) 2012-2017, California Energy Commission
; Copyright (c) 2012-2017, Wrightsoft Corporation
; All rights reserved.
; Redistribution and use in source and binary forms, with or without modification,
; are permitted provided that the following conditions are met:
; - Redistributions of source code must retain the above copyright notice, this
;   list of conditions and the following disclaimer.
; - Redistributions in binary form must reproduce the above copyright notice, this
;   list of conditions, the following disclaimer in the documentation and/or other
;   materials provided with the distribution.
; - Neither the name of the California Energy Commission nor the names of its
;   contributors may be used to endorse or promote products derived from this
;   software without specific prior written permission.
; DISCLAIMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
; THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
; NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION,
; WRIGHTSOFT CORPORATION, ITRON, INC. OR ANY OTHER AUTHOR OR COPYRIGHT HOLDER OF
; THIS SOFTWARE (COLLECTIVELY, THE "AUTHORS") BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
; OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
; OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
; ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  EACH LICENSEE AND SUBLICENSEE OF THE
; SOFTWARE AGREES NOT TO ASSERT ANY CLAIM AGAINST ANY OF THE AUTHORS RELATING TO
; THIS SOFTWARE, WHETHER DUE TO PERFORMANCE ISSUES, TITLE OR INFRINGEMENT ISSUES,
; STRICT LIABILITY OR OTHERWISE.
; -------------------------------------------------------------------------


;*************************************************************************
RULELIST "Default_StandardMixedFuel" 0 0 0 0
;*************************************************************************

   ; revised logic to ALWAYS perform StdMixedFuel run for 2019(+) EDR - since we need the generic 1 kW PV system modeled to calc min req'd PV TDV for std model EDR  - SAC 4/7/17
   ; revised logic to prevent StdMixedFuel run when user has inputs specifying a Reduced PV Requirement (to be used in std design simulation) - SAC 1/17/18
   ; revised logic to proceed w/ StdMixedFuel run when user specifies a Reduced PV Requirement > 0 (in case it exceeds what the SMF run indicates is required) - SAC 2/14/18
   "Toggle ON Proj:StdMixedFuelRunReqd"     Proj:StdMixedFuelRunReqd  = {
         if (IfValidAnd( UseReducedPVReqVal == 0 )) then  0
         else  1  endif  }

;   ; copy of rule from 'SetupProposedHVAC' rulelist needed here to determine if we have any elec spc htg
;   "Set HVACSys:ElecHeatAreaServed"    HVACSys:ElecHeatAreaServed  = {
;         if (HaveHeating < 0.5) then  0
;         else if (Type == 2)
;         then	if (T24RHeatingEquipment:UseElec( "CodeBase", Proj:StdDesignBase, "StdVer", Proj:StandardsVersion, "SysType", HtPumpSysTypeAbbrev ) > 0.5)
;               then	FloorAreaServed[1]  else  0  endif
;         else  if (T24RHeatingEquipment:UseElec( "CodeBase", Proj:StdDesignBase, "StdVer", Proj:StandardsVersion, "SysType", HeatSysTypeAbbrev ) > 0.5)
;               then	FloorAreaServed[1]  else  0  endif
;         endif endif  }
;   "Set Proj:StdMixedFuelRunReqd - Gas Spc Htg"    Proj:StdMixedFuelRunReqd  = {
;         if (SumAll( HVACSys:ElecHeatAreaServed ) > 0.5) then  1
;         else  UNCHANGED  endif  }
;
;   "Set HVACSys:GasCoolAreaServed"     HVACSys:GasCoolAreaServed  = {
;         if (HaveCooling < 0.5) then  0
;      ;   else if (Type == ??) then  FloorAreaServed[1]   - no GasCooling option yet
;         else  0  endif  }
;   "Set Proj:StdMixedFuelRunReqd - Elec Spc Clg"    Proj:StdMixedFuelRunReqd  = {
;         if (SumAll( HVACSys:GasCoolAreaServed ) > 0.5) then  1
;         else  UNCHANGED  endif  }
;
;   "Set HVACSys:ElecDHWAreaServed"     HVACSys:ElecDHWAreaServed  = {
;         if (HtEqpCanBeDHWHtr > 0 .AND. CanBeDHWHtr > 0 .AND.
;             ( DHWHeaterElementType == 0 .OR.   ; Electric Resistance
;               DHWHeaterElementType == 3 .OR.   ; Air-Source Heat Pump
;               DHWHeaterElementType == 6 ))     ; Ground-Source Heat Pump
;         then  DHWFloorAreaServed  else  0  endif  }
;   "Set Proj:StdMixedFuelRunReqd - Gas DHW"    Proj:StdMixedFuelRunReqd  = {
;         if ( SumAll( DHWHeater:AreaServedByFuel[1] ) > 0  .OR.   ; Elec
;              SumAll( DHWHeater:AreaServedByFuel[4] ) > 0  .OR.   ; HtPump
;              ( IsMultiFamily = 0 .AND.
;                SumAll( HVACSys:ElecDHWAreaServed ) > 0.5 )  .OR.
;              ( IsMultiFamily > 0 .AND.     ; assumption here is no DwellUnitType-source GAS DHW
;                SumAcrossIf( DwellUnitType:AssignedDUFlrArea, DwellUnitType:HtEqpUsedAsDHWHtr > 0 ) > 0.5 ) )
;         then  1
;         else  UNCHANGED  endif  }
;
;   "Set Proj:StdMixedFuelRunReqd - Gas Cooking"    Proj:StdMixedFuelRunReqd  = {
;         if ( ( IsMultiFamily = 0 .AND. Appl_HaveCook[1] .AND. ApplCookFuel[1] = 1 )  .OR. 
;              ( IsMultiFamily     .AND. 
;                SumAcrossIf( DwellUnitType:AssignedDUFlrArea, DwellUnitType:CookFuel = 1 ) > 0.5 ) )
;         then  1
;         else  UNCHANGED  endif  }
;
;   "Set Proj:StdMixedFuelRunReqd - Gas Clothes Dryer"    Proj:StdMixedFuelRunReqd  = {
;         if ( ( IsMultiFamily = 0 .AND. Appl_HaveDryer[1] .AND. ApplDryerFuel[1] = 1 )  .OR. 
;              ( IsMultiFamily     .AND. 
;                SumAcrossIf( DwellUnitType:AssignedDUFlrArea, DwellUnitType:HaveDryer_Elec = 1 ) > 0.5 ) )
;         then  1
;         else  UNCHANGED  endif  }

END
;*************************************************************************

;*************************************************************************    ; called AFTER BudgetConversion
RULELIST "SetupRun_StandardMixedFuel" 1 0 1 0
;*************************************************************************

;"dbg BEMProc details"  Proj:Action = {  StoreBEMProc( "beginning SetupRun_StandardMixedFuel", 0 )  }

	;"Set Proj:RunAbbrev"		Proj:RunAbbrev			= {	"smf"            }
	"Set Proj:RunID"				Proj:RunID				= {	"StdMixedFuel"  }
	"Set Proj:RunIDProcFile"	Proj:RunIDProcFile	= {	" - SMF"         }
   "Set Proj:IsStdRun"        Proj:IsStdRun        = {  0  }      ; SAC 07/18/23 (2025)
   "Set Proj:IsStdOrSMFRun"   Proj:IsStdOrSMFRun   = {  1  } 
   "Set Proj:IsPropOrUserRun" Proj:IsPropOrUserRun = {  0  }      ; SAC 11/08/24
   ;; SAC 6/9/17 - replaced above w/ below to support multiple-orientation analysis
	;"Set Proj:RunID"					Proj:RunID					= {	switch (RunAbbrev)
	;																					case  "smf"   :  "StdMixedFuel"
	;																					default       :  "StdMixedFuel-x"
	;																				endswitch  }
	;"Set Proj:RunIDProcFile"		Proj:RunIDProcFile		= {	switch (RunAbbrev)
	;																					case  "smf"   :  " - SMF"
	;																					default       :  " - SMF-x"
	;																				endswitch  }

	;"Set Proj:FrontOrientation"	Proj:FrontOrientation	= {	if (AllOrientations < 0.5) then	UNCHANGED
	;																				else	switch (RunAbbrev)
	;																							default :	UNCHANGED
	;																						endswitch  endif  }
	;"Set Proj:OrientAbbrev"			Proj:OrientAbbrev			= {	if (AllOrientations < 0.5) then	UNDEFINED
	;																				else	switch (RunAbbrev)
	;																							default :	UNDEFINED
	;																						endswitch  endif  }
	;"Set Proj:OrientName"			Proj:OrientName			= {	if (AllOrientations < 0.5) then	UNDEFINED
	;																				else	switch (RunAbbrev)
	;																							default :	UNDEFINED
	;																						endswitch  endif  }

; SAC 1/17/18 - not necessary for StdMixedFuel, as A2W-HP Htg would already be swapped out in BudgetConversion
;   ; replace A2W-HP Heating equipment assigned to DHWSystems w/ Gas DHWHeaters
;   "Replace DHWSys assignments to A2W-HP Htg equip w/ Gas DHWHeaters"      Proj:Action  = {
;         if (IsMultiFamily = 0 .AND. SumAll( HVACSys:DHWFloorAreaServed ) > 0.1)
;         then  EvalRulelist( "SetupRun_ReplaceA2WHPDHWHtrWithGas_SFam" )
;         else  UNCHANGED  endif  }
;   "Replace DwellUnitType A2W-HP Htg equip doing DHW w/ Gas DHWHeaters"    DwellUnitType:Action  = {
;         if (Proj:IsMultiFamily .AND. IfValidAnd( HVACSysType > 0.5 ) .AND.
;             IfValidAnd( HtEqpCanBeDHWHtr > 0 ) .AND. IfValidAnd( ServesAsDHWHtr > 0 ))
;         then  EvalRulelist( "SetupRun_ReplaceA2WHPDHWHtrWithGas_MFam", 1 )
;         else  UNCHANGED  endif  }

; updated elec & hp heating rules to process same for SFam & MFam, since HVACSys objects already setup in BudgetConversion (for SMF run)
   ; replace Elec Heating equipment w/ Gas Furnace
   "Convert Elec HVACSys Htg to Gas Furnace - SFam"      HVACSys:Action  = {
         if (HaveHeating < 0.5 .OR. Type == 2 .OR.
             FloorAreaServed[1] < 1 .OR. LocalStatus( HeatSysTypeAbbrev ) < 1) then  UNCHANGED
         else if (T24RHeatingEquipment:UseElec( "CodeBase", Proj:StdDesignBase, "StdVer", Proj:StandardsVersion, "SysType", HeatSysTypeAbbrev ) < 0.5)
         then  UNCHANGED
         else  EvalRulelist( "SetupRun_ConvertHVACSysHtgToGasFurn_SFam", 1 )  endif endif  }
;   "Convert Elec HVACSys Htg to Gas Furnace - MFam"      DwellUnitType:Action  = {
;         if (Proj:IsMultiFamily = 0 .OR. HVACSysType == 2 .OR. IfValidAnd( NumHeatEquipTypes >= 1 )==0 .OR.
;             AssignedDUFlrArea < 1 .OR. LocalStatus( HeatEqpTypeAbbrev ) < 1) then  UNCHANGED
;         else if (T24RHeatingEquipment:UseElec( "CodeBase", Proj:StdDesignBase, "StdVer", Proj:StandardsVersion, "SysType", HeatEqpTypeAbbrev ) < 0.5)
;         then  UNCHANGED
;         else  EvalRulelist( "SetupRun_ConvertHVACSysHtgToGasFurn_MFam", 1 )  endif endif  }

   ; replace Heat Pump HVAC system(s) with A/C-Furnace
   "Convert HtPump HVACSys to A/C-Furnace - SFam"   HVACSys:Action  = {
         if (HaveHeating < 0.5 .OR. Type != 2 .OR. FloorAreaServed[1] < 1) then  UNCHANGED
         else  EvalRulelist( "SetupRun_ConvertHtPumpHVACSysToACFurn_SFam", 1 )  endif  }
;   "Convert HtPump HVACSys to A/C-Furnace - MFam"   DwellUnitType:Action  = {
;         if (Proj:IsMultiFamily = 0 .OR. HVACSysType != 2 .OR. AssignedDUFlrArea < 1) then  UNCHANGED
;         else  EvalRulelist( "SetupRun_ConvertHtPumpHVACSysToACFurn_MFam", 1 )  endif  }

   ; replace Gas Cooling equipment w/ Split A/C

; SAC 1/17/18 - removed in conversion from PropMixedFuel to StdMixedFuel since HVAC and defaulting already in good shape
;      ; SAC 12/18/17 - revised rule to evaluate separate rules to re-construct HVACSys objects for MFam models (tic #936)
;	"Evaluate HVAC defaulting rules"	Proj:Action	= {
;         if (Proj:IsMultiFamily)
;         then  EvalRulelist( "MultiFamilyAnalysisPrep" )
;         else  EvalRulelist( "Default_AllHVAC" )  endif  }
;   "Additional defaulting for MFam models"   Proj:Action  = {
;         if (Proj:IsMultiFamily)
;         then  EvalRulelist( "ProposedInput" )
;         else  UNCHANGED  endif  }

   ; switch Electric DHW Heaters to Gas
   "Convert Elec DHWHeaters to Gas"    DHWHeater:Action  = {
         if (IfValidAnd( FloorAreaServed > 1 )==0 .OR. HeaterElementType == 1) then  UNCHANGED
         else if (HeaterElementType == 0 .AND. HeaterType == 2)     ; Elec - large inst.
         then  EvalRulelist( "SetupRun_ConvertDHWHtrToGasLrgInst", 1 )
         else if (HeaterElementType == 0 .AND. HeaterType == 3)     ; Elec - large stor.
         then  EvalRulelist( "SetupRun_ConvertDHWHtrToGasLrgStor", 1 )
         else  EvalRulelist( "SetupRun_ConvertDHWHtrToGas", 1 )  endif endif endif  }
   "Remove DHWHeater ElecMiniTank"     DHWHeater:HasElecMiniTank  = {
         if (IfValidAnd( AllowElecMiniTank > 0 ) .AND.
             IfValidAnd( AllowElecMiniTank > 0 ))
         then  0  else  UNCHANGED  endif  }

   "Blast DHWSys:HPWHSizingReqd flag"     DHWSys:HPWHSizingReqd    = {  UNDEFINED  }      ; HPWHSIZE - SAC 12/16/18
   "Blast Proj:CSE_HPWHSizingReqd"        Proj:CSE_HPWHSizingReqd  = {  UNDEFINED  }

   "Set Proj:SFamUserCompactFactor to prevent SMF Compact Distrib"   Proj:SFamUserCompactFactor  = {  1  }     ; SAC 6/13/20 - fixed bug where SMF run of Elec DHWSys modeled w/ Compact Distrib
   "Set DwellUnitType:CompactFactor to prevent SMF Compact Distrib"  DwellUnitType:CompactFactor = {  1  }     ; SAC 6/13/20 - fixed bug where SMF run of Elec DHWSys modeled w/ Compact Distrib

   "remove any MFam Std design DWHRSys1-1 objects"    DwellUnitType:DWHRSysRef1[1] =                  ; SAC 6/16/20 (2022AllElecStd)
      {  if (LocalCompAssigned( DWHRSysRef1[1] )) then  DeleteComp()  else  UNCHANGED  endif  }
   "remove any MFam Std design DWHRSys1-2 objects"    DwellUnitType:DWHRSysRef1[2] =
      {  if (LocalCompAssigned( DWHRSysRef1[2] )) then  DeleteComp()  else  UNCHANGED  endif  }
   "remove any MFam Std design DWHRSys2-1 objects"    DwellUnitType:DWHRSysRef2[1] =
      {  if (LocalCompAssigned( DWHRSysRef2[1] )) then  DeleteComp()  else  UNCHANGED  endif  }
   "remove any MFam Std design DWHRSys2-2 objects"    DwellUnitType:DWHRSysRef2[2] =
      {  if (LocalCompAssigned( DWHRSysRef2[2] )) then  DeleteComp()  else  UNCHANGED  endif  }
   "remove any MFam Std design DWHRSys3-1 objects"    DwellUnitType:DWHRSysRef3[1] =
      {  if (LocalCompAssigned( DWHRSysRef3[1] )) then  DeleteComp()  else  UNCHANGED  endif  }
   "remove any MFam Std design DWHRSys3-2 objects"    DwellUnitType:DWHRSysRef3[2] =
      {  if (LocalCompAssigned( DWHRSysRef3[2] )) then  DeleteComp()  else  UNCHANGED  endif  }

; TO DO - test whether runs w/ HVAC-supplied DHW heating prodiuce valid StdMixedFuel runs
;              ( IsMultiFamily = 0 .AND.
;                SumAll( HVACSys:ElecDHWAreaServed ) > 0.5 )  .OR.
;              ( IsMultiFamily > 0 .AND.     ; assumption here is no DwellUnitType-source GAS DHW
;                SumAcrossIf( DwellUnitType:AssignedDUFlrArea, DwellUnitType:HtEqpUsedAsDHWHtr > 0 ) > 0.5 ) )
;        0, HVACSys:DHWHeaterElementType,  1
;        2,          0, "Electric Resistance"
;        2,          1, "Gas"
;        2,          3, "Air-Source Heat Pump"
;        2,          6, "Ground-Source Heat Pump"

   ; switch Cooking Fuel from Electric to Gas
   "Switch SFam Cooking Fuel from Elec to Gas"     Proj:ApplCookFuel[1]  = {
         if (IsMultiFamily = 0 .AND. Appl_HaveCook[1] .AND. ApplCookFuel[1] = 1)
         then  2   ; Gas
         else  UNCHANGED  endif  }
   "Switch MFam Cooking Fuel from Elec to Gas"     DwellUnitType:CookFuel  = {
         if (Proj:IsMultiFamily = 0 .OR. IfValidAnd( AssignedDUFlrArea > 1 )==0)
         then  UNCHANGED
         else if (CookFuel = 1)
         then  2   ; Gas
         else  UNCHANGED  endif endif  }

   ; switch Clothes Dryer Fuel from Electric to Gas
   "Switch SFam Clothes Dryer Fuel from Elec to Gas"     Proj:ApplDryerFuel[1]  = {
         if (IsMultiFamily = 0 .AND. Appl_HaveDryer[1] .AND. ApplDryerFuel[1] = 1)
         then  2   ; Gas
         else  UNCHANGED  endif  }
   "Switch MFam Clothes Dryer Fuel from Elec to Gas"     DwellUnitType:DryerFuel  = {
         if (Proj:IsMultiFamily = 0 .OR. IfValidAnd( AssignedDUFlrArea > 1 )==0)
         then  UNCHANGED
         else if (DryerFuel = 1)
         then  2   ; Gas
         else  UNCHANGED  endif endif  }

   ;"Set Proj:SavePVWDCSysTotal - archive Proposed model sum of valid PV array DC rated output"    ; SAC 12/29/17
   ;   Proj:SavePVWDCSysTotal  = {
   ;      if (RunAbbrev == "pmf" .OR. RunAbbrev == "pmf-N")
   ;      then  if (IfValidAnd( Proj:PVWDCSysTotal > 0 )==0) then  UNDEFINED
   ;            else  Proj:PVWDCSysTotal  endif
   ;      else  UNCHANGED  endif  }

   ; toggle off Battery and setup generic, 1 kW PV system
   "Zero-out Battery (Proj:BattMaxCap)"   Proj:BattMaxCap  = {  0  }
   "Set Proj:PVWInputs to Simplified"     Proj:PVWInputs   = {  0  }   ; "Simplified"
   "Set Proj:PVWDCSysSize[1] to 1.0"      Proj:PVWDCSysSize[1]   = {  1  }
   "Set Proj:PVWModuleType[1] to Std"     Proj:PVWModuleType[1]  = {  1  }   ; "Standard"
   "Set Proj:PVWArrayType[1] to Fixed"    Proj:PVWArrayType[1]   = {  1  }   ; "Fixed (open rack)"    ; SAC 10/9/18 (tic #1047)
   "Set Proj:PVWPwrElec[1] to None"       Proj:PVWPwrElec[1]     = {  0  }   ; "- none -"    ; SAC 1/15/19 (tic #1046)
   "Toggle on CFI (Proj:PVWCalFlexInstType[1])" Proj:PVWCalFlexInstType[1] = {  1  }   ; SAC 1/20/20 (tic #1189)
   "Toggle on CFI (Proj:PVWCalFlexInstall[1])"  Proj:PVWCalFlexInstall[1]  = {  1  }
   "Blast Proj:PVWCoverRefrInd[1]"        Proj:PVWCoverRefrInd[1]  = {  UNDEFINED  }      ; SAC 4/20/20
   "Blast Proj:PVWTempCoeff[1]"           Proj:PVWTempCoeff[1]     = {  UNDEFINED  }      ; SAC 4/20/20
   "Blast Proj:PVWDCSysSize[2]"           Proj:PVWDCSysSize[2]   = {  UNDEFINED  }
   "Blast Proj:PVWDCSysSize[3]"           Proj:PVWDCSysSize[3]   = {  UNDEFINED  }
   "Blast Proj:PVWDCSysSize[4]"           Proj:PVWDCSysSize[4]   = {  UNDEFINED  }
   "Blast Proj:PVWDCSysSize[5]"           Proj:PVWDCSysSize[5]   = {  UNDEFINED  }

;"dbg BEMProc details"  Proj:Action = {  StoreBEMProc( "at end of SetupRun_StandardMixedFuel", 0 )  }
;"dbg" Proj:Action = {  MessageBox( "End of 'SetupRun_StandardMixedFuel' for run %s", RunAbbrev )  }

END
;*************************************************************************


;*************************************************************************
RULELIST "SetupRun_ReplaceA2WHPDHWHtrWithGas_SFam" 1 0 1 0
;*************************************************************************

   "Replace A2W HP DHWHtr w/ Gas - 1"  DHWSys:DHWHeater[1]  = {
         if (IfValidAnd( FloorAreaServed[1] > 1 )==0 .OR. IfValidAnd( HeaterMultFlt[1] > 0 )==0 .OR.
             LocalCompAssigned( DHWHeater[1] ) != ComponentType( "HVACSys" )) then  UNCHANGED
         else  CreateComp( DHWHeater, Name + "-whtr1" )  endif  }
   "Replace A2W HP DHWHtr w/ Gas - 2"  DHWSys:DHWHeater[2]  = {
         if (IfValidAnd( FloorAreaServed[1] > 1 )==0 .OR. IfValidAnd( HeaterMultFlt[2] > 0 )==0 .OR.
             LocalCompAssigned( DHWHeater[2] ) != ComponentType( "HVACSys" )) then  UNCHANGED
         else  CreateComp( DHWHeater, Name + "-whtr2" )  endif  }
   "Replace A2W HP DHWHtr w/ Gas - 3"  DHWSys:DHWHeater[3]  = {
         if (IfValidAnd( FloorAreaServed[1] > 1 )==0 .OR. IfValidAnd( HeaterMultFlt[3] > 0 )==0 .OR.
             LocalCompAssigned( DHWHeater[3] ) != ComponentType( "HVACSys" )) then  UNCHANGED
         else  CreateComp( DHWHeater, Name + "-whtr3" )  endif  }
   "Replace A2W HP DHWHtr w/ Gas - 4"  DHWSys:DHWHeater[4]  = {
         if (IfValidAnd( FloorAreaServed[1] > 1 )==0 .OR. IfValidAnd( HeaterMultFlt[4] > 0 )==0 .OR.
             LocalCompAssigned( DHWHeater[4] ) != ComponentType( "HVACSys" )) then  UNCHANGED
         else  CreateComp( DHWHeater, Name + "-whtr4" )  endif  }
   "Replace A2W HP DHWHtr w/ Gas - 5"  DHWSys:DHWHeater[5]  = {
         if (IfValidAnd( FloorAreaServed[1] > 1 )==0 .OR. IfValidAnd( HeaterMultFlt[5] > 0 )==0 .OR.
             LocalCompAssigned( DHWHeater[5] ) != ComponentType( "HVACSys" )) then  UNCHANGED
         else  CreateComp( DHWHeater, Name + "-whtr5" )  endif  }
   "Replace A2W HP DHWHtr w/ Gas - 6"  DHWSys:DHWHeater[6]  = {
         if (IfValidAnd( FloorAreaServed[1] > 1 )==0 .OR. IfValidAnd( HeaterMultFlt[6] > 0 )==0 .OR.
             LocalCompAssigned( DHWHeater[6] ) != ComponentType( "HVACSys" )) then  UNCHANGED
         else  CreateComp( DHWHeater, Name + "-whtr6" )  endif  }
END
;*************************************************************************
RULELIST "SetupRun_ReplaceA2WHPDHWHtrWithGas_MFam" 1 0 1 0
;*************************************************************************

   "Toggle off DwellUnitType:ServesAsDHWHtr"    DwellUnitType:ServesAsDHWHtr  = {  0  }

   ; following rules based on 'OneTimeAnalysisPrep_CreateDwellUnitDHW' rulelist
	"Set DwellUnitType:NumDHWSysTypes to 1"		DwellUnitType:NumDHWSysTypes	= {	1  }
	"Create new DHWSys to serve this DUT"			DwellUnitType:DHWSysRef[1]		= {	CreateComp( DHWSys, Name + "-dhwsys" )  }

	"Set new DUT DHWSys:SystemType"			DwellUnitType:DHWSysRef[1]:SystemType		= {	DHWSystemType  }
	"Set new DUT DHWSys:SolFracType"			DwellUnitType:DHWSysRef[1]:SolFracType		= {	DHWSolFracType  }
	"Set new DUT DHWSys:SolFracAnn"			DwellUnitType:DHWSysRef[1]:SolFracAnn		= {	DHWSolFracAnn   }
	"Set new DUT DHWSys:SolFracMon[1]"		DwellUnitType:DHWSysRef[1]:SolFracMon[1]	= {	DHWSolFracMon[1]   }
	"Set new DUT DHWSys:SolFracMon[2]"		DwellUnitType:DHWSysRef[1]:SolFracMon[2]	= {	DHWSolFracMon[2]   }
	"Set new DUT DHWSys:SolFracMon[3]"		DwellUnitType:DHWSysRef[1]:SolFracMon[3]	= {	DHWSolFracMon[3]   }
	"Set new DUT DHWSys:SolFracMon[4]"		DwellUnitType:DHWSysRef[1]:SolFracMon[4]	= {	DHWSolFracMon[4]   }
	"Set new DUT DHWSys:SolFracMon[5]"		DwellUnitType:DHWSysRef[1]:SolFracMon[5]	= {	DHWSolFracMon[5]   }
	"Set new DUT DHWSys:SolFracMon[6]"		DwellUnitType:DHWSysRef[1]:SolFracMon[6]	= {	DHWSolFracMon[6]   }
	"Set new DUT DHWSys:SolFracMon[7]"		DwellUnitType:DHWSysRef[1]:SolFracMon[7]	= {	DHWSolFracMon[7]   }
	"Set new DUT DHWSys:SolFracMon[8]"		DwellUnitType:DHWSysRef[1]:SolFracMon[8]	= {	DHWSolFracMon[8]   }
	"Set new DUT DHWSys:SolFracMon[9]"		DwellUnitType:DHWSysRef[1]:SolFracMon[9]	= {	DHWSolFracMon[9]   }
	"Set new DUT DHWSys:SolFracMon[10]"		DwellUnitType:DHWSysRef[1]:SolFracMon[10]	= {	DHWSolFracMon[10]  }
	"Set new DUT DHWSys:SolFracMon[11]"		DwellUnitType:DHWSysRef[1]:SolFracMon[11]	= {	DHWSolFracMon[11]  }
	"Set new DUT DHWSys:SolFracMon[12]"		DwellUnitType:DHWSysRef[1]:SolFracMon[12]	= {	DHWSolFracMon[12]  }

	"Create new DHWHeater to serve this DUT"		DwellUnitType:DHWSysRef[1]:DHWHeater[1]	= {	CreateComp( DHWHeater, Name + "-dhwhtr" )  }
   ; allow this DHWHeater to fully default (?)
END
;*************************************************************************


;*************************************************************************
RULELIST "SetupRun_ConvertHtPumpHVACSysToACFurn_SFam" 1 0 1 0
;*************************************************************************

   "Set HVACSys:Type"      HVACSys:Type  = {  1  }  ; 'Other Heating and Cooling System'

   "Set HVACSys:NumHeatSystemTypes"    HVACSys:NumHeatSystemTypes  = {  1  }
   "Create HVACSys:HeatSystem[1] (furnace)"     HVACSys:HeatSystem[1]  = {
         CreateComp( HVACHeat, Name + "-furn" )  }
   "Set HVACSys:HeatSystem[1]:Type"    HVACSys:HeatSystem[1]:Type  = {  
         1  }   ; 'CntrlFurnace - Fuel-fired central furnace'
   "Set HVACSys:HeatSystemCount[1]"    HVACSys:HeatSystemCount[1]  = {  1  }

   "Set HVACSys:NumCoolSystemTypes"    HVACSys:NumCoolSystemTypes  = {  1  }
   "Create HVACSys:CoolSystem[1] ()"     HVACSys:CoolSystem[1]  = {
         CreateComp( HVACCool, Name + "-ac" )  }
   "Set HVACSys:CoolSystem[1]:Type"    HVACSys:CoolSystem[1]:Type  = {  
         2  }   ; 'SplitAirCond - Split air conditioning system'
   "Set HVACSys:CoolSystemCount[1]"    HVACSys:CoolSystemCount[1]  = {  1  }

;   "Create/replace HVACSys:DistribSystem"    HVACSys:DistribSystem  = {
;         CreateComp( HVACDist, Name + "-ducts" )  }
;   "Create/replace HVACSys:Fan"              HVACSys:Fan  = {
;         CreateComp( HVACFan,  Name + "-fan" )  }
; SAC 1/17/18 - prevent creation of duplicate HVACDist & HVACFan
   "Create/replace HVACSys:DistribSystem (iff not present)"
      HVACSys:DistribSystem  = {
         if (LocalCompAssigned( DistribSystem )) then  UNCHANGED
         else  CreateComp( HVACDist, Name + "-ducts" )  endif  }
   "Create/replace HVACSys:Fan (iff not present)"
      HVACSys:Fan  = {
         if (LocalCompAssigned( Fan )) then  UNCHANGED
         else  CreateComp( HVACFan,  Name + "-fan" )  endif  }
   ; SAC 2/6/18 - ensure proper W/CFM in SMF model (tic #928)
	"Set fan Watts per CFM to <codeVal> for furnace fan"
		HVACSys:Fan:WperCFMCool	= {
         T24RClimateZoneCodeBase:GFurnWperCFM( "ClimateZone", Proj:ClimateZone, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )  }
END
;*************************************************************************
RULELIST "SetupRun_ConvertHtPumpHVACSysToACFurn_MFam" 1 0 1 0
;*************************************************************************

   "Set DwellUnitType:HVACSysType"           DwellUnitType:HVACSysType  = {  1  }  ; 'Other Heating and Cooling System'

   "Set DwellUnitType:NumHeatEquipTypes"     DwellUnitType:NumHeatEquipTypes  = {  1  }
   "Create DwellUnitType:HVACHeatRef[1] (furnace)"    DwellUnitType:HVACHeatRef[1]  = {
         CreateComp( HVACHeat, Name + "-furn" )  }
   "Set DwellUnitType:HVACHeatRef[1]:Type"   DwellUnitType:HVACHeatRef[1]:Type  = {  
         1  }   ; 'CntrlFurnace - Fuel-fired central furnace'
   "Set DwellUnitType:HeatEquipCount[1]"     DwellUnitType:HeatEquipCount[1]  = {  1  }

   "Set DwellUnitType:NumCoolEquipTypes"     DwellUnitType:NumCoolEquipTypes  = {  1  }
   "Create DwellUnitType:HVACCoolRef[1] ()"     DwellUnitType:HVACCoolRef[1]  = {
         CreateComp( HVACCool, Name + "-ac" )  }
   "Set DwellUnitType:HVACCoolRef[1]:Type"   DwellUnitType:HVACCoolRef[1]:Type  = {  
         2  }   ; 'SplitAirCond - Split air conditioning system'
   "Set DwellUnitType:CoolEquipCount[1]"     DwellUnitType:CoolEquipCount[1]  = {  1  }

   ; SAC 12/18/17 - revised rule to only create new HVACDist if one not currently assigned or set to no ducts (tic #936)
   "Create/replace DwellUnitType:HVACDistRef"   DwellUnitType:HVACDistRef  = {
         if (LocalCompAssigned( HVACDistRef ) == 0)
         then  CreateComp( HVACDist, Name + "-ducts" )
         else if (IfValidAnd( HVACDistRef:Type > 0 )==0)
         then  CreateComp( HVACDist, Name + "-ducts" )
         else  UNCHANGED  endif endif  }
   "Create/replace DwellUnitType:HVACFanRef"    DwellUnitType:HVACFanRef  = {
         if (LocalCompAssigned( HVACFanRef ) == 0)
         then  CreateComp( HVACFan,  Name + "-fan" )
         else if (IfValidAnd( HVACFanRef:Type > 0 )==0)
         then  CreateComp( HVACFan,  Name + "-fan" )
         else  UNCHANGED  endif endif  }
END
;*************************************************************************


;*************************************************************************
RULELIST "SetupRun_ConvertHVACSysHtgToGasFurn_SFam" 1 0 1 0
;*************************************************************************

   "Set HVACSys:NumHeatSystemTypes"    HVACSys:NumHeatSystemTypes  = {  1  }
   "Create HVACSys:HeatSystem[1] (furnace)"     HVACSys:HeatSystem[1]  = {
         CreateComp( HVACHeat, Name + "-furn" )  }
   "Set HVACSys:HeatSystem[1]:Type"    HVACSys:HeatSystem[1]:Type  = {  
         1  }   ; 'CntrlFurnace - Fuel-fired central furnace'
   "Set HVACSys:HeatSystemCount[1]"    HVACSys:HeatSystemCount[1]  = {  1  }

   "Create/replace HVACSys:DistribSystem (iff not present)"
      HVACSys:DistribSystem  = {
         if (LocalCompAssigned( DistribSystem )) then  UNCHANGED
         else  CreateComp( HVACDist, Name + "-ducts" )  endif  }
   "Create/replace HVACSys:Fan (iff not present)"
      HVACSys:Fan  = {
         if (LocalCompAssigned( Fan )) then  UNCHANGED
         else  CreateComp( HVACFan,  Name + "-fan" )  endif  }
END
;*************************************************************************
RULELIST "SetupRun_ConvertHVACSysHtgToGasFurn_MFam" 1 0 1 0
;*************************************************************************

   "Set DwellUnitType:NumHeatEquipTypes"     DwellUnitType:NumHeatEquipTypes  = {  1  }
   "Create DwellUnitType:HVACHeatRef[1] (furnace)"    DwellUnitType:HVACHeatRef[1]  = {
         CreateComp( HVACHeat, Name + "-furn" )  }
   "Set DwellUnitType:HVACHeatRef[1]:Type"   DwellUnitType:HVACHeatRef[1]:Type  = {  
         1  }   ; 'CntrlFurnace - Fuel-fired central furnace'
   "Set DwellUnitType:HeatEquipCount[1]"     DwellUnitType:HeatEquipCount[1]  = {  1  }

   "Create/replace DwellUnitType:HVACDistRef (iff not present)"
      DwellUnitType:HVACDistRef  = {
         if (LocalCompAssigned( HVACDistRef )) then  UNCHANGED
         else  CreateComp( HVACDist, Name + "-ducts" )  endif  }
   "Create/replace DwellUnitType:HVACFanRef (iff not present)"
      DwellUnitType:HVACFanRef  = {
         if (LocalCompAssigned( HVACFanRef )) then  UNCHANGED
         else  CreateComp( HVACFan,  Name + "-fan" )  endif  }
END
;*************************************************************************


;*************************************************************************
RULELIST "SetupRun_ConvertDHWHtrToGasLrgInst" 1 0 1 0
   "Set DHWHeater:HeaterElementType to Gas"  DHWHeater:HeaterElementType  = {  "Gas"  }
   "Set DHWHeater:TankType to LrgInst"       DHWHeater:TankType  = {  "Large Instantaneous"  }
END
;*************************************************************************
RULELIST "SetupRun_ConvertDHWHtrToGasLrgStor" 1 0 1 0
   "Set DHWHeater:HeaterElementType to Gas"  DHWHeater:HeaterElementType  = {  "Gas"  }
   "Set DHWHeater:TankType to LrgStor"       DHWHeater:TankType  = {  "Large Storage"  }
END
;*************************************************************************
RULELIST "SetupRun_ConvertDHWHtrToGas" 1 0 1 0
   "Set DHWHeater:HeaterElementType to Gas"  DHWHeater:HeaterElementType  = {  "Gas"  }
END
;*************************************************************************


;*************************************************************************
;*************************************************************************

ENDFILE















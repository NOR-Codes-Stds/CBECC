; -------------------------------------------------------------------------
; Rules pertaining to:   defaulting, CSE simulation inputs & reporting for new VCHP3 equipment
; CEC Title-24 Residential Energy Code
; -------------------------------------------------------------------------
; Copyright (c) 2012-2024, California Energy Commission
; Copyright (c) 2024, SAC Software Solutions, LLC
; All rights reserved.
; Redistribution and use in source and binary forms, with or without modification,
; are permitted provided that the following conditions are met:
; - Redistributions of source code must retain the above copyright notice, this
;   list of conditions and the following disclaimer.
; - Redistributions in binary form must reproduce the above copyright notice, this
;   list of conditions, the following disclaimer in the documentation and/or other
;   materials provided with the distribution.
; - Neither the name of the California Energy Commission nor the names of its
;   contributors may be used to endorse or promote products derived from this
;   software without specific prior written permission.
; DISCLAIMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
; THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
; NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION,
; SAC SOFTWARE SOLUTIONS, WRIGHTSOFT CORPORATION, ITRON, INC. OR ANY OTHER AUTHOR
; OR COPYRIGHT HOLDER OF THIS SOFTWARE (COLLECTIVELY, THE "AUTHORS") BE LIABLE FOR
; ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
; OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
; IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  EACH LICENSEE AND SUBLICENSEE OF
; THE SOFTWARE AGREES NOT TO ASSERT ANY CLAIM AGAINST ANY OF THE AUTHORS RELATING
; TO THIS SOFTWARE, WHETHER DUE TO PERFORMANCE ISSUES, TITLE OR INFRINGEMENT
; ISSUES, STRICT LIABILITY OR OTHERWISE.
; -------------------------------------------------------------------------

ENUM_PROPERTIES_VALUE   ; ensures retrieval/logic/us of enum properties assume numeric value (alternative is ENUM_PROPERTIES_STRING)

;************************************************************************* SAC 05/13/24 (tic #1379)
RULELIST "HtPumpPerfMap_Defaulting" 1 0 0 0
;*************************************************************************

   "Reset any VCHP2 inputs needing it"    HVACHtPump:Action =     ; SAC 05/14/24 (tic #1379)
      {  if (LocalStatus( Cap05 ) < 6) then  UNCHANGED
         else  EvalRulelist( "HtPumpPerfMap_BlastVCHP2Inputs", 1 )  endif  }
      ;{  if (LocalStatus( Cap05 ) < 6 .AND. LocalStatus( Cap17 ) < 6 .AND.
      ;       LocalStatus( Cap95 ) < 6) then  UNCHANGED

   "default HVACHtPump:Speeds"      HVACHtPump:Speeds =
      {  if (LocalStatus( Speeds ) < 5 .OR. Speeds < 1) then  1  else  UNCHANGED  endif  }      ; SAC 03/12/25 (tic #1379)

   "blast HVACHtPump:HSPF2 if it is user defined when HSPF is what is active"    HVACHtPump:Action =     ; SAC 05/17/24 (tic #1379)
      {  if (EffMetric == 1 .AND. LocalStatus( HSPF2 ) > 5 .AND. LocalStatus( HSPF ) > 5 .AND. IfValidAnd( Proj:StdDesignBase >= 2019 ))
         then  EvalRulelist( "Blast_HVACHtPump_HSPF2", 1 )  else  UNCHANGED  endif  }
   "blast HVACHtPump:SEER2 if it is user defined when SEER is what is active"    HVACHtPump:Action =
      {  if (EffMetric == 1 .AND. LocalStatus( SEER2 ) > 5 .AND. LocalStatus( SEER ) > 5 .AND. IfValidAnd( Proj:StdDesignBase >= 2019 ))
         then  EvalRulelist( "Blast_HVACHtPump_SEER2", 1 )  else  UNCHANGED  endif  }
   "blast HVACHtPump:EER2 if it is user defined when EER is what is active"      HVACHtPump:Action =
      {  if (EffMetric == 1 .AND. LocalStatus( EER2 ) > 5 .AND. LocalStatus( EER ) > 5 .AND. IfValidAnd( Proj:StdDesignBase >= 2019 ))
         then  EvalRulelist( "Blast_HVACHtPump_EER2", 1 )  else  UNCHANGED  endif  }
   "Default HVACHtPump:HSPF2 based on HSPF for VCHP3 calcs"    HVACHtPump:HSPF2 =
      {  if (EffMetric == 1 .AND. LocalStatus( HSPF2 ) < 6 .AND. LocalStatus( HSPF ) > 5 .AND. IfValidAnd( Proj:StdDesignBase >= 2019 ) .AND.
             HSPF != T24RHeatingEquipment:HSPF( "CodeBase", Proj:StdDesignBase, "StdVer", Proj:StandardsVersion, "SysType", TypeAbbrevStr ))
         then  HSPF * T24RHeatingEquipment:HSPF2perHSPF( "CodeBase", Proj:StdDesignBase, "StdVer", Proj:StandardsVersion, "SysType", TypeAbbrevStr )
         else  UNCHANGED  endif  }
   "Default HVACHtPump:SEER2 based on SEER for VCHP3 calcs"    HVACHtPump:SEER2 =
      {  if (EffMetric == 1 .AND. LocalStatus( SEER2 ) < 6 .AND. LocalStatus( SEER ) > 5 .AND. IfValidAnd( Proj:StdDesignBase >= 2019 ) .AND.
             SEER != T24RCoolingEquipment:SEER( "CodeBase", Proj:StdDesignBase, "StdVer", Proj:StandardsVersion, "SysType", TypeAbbrevStr ))
         then  SEER * T24RCoolingEquipment:SEER2perSEER( "CodeBase", Proj:StdDesignBase, "StdVer", Proj:StandardsVersion, "SysType", TypeAbbrevStr )
         else  UNCHANGED  endif  }
   "Default HVACHtPump:EER2 based on EER for VCHP3 calcs"      HVACHtPump:EER2 =
      {  if (EffMetric == 1 .AND. LocalStatus( EER2 ) < 6 .AND. LocalStatus( EER ) > 5 .AND. IfValidAnd( Proj:StdDesignBase >= 2019 ) .AND.
             EER != T24RCoolingEquipment:EER( "CodeBase", Proj:StdDesignBase, "StdVer", Proj:StandardsVersion, "SysType", TypeAbbrevStr ))
         then  EER * T24RCoolingEquipment:EER2perEER( "CodeBase", Proj:StdDesignBase, "StdVer", Proj:StandardsVersion, "SysType", TypeAbbrevStr )
         else  UNCHANGED  endif  }

   ; Inputs/Constants
   "Set HVACHtPump:VCHP3_Tdefrost"  HVACHtPump:VCHP3_Tdefrost = {  40 }
   "Set HVACHtPump:VCHP3_Tmax"      HVACHtPump:VCHP3_Tmax     = { 125 }

   "Perform unit type-specific defaulting"   HVACHtPump:Action =
      {  switch (Speeds)
            case  1 :  EvalRulelist( "HtPumpPerfMap_Defaulting_Single",   1 ) 
            case  2 :  EvalRulelist( "HtPumpPerfMap_Defaulting_Two",      1 ) 
            case  9 :  EvalRulelist( "HtPumpPerfMap_Defaulting_Variable", 1 ) 
            default :  UNCHANGED
         endswitch  }
END
;*************************************************************************

;************************************************************************* SAC 09/05/24 (tic #1379)
RULELIST "HtPumpPerfMap_Defaulting_Single" 1 0 0 0
;*************************************************************************

   "Set HVACHtPump:VCHP3_Tmin"      HVACHtPump:VCHP3_Tmin      = {  0  }
   "Set HVACHtPump:HP3_Cd"          HVACHtPump:HP3_Cd          = {  0.08  }      ; 0.15->0.08 - SAC 09/18/24
   "Set HVACHtPump:HasHPLockout - has lockout temp for HP"        HVACHtPump:HasHPLockout  = {  1  }
   "Set HVACHtPump:HPLockoutTemp - lockout temperature for HP"    HVACHtPump:HPLockoutTemp = {  VCHP3_Tmin  }

   ; HtPumpV3 2D interpolation - SAC 09/05/24 (VCHP3)
   "Set HVACHtPump:HP3_HSPF2Min"          HVACHtPump:HP3_HSPF2Min          = {  HtPump3_Interp_Single_Full_HeatCapRatio_COP:HSPF2Limit( "2DInterpolate", "Min", "HSPF2", -999 )  }
   "Set HVACHtPump:HP3_HSPF2Max"          HVACHtPump:HP3_HSPF2Max          = {  HtPump3_Interp_Single_Full_HeatCapRatio_COP:HSPF2Limit( "2DInterpolate", "Max", "HSPF2", -999 )  }
   "Set HVACHtPump:HP3_HeatCapRatio"      HVACHtPump:HP3_HeatCapRatio      = {  if (IfValidAnd( Cap47 > 0 ) .AND. IfValidAnd( Cap17 > 0 )) then  Cap17 / Cap47  else  0  endif  }
   "Set HVACHtPump:HP3_HeatCapRatioMin"   HVACHtPump:HP3_HeatCapRatioMin   = {  HtPump3_Interp_Single_Full_HeatCapRatio_COP:HeatCapRatio( "2DInterpolate", "Min", "HSPF2", -999 )  }
   "Set HVACHtPump:HP3_HeatCapRatioMax"   HVACHtPump:HP3_HeatCapRatioMax   = {  HtPump3_Interp_Single_Full_HeatCapRatio_COP:HeatCapRatio( "2DInterpolate", "Max", "HSPF2", -999 )  }

   ; Regression Values
   "Set HVACHtPump:COP47rated - COP Rated 47F vs HSPF2"                       HVACHtPump:COP47rated =
      {  if (IfValidAnd( HSPF2 >= HP3_HSPF2Min ) .AND. IfValidAnd( HSPF2 <= HP3_HSPF2Max ) .AND.
             IfValidAnd( HP3_HeatCapRatio >= HP3_HeatCapRatioMin ) .AND. IfValidAnd( HP3_HeatCapRatio <= HP3_HeatCapRatioMax ))
         then  HtPump3_Interp_Single_Full_HeatCapRatio_COP:2DInterpolate( "HeatCapRatio", HP3_HeatCapRatio, "HSPF2", HSPF2 )
         else    VCHP3_NEEPRegressions:intercept( "quantity", "COP47rated" ) +
               ( VCHP3_NEEPRegressions:slope(     "quantity", "COP47rated" ) * ValidOr( HSPF2, 7.5 ) )  endif  }

   ; Cutler Correlations - calcs in spreadsheet col.s AD-AH, rows 1-20
   "Set HVACHtPump:Qm95rated - Capacity Maintenance at 95°F Rated"   HVACHtPump:Qm95rated    = {  1 / 1.0686  }   ; AE19/AE18
   "Set HVACHtPump:EIRm17rated - EIR Maintenance at 17°F Rated"      HVACHtPump:EIRm17rated  = {  1.3557 / 1  }   ; AH19/AH20

   ; Intermediate Calculation Quantites
   "Set HVACHtPump:EER2B82"                  HVACHtPump:EER2B82      = {  ValidOr( SEER2, 14.3 ) / (1 - (0.5 * HP3_Cd))  } 
   "Set HVACHtPump:Pm17rated"                HVACHtPump:Pm17rated    = {  EIRm17rated * ValidOr( Cap17, 2000 ) / ValidOr( Cap47, 4000 )  } 
;   "Set HVACHtPump:RatedSpecificFanPower"    HVACHtPump:RatedSpecificFanPower = {    }                         
;   "Set HVACHtPump:RatedFlow"                HVACHtPump:RatedFlow             = {    }                 
;   "Set HVACHtPump:RatedFanPower"            HVACHtPump:RatedFanPower         = {    }                     

   ; Cap* (Q*rated)
   "Set HVACHtPump:Cap40rtd"        HVACHtPump:Cap40rtd        = {  Cap17    + (((Cap47    - Cap17   )/(47 - 17))*(40 - 17))  }
   "Set HVACHtPump:Cap05"           HVACHtPump:Cap05           = {  Cap17    - (((Cap40rtd - Cap17   )/(40 - 17))*(17 -  5))  }
   "Set HVACHtPump:Capm30rtd"       HVACHtPump:Capm30rtd       = {  Cap05    - (((Cap17    - Cap05   )/(17 -  5))*( 5 - VCHP3_Tmin))  }

   "Set HVACHtPump:Cap82rtd"        HVACHtPump:Cap82rtd        = {  Cap95    / Qm95rated  }
   "Set HVACHtPump:Cap125rtd"       HVACHtPump:Cap125rtd       = {  Cap95    + (((Cap95    - Cap82rtd)/(95 - 82    ))*(VCHP3_Tmax - 95))  }

   ; Net Power
   "Set HVACHtPump:NetPwr47rtd"     HVACHtPump:NetPwr47rtd     = {  Cap47       / ValidOr( COP47rated, 3.64 )  }
   "Set HVACHtPump:NetPwr17rtd"     HVACHtPump:NetPwr17rtd     = {  NetPwr47rtd * Pm17rated  }
   "Set HVACHtPump:NetPwr40rtd"     HVACHtPump:NetPwr40rtd     = {  NetPwr17rtd + (((NetPwr47rtd - NetPwr17rtd)/(47 - 17))*(40 - 17))  }
   "Set HVACHtPump:NetPwr05rtd"     HVACHtPump:NetPwr05rtd     = {  NetPwr17rtd - (((NetPwr40rtd - NetPwr17rtd)/(40 - 17))*(17 -  5))  }
   "Set HVACHtPump:NetPwrm30rtd"    HVACHtPump:NetPwrm30rtd    = {  NetPwr05rtd - (((NetPwr17rtd - NetPwr05rtd)/(17 -  5))*( 5 - VCHP3_Tmin))  }

   "Set HVACHtPump:NetPwr95rtd"     HVACHtPump:NetPwr95rtd     = {  Cap95    / (ValidOr( EER2,    10 ) / 3.41214)  }
   "Set HVACHtPump:NetPwr82rtd"     HVACHtPump:NetPwr82rtd     = {  Cap82rtd / (ValidOr( EER2B82, 15 ) / 3.41214)  }
   "Set HVACHtPump:ClgT60"          HVACHtPump:ClgT60          = {  82 + (((NetPwr82rtd * 0.5) - NetPwr82rtd) / (NetPwr95rtd - NetPwr82rtd) * (95 - 82))  }    ; SAC 02/27/25
   "Set HVACHtPump:NetPwr60rtd"     HVACHtPump:NetPwr60rtd     = {  max( NetPwr82rtd - (((NetPwr95rtd - NetPwr82rtd)/(95 - 82))*(82 - ClgT60)), NetPwr82rtd/2 )  }
   "Set HVACHtPump:NetPwr125rtd"    HVACHtPump:NetPwr125rtd    = {  NetPwr95rtd + (((NetPwr95rtd - NetPwr82rtd)/(95 - 82))*(VCHP3_Tmax - 95))  }

   "Set HVACHtPump:Cap60rtd"        HVACHtPump:Cap60rtd        = {  Cap82rtd - (((Cap95    - Cap82rtd)/(95 - 82    ))*(82         - ClgT60))  }
   "Set HVACHtPump:Cap40crtd"       HVACHtPump:Cap40crtd       = {  Cap60rtd - (((Cap82rtd - Cap60rtd)/(82 - ClgT60))*(ClgT60     - 40))  }     ; added 40F cooling values - SAC 02/27/25
END
;*************************************************************************

;************************************************************************* 
RULELIST "HtPumpPerfMap_Defaulting_Two" 1 0 0 0
;*************************************************************************

   "Set HVACHtPump:VCHP3_Tmin"      HVACHtPump:VCHP3_Tmin      = {  0  }
   "Set HVACHtPump:HP3_Cd"          HVACHtPump:HP3_Cd          = {  0.08  }      ; SAC 09/18/24
   "Set HVACHtPump:HasHPLockout - has lockout temp for HP"        HVACHtPump:HasHPLockout  = {  1  }
   "Set HVACHtPump:HPLockoutTemp - lockout temperature for HP"    HVACHtPump:HPLockoutTemp = {  VCHP3_Tmin  }

END
;*************************************************************************

;************************************************************************* SAC 08/25/24 (tic #1379)
RULELIST "HtPumpPerfMap_Defaulting_Variable" 1 0 0 0
;*************************************************************************

   "Set HVACHtPump:VCHP3_Tmin"      HVACHtPump:VCHP3_Tmin      = { -30 }
   "Set HVACHtPump:HP3_Cd"          HVACHtPump:HP3_Cd          = {  0.40  }      ; SAC 09/18/24
   "Set HVACHtPump:HasHPLockout - has lockout temp for HP"        HVACHtPump:HasHPLockout  = {  1  }
   "Set HVACHtPump:HPLockoutTemp - lockout temperature for HP"    HVACHtPump:HPLockoutTemp = {  VCHP3_Tmin  }

   ; HtPumpV3 2D interpolation - SAC 08/21/24 (VCHP3)
   "Set HVACHtPump:HP3_SEER2Min"          HVACHtPump:HP3_SEER2Min          = {  HtPump3_Interp_VarSpeed_Low_SEER2EER2ratio_COP:SEER2Limit( "2DInterpolate", "Min", "SEER2", -999 )  }
   "Set HVACHtPump:HP3_SEER2Max"          HVACHtPump:HP3_SEER2Max          = {  HtPump3_Interp_VarSpeed_Low_SEER2EER2ratio_COP:SEER2Limit( "2DInterpolate", "Max", "SEER2", -999 )  }
   "Set HVACHtPump:HP3_SEER2EER2Ratio"    HVACHtPump:HP3_SEER2EER2Ratio    = {  if (IfValidAnd( EER2 > 0 )) then  SEER2 / EER2  else  0  endif  }
   "Set HVACHtPump:HP3_SEER2EER2RatioMin" HVACHtPump:HP3_SEER2EER2RatioMin = {  HtPump3_Interp_VarSpeed_Low_SEER2EER2ratio_COP:SEER2EER2Ratio( "2DInterpolate", "Min", "SEER2", -999 )  }
   "Set HVACHtPump:HP3_SEER2EER2RatioMax" HVACHtPump:HP3_SEER2EER2RatioMax = {  HtPump3_Interp_VarSpeed_Low_SEER2EER2ratio_COP:SEER2EER2Ratio( "2DInterpolate", "Max", "SEER2", -999 )  }
   ; HtPumpV3 2D interpolation - SAC 08/25/24 (VCHP3)
   "Set HVACHtPump:HP3_HSPF2Min"          HVACHtPump:HP3_HSPF2Min          = {  HtPump3_Interp_VarSpeed_Full_HeatCapRatio_COP:HSPF2Limit( "2DInterpolate", "Min", "HSPF2", -999 )  }
   "Set HVACHtPump:HP3_HSPF2Max"          HVACHtPump:HP3_HSPF2Max          = {  HtPump3_Interp_VarSpeed_Full_HeatCapRatio_COP:HSPF2Limit( "2DInterpolate", "Max", "HSPF2", -999 )  }
   "Set HVACHtPump:HP3_HeatCapRatio"      HVACHtPump:HP3_HeatCapRatio      = {  if (IfValidAnd( Cap47 > 0 ) .AND. IfValidAnd( Cap17 > 0 )) then  Cap17 / Cap47  else  0  endif  }
   "Set HVACHtPump:HP3_HeatCapRatioMin"   HVACHtPump:HP3_HeatCapRatioMin   = {  HtPump3_Interp_VarSpeed_Full_HeatCapRatio_COP:HeatCapRatio( "2DInterpolate", "Min", "HSPF2", -999 )  }
   "Set HVACHtPump:HP3_HeatCapRatioMax"   HVACHtPump:HP3_HeatCapRatioMax   = {  HtPump3_Interp_VarSpeed_Full_HeatCapRatio_COP:HeatCapRatio( "2DInterpolate", "Max", "HSPF2", -999 )  }

   ; VCHP3 Regression Values
   "Set HVACHtPump:COP47rated - COP Rated 47F vs HSPF2"                       HVACHtPump:COP47rated =
      {  if (IfValidAnd( HSPF2 >= HP3_HSPF2Min ) .AND. IfValidAnd( HSPF2 <= HP3_HSPF2Max ) .AND.
             IfValidAnd( HP3_HeatCapRatio >= HP3_HeatCapRatioMin ) .AND. IfValidAnd( HP3_HeatCapRatio <= HP3_HeatCapRatioMax ))
         then  HtPump3_Interp_VarSpeed_Full_HeatCapRatio_COP:2DInterpolate( "HeatCapRatio", HP3_HeatCapRatio, "HSPF2", HSPF2 )
         else    VCHP3_NEEPRegressions:intercept( "quantity", "COP47rated" ) +
               ( VCHP3_NEEPRegressions:slope(     "quantity", "COP47rated" ) * ValidOr( HSPF2, 7.5 ) )  endif  }

   "Set HVACHtPump:Qr95rated - Capacity Ratio at 95°F Rated"         HVACHtPump:Qr95rated    = {  VCHP3_NEEPStatistics:mean( "quantity", "Qr95rated"    )  } 
   "Set HVACHtPump:Qm95max - Capacity Maintenance at 95°F Max"       HVACHtPump:Qm95max      = {  VCHP3_NEEPStatistics:mean( "quantity", "Qm95max"      )  } 
   "Set HVACHtPump:EIRr95rated - EIR Ratio at 95°F Rated"            HVACHtPump:EIRr95rated  = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRr95rated"  )  } 
   "Set HVACHtPump:Pr95rated"                                        HVACHtPump:Pr95rated    = {  ValidOr( Qr95rated,   0 ) * ValidOr( EIRr95rated, 1 )  } 
   "Set HVACHtPump:EIRm95max - EIR Maintenance at 95°F Max"          HVACHtPump:EIRm95max    = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRm95max"  )  } 
   "Set HVACHtPump:Pm95max"                                          HVACHtPump:Pm95max      = {  ValidOr( Qm95max,  2000 ) * ValidOr( EIRm95max,   1 )  }

   "Set HVACHtPump:HP3_Var_Clg_NetCap_Max82__W4"                     HVACHtPump:HP3_Var_Clg_NetCap_Max82__W4 =
      {  if (IfValidAnd( Cap95 > 0 )==0 .OR. IfValidAnd( Qr95rated > 0 )==0 .OR. IfValidAnd( Qm95max > 0 )==0) then  6800
         else  ((Cap95 / Qr95rated) / Qm95max)  endif  }

   "Set HVACHtPump:HP3_Var_Clg_NetPwr_Max82__W7"                     HVACHtPump:HP3_Var_Clg_NetPwr_Max82__W7 =
      {  if (IfValidAnd( Cap95 > 0 )==0 .OR. IfValidAnd( EER2 > 0 )==0 .OR.
             IfValidAnd( Pr95rated > 0 )==0 .OR. IfValidAnd( Pm95max > 0 )==0) then  2400
         else  ((Cap95 / (EER2 / 3.41214)) / Pr95rated) / Pm95max  endif  }

   "Set HVACHtPump:COP82min - COP at 82F Min vs SEER2 over EER2"        HVACHtPump:COP82min =
      {  if (IfValidAnd( SEER2 >= HP3_SEER2Min ) .AND. IfValidAnd( SEER2 <= HP3_SEER2Max ) .AND.
             IfValidAnd( HP3_SEER2EER2Ratio >= HP3_SEER2EER2RatioMin ) .AND. IfValidAnd( HP3_SEER2EER2Ratio <= HP3_SEER2EER2RatioMax ))
         then  HtPump3_Interp_VarSpeed_Low_SEER2EER2ratio_COP:2DInterpolate( "SEER2EER2Ratio", HP3_SEER2EER2Ratio, "SEER2", SEER2 )
         else    VCHP3_NEEPRegressions:intercept( "quantity", "EIRr82min"  ) +
               ( VCHP3_NEEPRegressions:slope(     "quantity", "EIRr82min"  ) * ValidOr( SEER2, 14.3 ) / ValidOr( EER2, 11.7 ) )  endif  }

   "Set HVACHtPump:Qr95min - Capacity Ratio at 95F Min vs SEER2 over EER2"    HVACHtPump:Qr95min =
      {  if (IfValidAnd( HP3_Var_Clg_NetPwr_Max82__W7 > 0 )==0 .OR. IfValidAnd( COP82min > 0 )==0) then  0.18
         else  min( max( ( VCHP3_NEEPRegressions:intercept( "quantity", "Cap95ratVsEIR82" ) +
                          (VCHP3_NEEPRegressions:slope(     "quantity", "Cap95ratVsEIR82" ) *
                              (HP3_Var_Clg_NetCap_Max82__W4 / HP3_Var_Clg_NetPwr_Max82__W7) / COP82min )), 0.1 ), ValidOr( Qr95rated, 0.934 ) )  endif  }

   ; VCHP3 NEEP Statistical Quantities
   "Set HVACHtPump:Qr47rated - Capacity Ratio at 47°F Rated"                 HVACHtPump:Qr47rated        = {  VCHP3_NEEPStatistics:mean( "quantity", "Qr47rated"  )  } 
   "Set HVACHtPump:Qr47min - Capacity Ratio at 47°F Min"                     HVACHtPump:Qr47min          = {  VCHP3_NEEPStatistics:mean( "quantity", "Qr47min"  )  } 
   "Set HVACHtPump:Qr17rated - Capacity Ratio at 17°F Rated"                 HVACHtPump:Qr17rated        = {  VCHP3_NEEPStatistics:mean( "quantity", "Qr17rated"  )  } 
   "Set HVACHtPump:Qr17min - Capacity Ratio at 17°F Min"                     HVACHtPump:Qr17min          = {  VCHP3_NEEPStatistics:mean( "quantity", "Qr17min"  )  } 
   "Set HVACHtPump:Qm5max - Capacity Maintenance at 5°F Max"                 HVACHtPump:Qm5max           = {  VCHP3_NEEPStatistics:mean( "quantity", "Qm5max"  )  } 
   "Set HVACHtPump:Qr5rated - Capacity Ratio at 5°F Rated"                   HVACHtPump:Qr5rated         = {  VCHP3_NEEPStatistics:mean( "quantity", "Qr5rated"  )  } 
   "Set HVACHtPump:Qr5min - Capacity Ratio at 5°F Min"                       HVACHtPump:Qr5min           = {  VCHP3_NEEPStatistics:mean( "quantity", "Qr5min"  )  } 
   "Set HVACHtPump:QmslopeLCTmax - Capacity Maintenance Slope at LCT°F Max"  HVACHtPump:QmslopeLCTmax    = {  VCHP3_NEEPStatistics:mean( "quantity", "QmslopeLCTmax"  )  } 
   "Set HVACHtPump:QmslopeLCTmin - Capacity Maintenance Slope at LCT°F Min"  HVACHtPump:QmslopeLCTmin    = {  VCHP3_NEEPStatistics:mean( "quantity", "QmslopeLCTmin"  )  } 

   "Set HVACHtPump:Qm95min - Capacity Maintenance at 95°F Min"               HVACHtPump:Qm95min          = {  VCHP3_NEEPStatistics:mean( "quantity", "Qm95min"  )  } 
   "Set HVACHtPump:EIRr47rated - EIR Ratio at 47°F Rated"                    HVACHtPump:EIRr47rated      = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRr47rated"  )  } 
   "Set HVACHtPump:EIRr47min - EIR Ratio at 47°F Min"                        HVACHtPump:EIRr47min        = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRr47min"  )  } 
   "Set HVACHtPump:EIRm17rated - EIR Maintenance at 17°F Rated"              HVACHtPump:EIRm17rated      = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRm17rated"  )  } 
   "Set HVACHtPump:EIRr17rated - EIR Ratio at 17°F Rated"                    HVACHtPump:EIRr17rated      = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRr17rated"  )  } 
   "Set HVACHtPump:EIRr17min - EIR Ratio at 17°F Min"                        HVACHtPump:EIRr17min        = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRr17min"  )  } 
   "Set HVACHtPump:EIRm5max - EIR Maintenance at 5°F Max"                    HVACHtPump:EIRm5max         = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRm5max"  )  } 
   "Set HVACHtPump:EIRr5rated - EIR Ratio at 5°F Rated"                      HVACHtPump:EIRr5rated       = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRr5rated"  )  } 
   "Set HVACHtPump:EIRr5min - EIR Ratio at 5°F Min"                          HVACHtPump:EIRr5min         = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRr5min"  )  } 
   "Set HVACHtPump:EIRmslopeLCTmax - EIR Maintenance Slope at LCT°F Max"     HVACHtPump:EIRmslopeLCTmax  = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRmslopeLCTmax"  )  } 
   "Set HVACHtPump:EIRmslopeLCTmin - EIR Maintenance Slope at LCT°F Min"     HVACHtPump:EIRmslopeLCTmin  = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRmslopeLCTmin"  )  } 
   "Set HVACHtPump:EIRm95min - EIR Maintenance at 95°F Min"                  HVACHtPump:EIRm95min        = {  VCHP3_NEEPStatistics:mean( "quantity", "EIRm95min"  )  } 

   ; Cap* (Q*rated/max/min)
   "Set HVACHtPump:Cap95max"        HVACHtPump:Cap95max        = {  ValidOr( Cap95,    2000 ) / ValidOr( Qr95rated, 1.2 )  }
   "Set HVACHtPump:Cap95min"        HVACHtPump:Cap95min        = {  ValidOr( Cap95max, 2000 ) * ValidOr( Qr95min,   0.3 )  }
   "Set HVACHtPump:Cap82max"        HVACHtPump:Cap82max        = {  ValidOr( Cap95max, 2000 ) / ValidOr( Qm95max,   1.3 )  }
   "Set HVACHtPump:Cap82min"        HVACHtPump:Cap82min        = {  ValidOr( Cap95min, 2000 ) / ValidOr( Qm95min,   1.1 )  }
   "Set HVACHtPump:Cap47max"        HVACHtPump:Cap47max        = {  ValidOr( Cap47,    2000 ) / ValidOr( Qr47rated, 1.2  )  }
   "Set HVACHtPump:Cap47min"        HVACHtPump:Cap47min        = {  ValidOr( Cap47max, 2000 ) * ValidOr( Qr47min,   0.25 )  }
   "Set HVACHtPump:Cap17max"        HVACHtPump:Cap17max        = {  ValidOr( Cap17,    2000 ) / ValidOr( Qr17rated, 1.2  )  }
   "Set HVACHtPump:Cap17min"        HVACHtPump:Cap17min        = {  ValidOr( Cap17max, 2000 ) * ValidOr( Qr17min,   0.25 )  }
   "Set HVACHtPump:Cap05max"        HVACHtPump:Cap05max        = {  ValidOr( Cap17max, 2000 ) * ValidOr( Qm5max,    0.75 )  }
   "Set HVACHtPump:Cap05"           HVACHtPump:Cap05           = {  ValidOr( Cap05max, 2000 ) * ValidOr( Qr5rated,  0.90 )  }
   "Set HVACHtPump:Cap05min"        HVACHtPump:Cap05min        = {  ValidOr( Cap05max, 2000 ) * ValidOr( Qr5min,    0.25 )  }
   "Set HVACHtPump:Cap82rtd"        HVACHtPump:Cap82rtd        = {  Cap82min + (((Cap95    - Cap95min)/(Cap95max - Cap95min))*(Cap82max - Cap82min))  }  ; SAC 09/02/24

   ; VCHP3 Intermediate Calculation Quantites
   "Set HVACHtPump:QmLCTmax"                 HVACHtPump:QmLCTmax     = {  1 / (1 - ValidOr( QmslopeLCTmax, 0 ) * (5-VCHP3_Tmin))  }
   "Set HVACHtPump:QmLCTmin"                 HVACHtPump:QmLCTmin     = {  1 / (1 - ValidOr( QmslopeLCTmin, 0 ) * (5-VCHP3_Tmin))  }
   "Set HVACHtPump:Capm30max"                HVACHtPump:Capm30max    = {  Cap05max * QmLCTmax  }   ; 
   "Set HVACHtPump:Capm30min"                HVACHtPump:Capm30min    = {  Cap05min * QmLCTmin  }
   "Set HVACHtPump:Pr47rated"                HVACHtPump:Pr47rated    = {  ValidOr( EIRr47rated, 0 ) * ValidOr( Qr47rated,   0 )  } 
   "Set HVACHtPump:Pr47min"                  HVACHtPump:Pr47min      = {  ValidOr( EIRr47min,   0 ) * ValidOr( Qr47min,     0 )  }
   ; "Set HVACHtPump:Pr82min"                  HVACHtPump:Pr82min      = {  ValidOr( Cap82min, 2000 ) / ValidOr( Cap82max, 2000 ) * ValidOr( COP82min, 1 )  }
   "Set HVACHtPump:Pm95min"                  HVACHtPump:Pm95min      = {  ValidOr( Qm95min,  2000 ) * ValidOr( EIRm95min,   1 )  }
   "Set HVACHtPump:Pm17rated"                HVACHtPump:Pm17rated    = {  ValidOr( EIRm17rated, 1 ) * (ValidOr( Cap17, 2000 ) / max( 1, ValidOr( Cap47, 2000 ) ))  } 
   "Set HVACHtPump:Pr17rated"                HVACHtPump:Pr17rated    = {  ValidOr( EIRr17rated, 1 ) * ValidOr( Qr17rated, 2000 )  } 
   "Set HVACHtPump:Pr17min"                  HVACHtPump:Pr17min      = {  ValidOr( EIRr17min,   1 ) * (ValidOr( Cap17min, 2000 ) / ValidOr( Cap17max, 2000 ))  }
   "Set HVACHtPump:Pr5rated"                 HVACHtPump:Pr5rated     = {  ValidOr( EIRr5rated,  1 ) * (ValidOr( Cap05,    2000 ) / ValidOr( Cap05max, 2000 ))  }
   "Set HVACHtPump:Pr5min"                   HVACHtPump:Pr5min       = {  ValidOr( EIRr5min,    1 ) * (ValidOr( Cap05min, 2000 ) / ValidOr( Cap05max, 2000 ))  }
   "Set HVACHtPump:EIRmLCTmax"               HVACHtPump:EIRmLCTmax   = {  1 / (1 - ValidOr( EIRmslopeLCTmax, 0.8 ) * (5-VCHP3_Tmin))  }  
   "Set HVACHtPump:EIRmLCTmin"               HVACHtPump:EIRmLCTmin   = {  1 / (1 - ValidOr( EIRmslopeLCTmin, 0.3 ) * (5-VCHP3_Tmin))  }  
   "Set HVACHtPump:PmLCTmax"                 HVACHtPump:PmLCTmax     = {  ValidOr( EIRmLCTmax,  1 ) * (Capm30max / Cap05max)  }
   "Set HVACHtPump:PmLCTmin"                 HVACHtPump:PmLCTmin     = {  ValidOr( EIRmLCTmin,  1 ) * (Capm30min / Cap05min)  }
;   "Set HVACHtPump:RatedSpecificFanPower"    HVACHtPump:RatedSpecificFanPower = {    }                         
;   "Set HVACHtPump:RatedFlow"                HVACHtPump:RatedFlow             = {    }                 
;   "Set HVACHtPump:RatedFanPower"            HVACHtPump:RatedFanPower         = {    }                     

   "Set HVACHtPump:Capm30rtd"       HVACHtPump:Capm30rtd       = {  Capm30min + (((Cap05 - Cap05min)/(Cap05max - Cap05min))*(Capm30max - Capm30min))  }     ; SAC 09/01/24

   "Set HVACHtPump:NetPwr95rtd"     HVACHtPump:NetPwr95rtd     = {  Cap95 / (ValidOr( EER2, 13 ) / 3.41214)  }
   "Set HVACHtPump:NetPwr95max"     HVACHtPump:NetPwr95max     = {  NetPwr95rtd / Pr95rated  }
   "Set HVACHtPump:NetPwr82max"     HVACHtPump:NetPwr82max     = {  NetPwr95max / Pm95max    }
   "Set HVACHtPump:NetPwr82min"     HVACHtPump:NetPwr82min     = {  Cap82min    / COP82min   }
   "Set HVACHtPump:NetPwr95min"     HVACHtPump:NetPwr95min     = {  NetPwr82min * Pm95min  }
   "Set HVACHtPump:NetPwr82rtd"     HVACHtPump:NetPwr82rtd     = {  NetPwr82min + (((NetPwr95rtd - NetPwr95min)/(NetPwr95max - NetPwr95min))*(NetPwr82max - NetPwr82min))  }
   "Set HVACHtPump:NetPwr125max"    HVACHtPump:NetPwr125max    = {  NetPwr95max + (((NetPwr95max - NetPwr82max)/(95 - 82))*(VCHP3_Tmax - 95))  }
   "Set HVACHtPump:NetPwr125rtd"    HVACHtPump:NetPwr125rtd    = {  NetPwr95rtd + (((NetPwr95rtd - NetPwr82rtd)/(95 - 82))*(VCHP3_Tmax - 95))  }
   "Set HVACHtPump:NetPwr125min"    HVACHtPump:NetPwr125min    = {  NetPwr95min + (((NetPwr95min - NetPwr82min)/(95 - 82))*(VCHP3_Tmax - 95))  }
   "Set HVACHtPump:ClgT60"          HVACHtPump:ClgT60          = {  82 + (((NetPwr82min * 0.5) - NetPwr82min) / (NetPwr95min - NetPwr82min) * (95 - 82))  }    ; SAC 02/27/25
   "Set HVACHtPump:NetPwr60max"     HVACHtPump:NetPwr60max     = {  max( NetPwr82max - (((NetPwr95max - NetPwr82max)/(95 - 82))*(82 - ClgT60)), NetPwr82max/2 )  }
   "Set HVACHtPump:NetPwr60rtd"     HVACHtPump:NetPwr60rtd     = {  max( NetPwr82rtd - (((NetPwr95rtd - NetPwr82rtd)/(95 - 82))*(82 - ClgT60)), NetPwr82rtd/2 )  }
   "Set HVACHtPump:NetPwr60min"     HVACHtPump:NetPwr60min     = {  max( NetPwr82min - (((NetPwr95min - NetPwr82min)/(95 - 82))*(82 - ClgT60)), NetPwr82min/2 )  }
   "Set HVACHtPump:NetPwr47rtd"     HVACHtPump:NetPwr47rtd     = {  Cap47       / ValidOr( COP47rated, 3.37 )  }
   "Set HVACHtPump:NetPwr47max"     HVACHtPump:NetPwr47max     = {  NetPwr47rtd / ValidOr( Pr47rated,  0.85 )  }
   "Set HVACHtPump:NetPwr47min"     HVACHtPump:NetPwr47min     = {  NetPwr47max * ValidOr( Pr47min,    0.20 )  }

   "Set HVACHtPump:NetPwr17rtd"     HVACHtPump:NetPwr17rtd     = {  NetPwr47rtd * Pm17rated  }
   "Set HVACHtPump:NetPwr17max"     HVACHtPump:NetPwr17max     = {  NetPwr17rtd / Pr17rated  }
   "Set HVACHtPump:NetPwr17min"     HVACHtPump:NetPwr17min     = {  NetPwr17max * Pr17min    }
   "Set HVACHtPump:NetPwr05max"     HVACHtPump:NetPwr05max     = {  NetPwr17max * EIRm5max  * (Cap05max / Cap17max) }   ; add *(Cap05/Cap17) portion omitted from original source - SAC 02/14/25
   "Set HVACHtPump:NetPwr05rtd"     HVACHtPump:NetPwr05rtd     = {  NetPwr05max * Pr5rated   }
   "Set HVACHtPump:NetPwr05min"     HVACHtPump:NetPwr05min     = {  NetPwr05max * Pr5min     }
   "Set HVACHtPump:NetPwrm30max"    HVACHtPump:NetPwrm30max    = {  NetPwr05max * PmLCTmax   }
   "Set HVACHtPump:NetPwrm30min"    HVACHtPump:NetPwrm30min    = {  NetPwr05min * PmLCTmin   }
   "Set HVACHtPump:NetPwrm30rtd"    HVACHtPump:NetPwrm30rtd    = {  NetPwrm30min + (((NetPwr05rtd - NetPwr05min)/(NetPwr05max - NetPwr05min))*(NetPwrm30max - NetPwrm30min))  }

   "Set HVACHtPump:Cap125max"       HVACHtPump:Cap125max       = {  Cap95max + (((Cap95max - Cap82max)/(95 - 82))*(VCHP3_Tmax - 95))  }
   "Set HVACHtPump:Cap125rtd"       HVACHtPump:Cap125rtd       = {  Cap95    + (((Cap95    - Cap82rtd)/(95 - 82))*(VCHP3_Tmax - 95))  }
   "Set HVACHtPump:Cap125min"       HVACHtPump:Cap125min       = {  Cap95min + (((Cap95min - Cap82min)/(95 - 82))*(VCHP3_Tmax - 95))  }
   "Set HVACHtPump:Cap60max"        HVACHtPump:Cap60max        = {  Cap82max - (((Cap95max - Cap82max)/(95 - 82))*(82 - ClgT60))  }
   "Set HVACHtPump:Cap60rtd"        HVACHtPump:Cap60rtd        = {  Cap82rtd - (((Cap95    - Cap82rtd)/(95 - 82))*(82 - ClgT60))  }
   "Set HVACHtPump:Cap60min"        HVACHtPump:Cap60min        = {  Cap82min - (((Cap95min - Cap82min)/(95 - 82))*(82 - ClgT60))  }
   "Set HVACHtPump:Cap40cmax"       HVACHtPump:Cap40cmax       = {  Cap60max - (((Cap82max - Cap60max)/(82 - ClgT60))*(ClgT60 - 40))  }      ; added 40F cooling values - SAC 02/27/25
   "Set HVACHtPump:Cap40crtd"       HVACHtPump:Cap40crtd       = {  Cap60rtd - (((Cap82rtd - Cap60rtd)/(82 - ClgT60))*(ClgT60 - 40))  }
   "Set HVACHtPump:Cap40cmin"       HVACHtPump:Cap40cmin       = {  Cap60min - (((Cap82min - Cap60min)/(82 - ClgT60))*(ClgT60 - 40))  }

;   "Set HVACHtPump:VCHP3_Tmin"      HVACHtPump:VCHP3_Tmin     = { -30 }

      ; Excel Key:
      ;     D14 - COP82min
      ;     D15 - Qr47rated
      ;     D16 - Qr47min
      ;     D17 - Qr17rated
      ;     D22 - QmslopeLCTmax
      ;     D23 - QmslopeLCTmin
      ;     D24 - Qr95rated
      ;     D25 - Qm95max
      ;     D26 - Qm95min
      ;     D27 - EIRr47rated
      ;     D28 - EIRr47min
      ;     D29 - EIRm17rated
      ;     D30 - EIRr17rated
      ;     D31 - EIRr17min
      ;     D32 - EIRm5max
      ;     D33 - EIRr5rated
      ;     D34 - EIRr5min
      ;     D35 - EIRmslopeLCTmax
      ;     D36 - EIRmslopeLCTmin
      ;     D37 - EIRr95rated
      ;     D38 - EIRm95max
      ;     D39 - EIRm95min
      ;     D53 - EIRmLCTmax
      ;     D54 - EIRmLCTmin
      ;     $H$3 = VCHP3_Tmin


;   "Set ResZn:CUACErrorMsg"      ResZn:CUACErrorMsg =       ; SAC 08/07/22
;      {  if (IfValidAnd( AffordableHousing > 0 )==0) then  UNDEFINED
;         else if (NumAffordableUnitTypes < 1)
;         then  "CUAC Error: No Affordable Dwellings present"
;         else if (NumAffordableUnitTypes > 1)
;         then  "CUAC Error: Dwellings must have same # of bedrooms"
;         else if (IfValidAnd( AffordableUnitsByBedrmsWithMult[8] > 0 ))
;         then  "CUAC Error: No CUAC calcs/reporting for >6 bedroom units"
;         else  UNDEFINED  endif endif endif endif  }
;   "Set ResZn:CUACError"   ResZn:CUACError = {  if (LocalStatus( CUACErrorMsg) > 0) then  1  else  UNDEFINED  endif  }


END
;*************************************************************************


;************************************************************************* SAC 05/14/24 (tic #1379)
RULELIST "HtPumpPerfMap_CreatePerformanceMaps_Variable" 1 0 0 0
;*************************************************************************
;"debug" HVACHtPump:Action = {  PostMessageToLog( Format( "   creating CSE PerfMap objects for run %s, HVACHtPump %s", Proj:RunAbbrev, Name ) )  }

   "Create HVACHtPump:VCHP3PerfMapHtgRef"                   HVACHtPump:VCHP3PerfMapHtgRef          = {  CreateComp( csePERFORMANCEMAP, Name + "-htgperfmap" )  }
   "Set HVACHtPump:VCHP3PerfMapHtgRef:CSEComment"           HVACHtPump:VCHP3PerfMapHtgRef:CSEComment   =
      {  if (IfValidAnd( HSPF2 > 0 ))
         then  if (IfValidAnd( AutoSize > 0 ))
               then  Format( "Variable speed: Autosized / HSPF2 %.1f", HSPF2 )
               else if (IfValidAnd( Cap47 > 0 ) .AND. IfValidAnd( Cap17 > 0 ))
               then  Format( "Variable speed: Cap47 %s / Cap17 %s / HSPF2 %.1f", FltToStr( Cap47, 0 ), FltToStr( Cap17, 0 ), HSPF2 )
               else  UNDEFINED  endif endif
         else  UNDEFINED  endif  }

   "Create HVACHtPump:VCHP3PerfMapHtgAxesRef[1]"            HVACHtPump:VCHP3PerfMapHtgAxesRef[1]   = {  CreateComp( csePMGRIDAXIS, Name + "-htgdbtaxis" )  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:Parent"        HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:Parent        = {  VCHP3PerfMapHtgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXType"      HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXType      = {  "DBT"  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[1]" HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[1] = {  VCHP3_Tmin  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[2]" HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[2] = {   5  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[3]" HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[3] = {  17  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[4]" HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[4] = {  47  }
; removed 60deg heating map values - SAC 02/27/25 (tic #1379)
;   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[5]" HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[5] = {  60  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXRefValue"  HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXRefValue  = {  47  }

   "Create HVACHtPump:VCHP3PerfMapHtgAxesRef[2]"            HVACHtPump:VCHP3PerfMapHtgAxesRef[2]   = {  CreateComp( csePMGRIDAXIS, Name + "-htgspdaxis" )  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:Parent"        HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:Parent        = {  VCHP3PerfMapHtgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXType"      HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXType      = {  "Speed"  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXValues[1]" HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXValues[1] = {  1  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXValues[2]" HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXValues[2] = {  2  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXValues[3]" HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXValues[3] = {  3  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXRefValue"  HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXRefValue  = {  2  }

   "Create HVACHtPump:VCHP3PerfMapHtgDataRef[1]"                  HVACHtPump:VCHP3PerfMapHtgDataRef[1] = {  CreateComp( csePMLOOKUPDATA,   Name + "-htgcapdata" )  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:Parent"              HVACHtPump:VCHP3PerfMapHtgDataRef[1]:Parent              = {  VCHP3PerfMapHtgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUType"            HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUType            = {  "CapRat"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesPerRow"    HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesPerRow    = {  3  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[1]" HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[1] = {  format( "%.0fF at min, mid, max speed", VCHP3_Tmin )  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[2]" HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[2] = {  "5F"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[3]" HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[3] = {  "17F"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[4]" HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[4] = {  "47F"  }
; removed 60deg heating map values - SAC 02/27/25 (tic #1379)
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[5]" HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[5] = {  "60F"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[1]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[1]  = {  Capm30min /  Cap47  }  ; VCHP3_Tmin
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[2]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[2]  = {  Capm30rtd /  Cap47  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[3]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[3]  = {  Capm30max /  Cap47  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[4]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[4]  = {  Cap05min  /  Cap47  }  ;   5
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[5]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[5]  = {  Cap05     /  Cap47  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[6]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[6]  = {  Cap05max  /  Cap47  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[7]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[7]  = {  Cap17min  /  Cap47  }  ;  17
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[8]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[8]  = {  Cap17     /  Cap47  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[9]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[9]  = {  Cap17max  /  Cap47  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[10]"      HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[10] = {  Cap47min  /  Cap47  }  ;  47
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[11]"      HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[11] = {  Cap47     /  Cap47  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[12]"      HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[12] = {  Cap47max  /  Cap47  }
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[13]"      HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[13] = {  VCHP3PerfMapHtgDataRef[1]:pmLUValues[10]  }  ;  60
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[14]"      HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[14] = {  VCHP3PerfMapHtgDataRef[1]:pmLUValues[11]  }
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[15]"      HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[15] = {  VCHP3PerfMapHtgDataRef[1]:pmLUValues[12]  }

   "Create HVACHtPump:VCHP3PerfMapHtgDataRef[2]"                  HVACHtPump:VCHP3PerfMapHtgDataRef[2] = {  CreateComp( csePMLOOKUPDATA,   Name + "-htgcopdata" )  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:Parent"              HVACHtPump:VCHP3PerfMapHtgDataRef[2]:Parent              = {  VCHP3PerfMapHtgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUType"            HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUType            = {  "COP"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesPerRow"    HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesPerRow    = {  3  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[1]" HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[1] = {  format( "%.0fF at min, mid, max speed", VCHP3_Tmin )  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[2]" HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[2] = {  "5F"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[3]" HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[3] = {  "17F"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[4]" HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[4] = {  "47F"  }
; removed 60deg heating map values - SAC 02/27/25 (tic #1379)
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[5]" HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[5] = {  "60F"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[1]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[1]  = {  Capm30min / NetPwrm30min  }   ; VCHP3_Tmin
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[2]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[2]  = {  Capm30rtd / NetPwrm30rtd  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[3]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[3]  = {  Capm30max / NetPwrm30max  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[4]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[4]  = {  Cap05min  / NetPwr05min   }   ;   5
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[5]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[5]  = {  Cap05     / NetPwr05rtd   }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[6]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[6]  = {  Cap05max  / NetPwr05max   }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[7]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[7]  = {  Cap17min  / NetPwr17min   }   ;  17
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[8]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[8]  = {  Cap17     / NetPwr17rtd   }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[9]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[9]  = {  Cap17max  / NetPwr17max   }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[10]"      HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[10] = {  Cap47min  / NetPwr47min   }   ;  47
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[11]"      HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[11] = {  Cap47     / NetPwr47rtd   }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[12]"      HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[12] = {  Cap47max  / NetPwr47max   }
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[13]"      HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[13] = {  VCHP3PerfMapHtgDataRef[2]:pmLUValues[10]  }  ;  60
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[14]"      HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[14] = {  VCHP3PerfMapHtgDataRef[2]:pmLUValues[11]  }
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[15]"      HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[15] = {  VCHP3PerfMapHtgDataRef[2]:pmLUValues[12]  }

   ; COOLING
   "Create HVACHtPump:VCHP3PerfMapClgRef"                   HVACHtPump:VCHP3PerfMapClgRef          = {  CreateComp( csePERFORMANCEMAP, Name + "-clgperfmap" )  }
   "Set HVACHtPump:VCHP3PerfMapClgRef:CSEComment"           HVACHtPump:VCHP3PerfMapClgRef:CSEComment   =
      {  if (IfValidAnd( EER2 > 0 ) .AND. IfValidAnd( SEER2 > 0 ))
         then  if (IfValidAnd( AutoSize > 0 ))
               then  Format( "Variable speed: Autosized / EER2 %.1f / SEER2 %.1f", EER2, SEER2 )
               else if (IfValidAnd( Cap95 > 0 ))
               then  Format( "Variable speed: Cap95 %s / EER2 %.1f / SEER2 %.1f", FltToStr( Cap95, 0 ), EER2, SEER2 )
               else  UNDEFINED  endif endif
         else  UNDEFINED  endif  }

   "Create HVACHtPump:VCHP3PerfMapClgAxesRef[1]"            HVACHtPump:VCHP3PerfMapClgAxesRef[1]   = {  CreateComp( csePMGRIDAXIS, Name + "-clgdbtaxis" )  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:Parent"        HVACHtPump:VCHP3PerfMapClgAxesRef[1]:Parent        = {  VCHP3PerfMapClgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXType"      HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXType      = {  "DBT"  }
   ; revised perf map to exclude fixed 40deg point iff ClgT60 <= 41 - SAC 03/12/25 (tic #1379)
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[1]" HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[1] = {  if (ClgT60 > 41) then  40                             else  (int( ClgT60*10 + 0.5 ) / 10)  endif  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[2]" HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[2] = {  if (ClgT60 > 41) then  (int( ClgT60*10 + 0.5 ) / 10)  else  82             endif  }   ; was: 60  - SAC 02/27/25
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[3]" HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[3] = {  if (ClgT60 > 41) then  82                             else  95             endif  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[4]" HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[4] = {  if (ClgT60 > 41) then  95                             else  VCHP3_Tmax     endif  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[5]" HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[5] = {  if (ClgT60 > 41) then  VCHP3_Tmax                     else  UNDEFINED      endif  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXRefValue"  HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXRefValue  = {  95  }

   "Create HVACHtPump:VCHP3PerfMapClgAxesRef[2]"            HVACHtPump:VCHP3PerfMapClgAxesRef[2]   = {  CreateComp( csePMGRIDAXIS, Name + "-clgspdaxis" )  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[2]:Parent"        HVACHtPump:VCHP3PerfMapClgAxesRef[2]:Parent        = {  VCHP3PerfMapClgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXType"      HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXType      = {  "Speed"  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXValues[1]" HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXValues[1] = {  1  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXValues[2]" HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXValues[2] = {  2  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXValues[3]" HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXValues[3] = {  3  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXRefValue"  HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXRefValue  = {  2  }

   "Create HVACHtPump:VCHP3PerfMapClgDataRef[1]"                  HVACHtPump:VCHP3PerfMapClgDataRef[1] = {  CreateComp( csePMLOOKUPDATA,   Name + "-clgcapdata" )  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:Parent"              HVACHtPump:VCHP3PerfMapClgDataRef[1]:Parent              = {  VCHP3PerfMapClgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUType"            HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUType            = {  "CapRat"  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesPerRow"    HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesPerRow    = {  3  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[1]" HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[1] = {  if (ClgT60 > 41) then  "40F"                                             else  Format( "%.1fF at min, mid, max speed", ClgT60 )  endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[2]" HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[2] = {  if (ClgT60 > 41) then  Format( "%.1fF at min, mid, max speed", ClgT60 )  else  "82F"                                             endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[3]" HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[3] = {  if (ClgT60 > 41) then  "82F"                                             else  "95F"                                             endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[4]" HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[4] = {  if (ClgT60 > 41) then  "95F"                                             else  format( "%.0fF", VCHP3_Tmax )                     endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[5]" HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[5] = {  if (ClgT60 > 41) then  format( "%.0fF", VCHP3_Tmax )                     else  UNDEFINED                                         endif  }

   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[1]-min"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[1]  = {  if (ClgT60 > 41) then  Cap40cmin / Cap95  else  Cap60min / Cap95   endif  }     ; 40
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[2]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[2]  = {  if (ClgT60 > 41) then  Cap40crtd / Cap95  else  Cap60rtd / Cap95   endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[3]-max"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[3]  = {  if (ClgT60 > 41) then  Cap40cmax / Cap95  else  Cap60max / Cap95   endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[4]-min"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[4]  = {  if (ClgT60 > 41) then  Cap60min / Cap95   else  Cap82min / Cap95   endif  }     ; 60ish
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[5]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[5]  = {  if (ClgT60 > 41) then  Cap60rtd / Cap95   else  Cap82rtd / Cap95   endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[6]-max"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[6]  = {  if (ClgT60 > 41) then  Cap60max / Cap95   else  Cap82max / Cap95   endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[7]-min"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[7]  = {  if (ClgT60 > 41) then  Cap82min / Cap95   else  Cap95min / Cap95   endif  }     ; 82
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[8]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[8]  = {  if (ClgT60 > 41) then  Cap82rtd / Cap95   else  1.0                endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[9]-max"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[9]  = {  if (ClgT60 > 41) then  Cap82max / Cap95   else  Cap95max / Cap95   endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[10]-min"  HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[10] = {  if (ClgT60 > 41) then  Cap95min / Cap95   else  Cap125min / Cap95  endif  }     ; 95
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[11]-mid"  HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[11] = {  if (ClgT60 > 41) then  1.0                else  Cap125rtd / Cap95  endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[12]-max"  HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[12] = {  if (ClgT60 > 41) then  Cap95max / Cap95   else  Cap125max / Cap95  endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[13]-min"  HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[13] = {  if (ClgT60 > 41) then  Cap125min / Cap95  else    UNDEFINED        endif  }     ; Tmax
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[14]-mid"  HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[14] = {  if (ClgT60 > 41) then  Cap125rtd / Cap95  else    UNDEFINED        endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[15]-max"  HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[15] = {  if (ClgT60 > 41) then  Cap125max / Cap95  else    UNDEFINED        endif  }

   "Create HVACHtPump:VCHP3PerfMapClgDataRef[2]"                  HVACHtPump:VCHP3PerfMapClgDataRef[2] = {  CreateComp( csePMLOOKUPDATA,   Name + "-clgcopdata" )  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:Parent"              HVACHtPump:VCHP3PerfMapClgDataRef[2]:Parent              = {  VCHP3PerfMapClgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUType"            HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUType            = {  "COP"  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesPerRow"    HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesPerRow    = {  3  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[1]" HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[1] = {  if (ClgT60 > 41) then  "40F"                                             else  Format( "%.1fF at min, mid, max speed", ClgT60 )  endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[2]" HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[2] = {  if (ClgT60 > 41) then  Format( "%.1fF at min, mid, max speed", ClgT60 )  else  "82F"                                             endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[3]" HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[3] = {  if (ClgT60 > 41) then  "82F"                                             else  "95F"                                             endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[4]" HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[4] = {  if (ClgT60 > 41) then  "95F"                                             else  format( "%.0fF", VCHP3_Tmax )                     endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[5]" HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[5] = {  if (ClgT60 > 41) then  format( "%.0fF", VCHP3_Tmax )                     else     UNDEFINED                                      endif  }

   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[1]-min"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[1]  = {  if (ClgT60 > 41) then  Cap40cmin / NetPwr60min   else  Cap60min / NetPwr60min    endif  }      ; 40
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[2]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[2]  = {  if (ClgT60 > 41) then  Cap40crtd / NetPwr60rtd   else  Cap60rtd / NetPwr60rtd    endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[3]-max"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[3]  = {  if (ClgT60 > 41) then  Cap40cmax / NetPwr60max   else  Cap60max / NetPwr60max    endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[4]-min"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[4]  = {  if (ClgT60 > 41) then  Cap60min / NetPwr60min    else  Cap82min / NetPwr82min    endif  }      ; 60ish
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[5]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[5]  = {  if (ClgT60 > 41) then  Cap60rtd / NetPwr60rtd    else  Cap82rtd / NetPwr82rtd    endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[6]-max"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[6]  = {  if (ClgT60 > 41) then  Cap60max / NetPwr60max    else  Cap82max / NetPwr82max    endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[7]-min"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[7]  = {  if (ClgT60 > 41) then  Cap82min / NetPwr82min    else  Cap95min / NetPwr95min    endif  }      ; 82
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[8]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[8]  = {  if (ClgT60 > 41) then  Cap82rtd / NetPwr82rtd    else  Cap95    / NetPwr95rtd    endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[9]-max"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[9]  = {  if (ClgT60 > 41) then  Cap82max / NetPwr82max    else  Cap95max / NetPwr95max    endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[10]-min"  HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[10] = {  if (ClgT60 > 41) then  Cap95min / NetPwr95min    else  Cap125min / NetPwr125min  endif  }      ; 95
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[11]-mid"  HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[11] = {  if (ClgT60 > 41) then  Cap95    / NetPwr95rtd    else  Cap125rtd / NetPwr125rtd  endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[12]-max"  HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[12] = {  if (ClgT60 > 41) then  Cap95max / NetPwr95max    else  Cap125max / NetPwr125max  endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[13]-min"  HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[13] = {  if (ClgT60 > 41) then  Cap125min / NetPwr125min  else     UNDEFINED              endif  }      ; Tmax
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[14]-mid"  HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[14] = {  if (ClgT60 > 41) then  Cap125rtd / NetPwr125rtd  else     UNDEFINED              endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[15]-max"  HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[15] = {  if (ClgT60 > 41) then  Cap125max / NetPwr125max  else     UNDEFINED              endif  }
END
;*************************************************************************

;************************************************************************* SAC 07/21/24 (VCHP3)
RULELIST "HtPumpPerfMap_CreatePerformanceMaps_SingleSpeed" 1 0 0 0
;*************************************************************************
;"debug" HVACHtPump:Action = {  PostMessageToLog( Format( "   creating CSE PerfMap objects for run %s, Single Speed HVACHtPump %s", Proj:RunAbbrev, Name ) )  }

   "Create HVACHtPump:VCHP3PerfMapHtgRef"                   HVACHtPump:VCHP3PerfMapHtgRef          = {  CreateComp( csePERFORMANCEMAP, Name + "-htgperfmap" )  }
   "Set HVACHtPump:VCHP3PerfMapHtgRef:CSEComment"           HVACHtPump:VCHP3PerfMapHtgRef:CSEComment   =
      {  if (IfValidAnd( HSPF2 > 0 ))
         then  if (IfValidAnd( AutoSize > 0 ))
               then  Format( "Single speed: Autosized / HSPF2 %.1f", HSPF2 )
               else if (IfValidAnd( Cap47 > 0 ) .AND. IfValidAnd( Cap17 > 0 ))
               then  Format( "Single speed: Cap47 %s / Cap17 %s / HSPF2 %.1f", FltToStr( Cap47, 0 ), FltToStr( Cap17, 0 ), HSPF2 )
               else  UNDEFINED  endif endif
         else  UNDEFINED  endif  }

   "Create HVACHtPump:VCHP3PerfMapHtgAxesRef[1]"            HVACHtPump:VCHP3PerfMapHtgAxesRef[1]   = {  CreateComp( csePMGRIDAXIS, Name + "-htgdbtaxis" )  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:Parent"        HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:Parent        = {  VCHP3PerfMapHtgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXType"      HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXType      = {  "DBT"  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[1]" HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[1] = {  VCHP3_Tmin  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[2]" HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[2] = {   5  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[3]" HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[3] = {  17  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[4]" HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[4] = {  47  }
; removed 60deg heating map values - SAC 02/27/25 (tic #1379)
;   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[5]" HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXValues[5] = {  60  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXRefValue"  HVACHtPump:VCHP3PerfMapHtgAxesRef[1]:pmGXRefValue  = {  47  }

   "Create HVACHtPump:VCHP3PerfMapHtgAxesRef[2]"            HVACHtPump:VCHP3PerfMapHtgAxesRef[2]   = {  CreateComp( csePMGRIDAXIS, Name + "-htgspdaxis" )  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:Parent"        HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:Parent        = {  VCHP3PerfMapHtgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXType"      HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXType      = {  "Speed"  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXValues[1]" HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXValues[1] = {  1  }
   "Set HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXRefValue"  HVACHtPump:VCHP3PerfMapHtgAxesRef[2]:pmGXRefValue  = {  1  }

   "Create HVACHtPump:VCHP3PerfMapHtgDataRef[1]"                  HVACHtPump:VCHP3PerfMapHtgDataRef[1] = {  CreateComp( csePMLOOKUPDATA,   Name + "-htgcapdata" )  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:Parent"              HVACHtPump:VCHP3PerfMapHtgDataRef[1]:Parent              = {  VCHP3PerfMapHtgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUType"            HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUType            = {  "CapRat"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesPerRow"    HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesPerRow    = {  1  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[1]" HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[1] = {  format( "%.0fF", VCHP3_Tmin )  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[2]" HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[2] = {  "5F"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[3]" HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[3] = {  "17F"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[4]" HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[4] = {  "47F"  }
; removed 60deg heating map values - SAC 02/27/25 (tic #1379)
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[5]" HVACHtPump:VCHP3PerfMapHtgDataRef[1]:PMLUValuesLabels[5] = {  "60F"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[1]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[1]  = {  Capm30rtd /  Cap47  }  ; VCHP3_Tmin
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[2]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[2]  = {  Cap05     /  Cap47  }  ;   5
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[3]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[3]  = {  Cap17     /  Cap47  }  ;  17
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[4]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[4]  = {  1.0                 }  ;  47
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[5]"       HVACHtPump:VCHP3PerfMapHtgDataRef[1]:pmLUValues[5]  = {  VCHP3PerfMapHtgDataRef[1]:pmLUValues[4]  }  ;  60

   "Create HVACHtPump:VCHP3PerfMapHtgDataRef[2]"                  HVACHtPump:VCHP3PerfMapHtgDataRef[2] = {  CreateComp( csePMLOOKUPDATA,   Name + "-htgcopdata" )  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:Parent"              HVACHtPump:VCHP3PerfMapHtgDataRef[2]:Parent              = {  VCHP3PerfMapHtgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUType"            HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUType            = {  "COP"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesPerRow"    HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesPerRow    = {  1  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[1]" HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[1] = {  format( "%.0fF", VCHP3_Tmin )  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[2]" HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[2] = {  "5F"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[3]" HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[3] = {  "17F"  }
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[4]" HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[4] = {  "47F"  }
; removed 60deg heating map values - SAC 02/27/25 (tic #1379)
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[5]" HVACHtPump:VCHP3PerfMapHtgDataRef[2]:PMLUValuesLabels[5] = {  "60F"  }

   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[1]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[1]  = {  Capm30rtd / NetPwrm30rtd  }   ; VCHP3_Tmin
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[2]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[2]  = {  Cap05     / NetPwr05rtd   }   ;   5
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[3]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[3]  = {  Cap17     / NetPwr17rtd   }   ;  17
   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[4]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[4]  = {  Cap47     / NetPwr47rtd   }   ;  47
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[5]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[5]  = {  VCHP3PerfMapHtgDataRef[2]:pmLUValues[4]  }  ;  60

;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[1]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[1]  =          ; VCHP3_Tmin
;      {  (      ((((Cap17 / Qr17rated) * Qm5max)  * Qr5min  ) * QmLCTmin)  + 
;            ( ( ( ((Cap17 / Qr17rated) * Qm5max)  * Qr5rated) -
;                 (((Cap17 / Qr17rated) * Qm5max)  * Qr5min  )  ) / 
;              (   ((Cap17 / Qr17rated) * Qm5max)   -
;                 (((Cap17 / Qr17rated) * Qm5max)  * Qr5min  ) ) * 
;              ( ( ((Cap17 / Qr17rated) * Qm5max)  * QmLCTmax) -
;                ((((Cap17 / Qr17rated) * Qm5max)  * Qr5min  ) * QmLCTmin)  ) )  )    / 
;         (  (   ( ((((Cap47 / COP47rated) * Pm17rated) / Pr17rated) * EIRm5max) * Pr5min   ) * PmLCTmin )  + 
;            (   ( ((((Cap47 / COP47rated) * Pm17rated) / Pr17rated) * EIRm5max) * Pr5rated ) -
;                ( ((((Cap47 / COP47rated) * Pm17rated) / Pr17rated) * EIRm5max) * Pr5min   )  ) /
;            (     ((((Cap47 / COP47rated) * Pm17rated) / Pr17rated) * EIRm5max)   - 
;                ( ((((Cap47 / COP47rated) * Pm17rated) / Pr17rated) * EIRm5max) * Pr5min   )  ) *
;            (   ( ((((Cap47 / COP47rated) * Pm17rated) / Pr17rated) * EIRm5max) * PmLCTmax ) -
;              ( ( ((((Cap47 / COP47rated) * Pm17rated) / Pr17rated) * EIRm5max) * Pr5min   ) * PmLCTmin ) ))  }
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[2]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[2]  =
;                                                                              {  Cap05 / (((((Cap47 / COP47rated) * Pm17rated) / Pr17rated) * EIRm5max) * Pr5rated)    }  ;   5
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[3]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[3]  = {  Cap17 / ((Cap47 / COP47rated) * Pm17rated)  }  ;  17
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[4]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[4]  = {  Cap47 / (Cap47 / COP47rated)                }  ;  47
;   "Set HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[5]"       HVACHtPump:VCHP3PerfMapHtgDataRef[2]:pmLUValues[5]  = {  VCHP3PerfMapHtgDataRef[2]:pmLUValues[4]     }  ;  60

   ; COOLING
   "Create HVACHtPump:VCHP3PerfMapClgRef"                   HVACHtPump:VCHP3PerfMapClgRef          = {  CreateComp( csePERFORMANCEMAP, Name + "-clgperfmap" )  }
   "Set HVACHtPump:VCHP3PerfMapClgRef:CSEComment"           HVACHtPump:VCHP3PerfMapClgRef:CSEComment   =
      {  if (IfValidAnd( EER2 > 0 ) .AND. IfValidAnd( SEER2 > 0 ))
         then  if (IfValidAnd( AutoSize > 0 ))
               then  Format( "Single speed: Autosized / EER2 %.1f / SEER2 %.1f", EER2, SEER2 )
               else if (IfValidAnd( Cap95 > 0 ))
               then  Format( "Single speed: Cap95 %s / EER2 %.1f / SEER2 %.1f", FltToStr( Cap95, 0 ), EER2, SEER2 )
               else  UNDEFINED  endif endif
         else  UNDEFINED  endif  }

   "Create HVACHtPump:VCHP3PerfMapClgAxesRef[1]"            HVACHtPump:VCHP3PerfMapClgAxesRef[1]   = {  CreateComp( csePMGRIDAXIS, Name + "-clgdbtaxis" )  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:Parent"        HVACHtPump:VCHP3PerfMapClgAxesRef[1]:Parent        = {  VCHP3PerfMapClgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXType"      HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXType      = {  "DBT"  }
   ; revised perf map to exclude fixed 40deg point iff ClgT60 <= 41 - SAC 03/12/25 (tic #1379)
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[1]" HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[1] = {  if (ClgT60 > 41) then  40                             else  (int( ClgT60*10 + 0.5 ) / 10)  endif  }   ; added - SAC 02/27/25
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[2]" HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[2] = {  if (ClgT60 > 41) then  (int( ClgT60*10 + 0.5 ) / 10)  else  82                             endif  }   ; was: 60  - SAC 02/27/25
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[3]" HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[3] = {  if (ClgT60 > 41) then  82                             else  95                             endif  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[4]" HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[4] = {  if (ClgT60 > 41) then  95                             else  VCHP3_Tmax                     endif  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[5]" HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXValues[5] = {  if (ClgT60 > 41) then  VCHP3_Tmax                     else     UNDEFINED                   endif  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXRefValue"  HVACHtPump:VCHP3PerfMapClgAxesRef[1]:pmGXRefValue  = {  95  }

   "Create HVACHtPump:VCHP3PerfMapClgAxesRef[2]"            HVACHtPump:VCHP3PerfMapClgAxesRef[2]   = {  CreateComp( csePMGRIDAXIS, Name + "-clgspdaxis" )  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[2]:Parent"        HVACHtPump:VCHP3PerfMapClgAxesRef[2]:Parent        = {  VCHP3PerfMapClgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXType"      HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXType      = {  "Speed"  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXValues[1]" HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXValues[1] = {  1  }
   "Set HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXRefValue"  HVACHtPump:VCHP3PerfMapClgAxesRef[2]:pmGXRefValue  = {  1  }

   "Create HVACHtPump:VCHP3PerfMapClgDataRef[1]"                  HVACHtPump:VCHP3PerfMapClgDataRef[1] = {  CreateComp( csePMLOOKUPDATA,   Name + "-clgcapdata" )  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:Parent"              HVACHtPump:VCHP3PerfMapClgDataRef[1]:Parent              = {  VCHP3PerfMapClgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUType"            HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUType            = {  "CapRat"  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesPerRow"    HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesPerRow    = {  1  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[1]" HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[1] = {  if (ClgT60 > 41) then  "40F"                          else  Format( "%.1fF", ClgT60 )      endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[2]" HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[2] = {  if (ClgT60 > 41) then  Format( "%.1fF", ClgT60 )      else  "82F"                          endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[3]" HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[3] = {  if (ClgT60 > 41) then  "82F"                          else  "95F"                          endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[4]" HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[4] = {  if (ClgT60 > 41) then  "95F"                          else  format( "%.0fF", VCHP3_Tmax )  endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[5]" HVACHtPump:VCHP3PerfMapClgDataRef[1]:PMLUValuesLabels[5] = {  if (ClgT60 > 41) then  format( "%.0fF", VCHP3_Tmax )  else     UNDEFINED                   endif  }

   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[1]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[1]  = {  if (ClgT60 > 41) then  Cap40crtd  /  Cap95  else  Cap60rtd  /  Cap95  endif  }  ; 40
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[2]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[2]  = {  if (ClgT60 > 41) then  Cap60rtd  /  Cap95   else  Cap82rtd  /  Cap95  endif  }  ; 60ish
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[3]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[3]  = {  if (ClgT60 > 41) then  Cap82rtd  /  Cap95   else  1.0                 endif  }  ; 82
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[4]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[4]  = {  if (ClgT60 > 41) then  1.0                  else  Cap125rtd /  Cap95  endif  }  ; 95
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[5]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[5]  = {  if (ClgT60 > 41) then  Cap125rtd /  Cap95   else     UNDEFINED        endif  }  ; Tmax

;   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[3]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[3]  = {  1.0  }  ; 95
;   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[2]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[2]  =
;      {  ( (((Cap95 / Qr95rated) * Qr95min) / Qm95min)  +
;                (   Cap95               -  ((Cap95 / Qr95rated) * Qr95min) ) / 
;                (  (Cap95 / Qr95rated)  -  ((Cap95 / Qr95rated) * Qr95min) ) *
;                ( ((Cap95 / Qr95rated) / Qm95max)  -  (((Cap95 / Qr95rated) * Qr95min) / Qm95min) ))  /  Cap95  }  ; 82
;   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[1]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[1]  =     
;      {  ( (VCHP3PerfMapClgDataRef[1]:pmLUValues[2] * Cap95) - ( Cap95 - (VCHP3PerfMapClgDataRef[1]:pmLUValues[2] * Cap95) ) / (95-82)*(82-60) )  /  Cap95  }  ; 60
;   "Set HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[4]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[1]:pmLUValues[4]  =     
;      {  (                                            Cap95  + (                                            Cap95  - (VCHP3PerfMapClgDataRef[1]:pmLUValues[2] * Cap95) ) / (95-82)*( VCHP3_Tmax -95) )  /  Cap95  }  ; Tmax

   "Create HVACHtPump:VCHP3PerfMapClgDataRef[2]"                  HVACHtPump:VCHP3PerfMapClgDataRef[2] = {  CreateComp( csePMLOOKUPDATA,   Name + "-clgcopdata" )  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:Parent"              HVACHtPump:VCHP3PerfMapClgDataRef[2]:Parent              = {  VCHP3PerfMapClgRef:Name  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUType"            HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUType            = {  "COP"  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesPerRow"    HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesPerRow    = {  1  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[1]" HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[1] = {  if (ClgT60 > 41) then  "40F"                          else  Format( "%.1fF", ClgT60 )      endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[2]" HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[2] = {  if (ClgT60 > 41) then  Format( "%.1fF", ClgT60 )      else  "82F"                          endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[3]" HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[3] = {  if (ClgT60 > 41) then  "82F"                          else  "95F"                          endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[4]" HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[4] = {  if (ClgT60 > 41) then  "95F"                          else  format( "%.0fF", VCHP3_Tmax )  endif  }
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[5]" HVACHtPump:VCHP3PerfMapClgDataRef[2]:PMLUValuesLabels[5] = {  if (ClgT60 > 41) then  format( "%.0fF", VCHP3_Tmax )  else     UNDEFINED                   endif  }

   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[1]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[1]  = {  if (ClgT60 > 41) then  Cap40crtd / NetPwr60rtd   else  Cap60rtd  / NetPwr60rtd   endif  }   ; 40
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[2]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[2]  = {  if (ClgT60 > 41) then  Cap60rtd  / NetPwr60rtd   else  Cap82rtd  / NetPwr82rtd   endif  }   ; 60ish
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[3]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[3]  = {  if (ClgT60 > 41) then  Cap82rtd  / NetPwr82rtd   else  Cap95     / NetPwr95rtd   endif  }   ; 82
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[4]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[4]  = {  if (ClgT60 > 41) then  Cap95     / NetPwr95rtd   else  Cap125rtd / NetPwr125rtd  endif  }   ; 95
   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[5]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[5]  = {  if (ClgT60 > 41) then  Cap125rtd / NetPwr125rtd  else     UNDEFINED              endif  }   ; Tmax

;   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[1]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[1]  =          ; 60
;      {  ( (((((Cap95 / Qr95rated) * Qr95min) / Qm95min) + ( Cap95 - ((Cap95 / Qr95rated) * Qr95min)) / ((Cap95 / Qr95rated) - ((Cap95 / Qr95rated) * Qr95min)) *
;                 (((Cap95 / Qr95rated) / Qm95max) - (((Cap95 / Qr95rated) * Qr95min) / Qm95min))) -
;            ( Cap95 -                   ((((Cap95 / Qr95rated) * Qr95min) / Qm95min) + ( Cap95 - ((Cap95 / Qr95rated) * Qr95min)) /
;                  ((Cap95 / Qr95rated) - ((Cap95 / Qr95rated) * Qr95min)) *
;                 (((Cap95 / Qr95rated) / Qm95max) - (((Cap95 / Qr95rated) * Qr95min) / Qm95min))) ) / (95-82)*(82-60) ) /
;           ((((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) + ((Cap95 / (EER2/3.41214)) - (((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) * Pm95min)) /
;                 (((Cap95 / (EER2/3.41214)) / Pr95rated) - (((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) * Pm95min)) *
;                ((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) -
;                 ((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min))) -
;            ((Cap95 / (EER2/3.41214)) - (((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) + ((Cap95 / (EER2/3.41214)) -
;             (((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) * Pm95min)) /
;              (((Cap95 / (EER2/3.41214)) / Pr95rated) -
;               (((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) * Pm95min)) *
;                ((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) -
;                 ((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min))) ) / (95-82)*(82-60) ) )  }
;   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[2]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[2]  =          ; 82
;      {  ( ((((Cap95 / Qr95rated) * Qr95min) / Qm95min) + (Cap95 - ((Cap95 / Qr95rated) * Qr95min)) / ((Cap95 / Qr95rated) - ((Cap95 / Qr95rated) * Qr95min)) *
;            (((Cap95 / Qr95rated) / Qm95max) - (((Cap95 / Qr95rated) * Qr95min) / Qm95min)))    /
;          (((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) + ((Cap95 / (EER2/3.41214)) - (((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) * Pm95min)) /
;            (((Cap95 / (EER2/3.41214)) / Pr95rated) - (((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) * Pm95min)) * ((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) -
;            ((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min)))   )  }
;   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[3]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[3]  =          ; 95
;      {  (     Cap95                            /  (Cap95 / (EER2/3.41214))   )  }
;   "Set HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[4]-mid"   HVACHtPump:VCHP3PerfMapClgDataRef[2]:pmLUValues[4]  =          ; Tmax
;      {  ( (Cap95                    + (Cap95                    - ((((Cap95 / Qr95rated) * Qr95min) / Qm95min) + ( Cap95 - ((Cap95 / Qr95rated) * Qr95min)) / 
;           ((Cap95 / Qr95rated) - ((Cap95 / Qr95rated) * Qr95min)) * (((Cap95 / Qr95rated) / Qm95max) - (((Cap95 / Qr95rated) * Qr95min) / Qm95min)))) / (95-82)*(VCHP3_Tmax-95) ) /
;           ((Cap95 / (EER2/3.41214)) + ((Cap95 / (EER2/3.41214)) - (((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) + 
;           ((Cap95 / (EER2/3.41214)) - (((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) * Pm95min)) / (((Cap95 / (EER2/3.41214)) / Pr95rated) -
;           (((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min) * Pm95min)) * ((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) -
;           ((((Cap95 / (EER2/3.41214)) / Pr95rated) / Pm95max) * Pr82min)))) / (95-82)*(VCHP3_Tmax-95) ) )  }

END
;*************************************************************************


;************************************************************************* SAC 05/14/24 (tic #1379)
RULELIST "HtPumpPerfMap_BlastVCHP2Inputs" 1 0 0 0
;*************************************************************************
   "Blast HVACHtPump:Cap05"   HVACHtPump:Cap05  = {  UNDEFINED  }
;   "Blast HVACHtPump:Cap17"   HVACHtPump:Cap17  = {  UNDEFINED  }
;   "Blast HVACHtPump:Cap95"   HVACHtPump:Cap95  = {  UNDEFINED  }
END
;*************************************************************************




;*************************************************************************
;*************************************************************************

ENDFILE

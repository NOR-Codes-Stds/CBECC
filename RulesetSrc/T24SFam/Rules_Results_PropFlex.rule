; -------------------------------------------------------------------------
; Rules pertaining to:   Simulation Results for PropFlex Flexibility runs
; CEC Title-24 Residential Energy Code
; -------------------------------------------------------------------------
; Copyright (c) 2012-2014, California Energy Commission
; Copyright (c) 2012-2014, Wrightsoft Corporation
; All rights reserved.
; Redistribution and use in source and binary forms, with or without modification,
; are permitted provided that the following conditions are met:
; - Redistributions of source code must retain the above copyright notice, this
;   list of conditions and the following disclaimer.
; - Redistributions in binary form must reproduce the above copyright notice, this
;   list of conditions, the following disclaimer in the documentation and/or other
;   materials provided with the distribution.
; - Neither the name of the California Energy Commission nor the names of its
;   contributors may be used to endorse or promote products derived from this
;   software without specific prior written permission.
; DISCLAIMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
; THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
; NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION,
; WRIGHTSOFT CORPORATION, ITRON, INC. OR ANY OTHER AUTHOR OR COPYRIGHT HOLDER OF
; THIS SOFTWARE (COLLECTIVELY, THE "AUTHORS") BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
; OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
; OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
; ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  EACH LICENSEE AND SUBLICENSEE OF THE
; SOFTWARE AGREES NOT TO ASSERT ANY CLAIM AGAINST ANY OF THE AUTHORS RELATING TO
; THIS SOFTWARE, WHETHER DUE TO PERFORMANCE ISSUES, TITLE OR INFRINGEMENT ISSUES,
; STRICT LIABILITY OR OTHERWISE.
; -------------------------------------------------------------------------

; ProposedTDV -> PFlxTDV
; Proposed -> PropFlex
; PropElec -> PFlxElec
; PropNat -> PFlxNat
; PropOther -> PFlxOther
; PropTot -> PFlxTot
; PropPVScale -> PFlxPVScale
; NetSurpPVProduction -> NetSurpPFlxPVProduction
; UnscaledPropPVRatio -> UnscaledPFlxPVRatio

;*************************************************************************
RULELIST "CARes_PropFlexResults" 1 0 0 1
;*************************************************************************

; SAC 8/5/13 - added references to new "SHWPmp" (summed into each occurrence of Elec-SHW)
  ; Space Heating (& heating fan)
; mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
; 'HPHtg' -> 'HPBU' - SAC 07/02/21
	"Store energy use - Elec   - SpcHt"		Proj:RunResults[1]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - SpcHt"		Proj:RunResults[1]:PFlxNatGasEnergy[1]		= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrNatGas", "Htg", "HPBU", "Aux" ) / CondFloorArea  endif  }
	"Store energy use - Other  - SpcHt"		Proj:RunResults[1]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrOther",  "Htg", "HPBU",  "Aux" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - SpcHt"		Proj:RunResults[1]:PFlxTotalEnergy[1]		= {	LocalRef( RunResults[1]:PFlxElecEnergy[1] ) + LocalRef( RunResults[1]:PFlxNatGasEnergy[1] ) + LocalRef( RunResults[1]:PFlxOtherEnergy[1] )   }

  ; Space Cooling (& cooling fan)
	"Store energy use - Elec   - SpcCl"		Proj:RunResults[2]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - SpcCl"		Proj:RunResults[2]:PFlxNatGasEnergy[1]		= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrNatGas", "Clg"         ) / CondFloorArea  endif  }
	"Store energy use - Other  - SpcCl"		Proj:RunResults[2]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrOther",  "Clg"         ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - SpcCl"		Proj:RunResults[2]:PFlxTotalEnergy[1]		= {	LocalRef( RunResults[2]:PFlxElecEnergy[1] ) + LocalRef( RunResults[2]:PFlxNatGasEnergy[1] ) + LocalRef( RunResults[2]:PFlxOtherEnergy[1] )   }

  ; IAQ Ventilation Fans
	"Store energy use - Elec   - IAQVent"	Proj:RunResults[3]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrElec",   "FanV" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - IAQVent"	Proj:RunResults[3]:PFlxNatGasEnergy[1]		= {	0  }
	"Store energy use - Other  - IAQVent"	Proj:RunResults[3]:PFlxOtherEnergy[1]		= {	0  }
	"Store energy use - TOTAL  - IAQVent"	Proj:RunResults[3]:PFlxTotalEnergy[1]		= {	LocalRef( RunResults[3]:PFlxElecEnergy[1] )   }

  ; Other HVAC (aux & misc fans)
   ; SAC 11/15/18 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
	"Store energy use - Elec   - OthrHVAC"	Proj:RunResults[4]:PFlxElecEnergy[1]	= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrElec",   "User1" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - OthrHVAC"	Proj:RunResults[4]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrNatGas", "User1" ) / CondFloorArea  endif  }
	"Store energy use - Other  - OthrHVAC"	Proj:RunResults[4]:PFlxOtherEnergy[1]	= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrOther",  "User1" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - OthrHVAC"	Proj:RunResults[4]:PFlxTotalEnergy[1]	= {	LocalRef( RunResults[4]:PFlxElecEnergy[1] ) + LocalRef( RunResults[4]:PFlxNatGasEnergy[1] ) + LocalRef( RunResults[4]:PFlxOtherEnergy[1] )   }

; SAC 1/26/19 - REDISTRIBUTE OthrHVAC PFlx energy use across SpcHt & SpcCl by fuel based on ratio of total energy use (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - PFlxEnergy"  Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResults[4]:PFlxTotalEnergy[1] != 0 )==0) then  0
                                                                        else if (IfValidAnd( RunResults[1]:PFlxTotalEnergy[1] == 0 ) .AND.
                                                                                 IfValidAnd( RunResults[2]:PFlxTotalEnergy[1] == 0 )) then  0.5
                                                                        else   ValidOr( RunResults[1]:PFlxTotalEnergy[1], 0 ) / 
                                                                              (ValidOr( RunResults[1]:PFlxTotalEnergy[1], 0 ) + ValidOr( RunResults[2]:PFlxTotalEnergy[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - SpcHt"		Proj:RunResults[1]:PFlxElecEnergy[1]	= {   if (IfValidAnd( RunResults[4]:PFlxElecEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[1]:PFlxElecEnergy[1] + (RunResults[4]:PFlxElecEnergy[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - NatGas - SpcHt"		Proj:RunResults[1]:PFlxNatGasEnergy[1]	= {   if (IfValidAnd( RunResults[4]:PFlxNatGasEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[1]:PFlxNatGasEnergy[1] + (RunResults[4]:PFlxNatGasEnergy[1] * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - Other  - SpcHt"		Proj:RunResults[1]:PFlxOtherEnergy[1]	= {   if (IfValidAnd( RunResults[4]:PFlxOtherEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[1]:PFlxOtherEnergy[1] + (RunResults[4]:PFlxOtherEnergy[1]   * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcHt"		Proj:RunResults[1]:PFlxTotalEnergy[1]	= {	LocalRef( RunResults[1]:PFlxElecEnergy[1] ) + LocalRef( RunResults[1]:PFlxNatGasEnergy[1] ) + LocalRef( RunResults[1]:PFlxOtherEnergy[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - SpcCl"		Proj:RunResults[2]:PFlxElecEnergy[1]	= {   if (IfValidAnd( RunResults[4]:PFlxElecEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[2]:PFlxElecEnergy[1] + (RunResults[4]:PFlxElecEnergy[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - NatGas - SpcCl"		Proj:RunResults[2]:PFlxNatGasEnergy[1]	= {   if (IfValidAnd( RunResults[4]:PFlxNatGasEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[2]:PFlxNatGasEnergy[1] + (RunResults[4]:PFlxNatGasEnergy[1] * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - Other  - SpcCl"		Proj:RunResults[2]:PFlxOtherEnergy[1]	= {   if (IfValidAnd( RunResults[4]:PFlxOtherEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[2]:PFlxOtherEnergy[1] + (RunResults[4]:PFlxOtherEnergy[1]   * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcCl"		Proj:RunResults[2]:PFlxTotalEnergy[1]	= {	LocalRef( RunResults[2]:PFlxElecEnergy[1] ) + LocalRef( RunResults[2]:PFlxNatGasEnergy[1] ) + LocalRef( RunResults[2]:PFlxOtherEnergy[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - OthrHVAC"	Proj:RunResults[4]:PFlxElecEnergy[1]	= {	0  }
	"ZERO-OUT         - NatGas - OthrHVAC"	Proj:RunResults[4]:PFlxNatGasEnergy[1]	= {	0  }
	"ZERO-OUT         - Other  - OthrHVAC"	Proj:RunResults[4]:PFlxOtherEnergy[1]	= {	0  }
	"ZERO-OUT         - TOTAL  - OthrHVAC"	Proj:RunResults[4]:PFlxTotalEnergy[1]	= {	0  }
   ; SAC 1/26/19 - end of - redistribution of OthrHVAC PFlxEnergy

  ; Water Heating
   ; SAC 3/23/16 - updated references to "DHW" enduse w/ "Dhw" and added "DhwBU" (DHW backup htg)
   ; SAC 2/27/18 - added "DhwMFL" enduse following each reference to "DHWPmp"
   ; SAC 1/8/19 - summed in CSE enduse 'User2' to each elec DHW results retrieval (to capture HPWH XBU energy)
	"Store energy use - Elec   - WtrHt"		Proj:RunResults[5]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																							then  HourlyResultSum( RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea
			 			  																							else  HourlyResultSum( RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea  endif endif  }
	"Store energy use - NatGas - WtrHt"		Proj:RunResults[5]:PFlxNatGasEnergy[1]		= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
	"Store energy use - Other  - WtrHt"		Proj:RunResults[5]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - WtrHt"		Proj:RunResults[5]:PFlxTotalEnergy[1]		= {	LocalRef( RunResults[5]:PFlxElecEnergy[1] ) + LocalRef( RunResults[5]:PFlxNatGasEnergy[1] ) + LocalRef( RunResults[5]:PFlxOtherEnergy[1] )   }

  ; Inside Lighting
	"Store energy use - Elec   - InsLtg"	Proj:RunResults[6]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrElec",   "Lit" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - InsLtg"	Proj:RunResults[6]:PFlxNatGasEnergy[1]		= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrNatGas", "Lit" ) / CondFloorArea  endif  }
	"Store energy use - Other  - InsLtg"	Proj:RunResults[6]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrOther",  "Lit" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - InsLtg"	Proj:RunResults[6]:PFlxTotalEnergy[1]		= {	LocalRef( RunResults[6]:PFlxElecEnergy[1] ) + LocalRef( RunResults[6]:PFlxNatGasEnergy[1] ) + LocalRef( RunResults[6]:PFlxOtherEnergy[1] )   }

  ; Appliances & Cooking
	"Store energy use - Elec   - AppCkg"	Proj:RunResults[7]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - AppCkg"	Proj:RunResults[7]:PFlxNatGasEnergy[1]		= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - Other  - AppCkg"	Proj:RunResults[7]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - AppCkg"	Proj:RunResults[7]:PFlxTotalEnergy[1]		= {	LocalRef( RunResults[7]:PFlxElecEnergy[1] ) + LocalRef( RunResults[7]:PFlxNatGasEnergy[1] ) + LocalRef( RunResults[7]:PFlxOtherEnergy[1] )   }

  ; Plug Loads
	"Store energy use - Elec   - Plugs"		Proj:RunResults[8]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrElec",   "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - Plugs"		Proj:RunResults[8]:PFlxNatGasEnergy[1]		= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - Other  - Plugs"		Proj:RunResults[8]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - Plugs"		Proj:RunResults[8]:PFlxTotalEnergy[1]		= {	LocalRef( RunResults[8]:PFlxElecEnergy[1] ) + LocalRef( RunResults[8]:PFlxNatGasEnergy[1] ) + LocalRef( RunResults[8]:PFlxOtherEnergy[1] )   }

  ; Exterior
	"Store energy use - Elec   - Ext"		Proj:RunResults[9]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrElec",   "Ext" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - Ext"		Proj:RunResults[9]:PFlxNatGasEnergy[1]		= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
	"Store energy use - Other  - Ext"		Proj:RunResults[9]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							else  HourlyResultSum( RunID, "MtrOther",  "Ext" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - Ext"		Proj:RunResults[9]:PFlxTotalEnergy[1]		= {	LocalRef( RunResults[9]:PFlxElecEnergy[1] ) + LocalRef( RunResults[9]:PFlxNatGasEnergy[1] ) + LocalRef( RunResults[9]:PFlxOtherEnergy[1] )   }

  ; PV
	"Store energy use - Elec   - PV"			Proj:RunResults[13]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec", "PV" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - PV"			Proj:RunResults[13]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - PV"			Proj:RunResults[13]:PFlxOtherEnergy[1]		= {	0  }
	"Store energy use - TOTAL  - PV"			Proj:RunResults[13]:PFlxTotalEnergy[1]		= {	LocalRef( RunResults[13]:PFlxElecEnergy[1] )   }

  ; Battery
	"Store energy use - Elec   - Battery"	Proj:RunResults[14]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec", "BT" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - Battery"	Proj:RunResults[14]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - Battery"	Proj:RunResults[14]:PFlxOtherEnergy[1]		= {	0  }
	"Store energy use - TOTAL  - Battery"	Proj:RunResults[14]:PFlxTotalEnergy[1]		= {	LocalRef( RunResults[14]:PFlxElecEnergy[1] )   }

  ; Compliance Total
	"Store energy use - Elec   - Comp Ttl"	Proj:RunResults[11]:PFlxElecEnergy[1]		= {	RunResults[1]:PFlxElecEnergy[1]   + RunResults[2]:PFlxElecEnergy[1]   + RunResults[3]:PFlxElecEnergy[1]   + RunResults[4]:PFlxElecEnergy[1]   + RunResults[5]:PFlxElecEnergy[1]    }
	"Store energy use - NatGas - Comp Ttl"	Proj:RunResults[11]:PFlxNatGasEnergy[1]	= {	RunResults[1]:PFlxNatGasEnergy[1] + RunResults[2]:PFlxNatGasEnergy[1] + RunResults[3]:PFlxNatGasEnergy[1] + RunResults[4]:PFlxNatGasEnergy[1] + RunResults[5]:PFlxNatGasEnergy[1]  }
	"Store energy use - Other  - Comp Ttl"	Proj:RunResults[11]:PFlxOtherEnergy[1]		= {	RunResults[1]:PFlxOtherEnergy[1]  + RunResults[2]:PFlxOtherEnergy[1]  + RunResults[3]:PFlxOtherEnergy[1]  + RunResults[4]:PFlxOtherEnergy[1]  + RunResults[5]:PFlxOtherEnergy[1]   }
	"Store energy use - TOTAL  - Comp Ttl"	Proj:RunResults[11]:PFlxTotalEnergy[1]		= {	RunResults[1]:PFlxTotalEnergy[1]  + RunResults[2]:PFlxTotalEnergy[1]  + RunResults[3]:PFlxTotalEnergy[1]  + RunResults[4]:PFlxTotalEnergy[1]  + RunResults[5]:PFlxTotalEnergy[1]   }
;   ; SAC 10/6/16 - 2019 updates  - SAC 4/7/17 - shifted from CompTot to Tot
;	"Add in PV - Elec   - Comp Ttl"	      Proj:RunResults[11]:PFlxElecEnergy[1]		= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                          else  RunResults[11]:PFlxElecEnergy[1]  + RunResults[13]:PFlxElecEnergy[1]  + RunResults[14]:PFlxElecEnergy[1]   endif   }
;	"Add in PV - TOTAL  - Comp Ttl"	      Proj:RunResults[11]:PFlxTotalEnergy[1]		= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                          else  RunResults[11]:PFlxTotalEnergy[1] + RunResults[13]:PFlxTotalEnergy[1] + RunResults[14]:PFlxTotalEnergy[1]  endif   }

  ; Total
	"Store energy use - Elec   - Total"		Proj:RunResults[10]:PFlxElecEnergy[1]		= {	RunResults[11]:PFlxElecEnergy[1]   + RunResults[6]:PFlxElecEnergy[1]   + RunResults[7]:PFlxElecEnergy[1]   + RunResults[8]:PFlxElecEnergy[1]   + RunResults[9]:PFlxElecEnergy[1]    }
	"Store energy use - NatGas - Total"		Proj:RunResults[10]:PFlxNatGasEnergy[1]	= {	RunResults[11]:PFlxNatGasEnergy[1] + RunResults[6]:PFlxNatGasEnergy[1] + RunResults[7]:PFlxNatGasEnergy[1] + RunResults[8]:PFlxNatGasEnergy[1] + RunResults[9]:PFlxNatGasEnergy[1]  }
	"Store energy use - Other  - Total"		Proj:RunResults[10]:PFlxOtherEnergy[1]		= {	RunResults[11]:PFlxOtherEnergy[1]  + RunResults[6]:PFlxOtherEnergy[1]  + RunResults[7]:PFlxOtherEnergy[1]  + RunResults[8]:PFlxOtherEnergy[1]  + RunResults[9]:PFlxOtherEnergy[1]   }
	"Store energy use - TOTAL  - Total"		Proj:RunResults[10]:PFlxTotalEnergy[1]		= {	RunResults[11]:PFlxTotalEnergy[1]  + RunResults[6]:PFlxTotalEnergy[1]  + RunResults[7]:PFlxTotalEnergy[1]  + RunResults[8]:PFlxTotalEnergy[1]  + RunResults[9]:PFlxTotalEnergy[1]   }
   ; SAC 4/7/17 - shifted PV & Batt from CompTot to Tot for 2019
   ; SAC 4/28/17 - add in only Battery to Total for 2016
	"Add in PV/Batt - Elec   - Total"	   Proj:RunResults[10]:PFlxElecEnergy[1]		= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                          else if (EnergyCodeYearNum < 2019) 
                                                                                          then  RunResults[10]:PFlxElecEnergy[1]  + RunResults[14]:PFlxElecEnergy[1]
                                                                                          else  RunResults[10]:PFlxElecEnergy[1]  + RunResults[13]:PFlxElecEnergy[1]  + RunResults[14]:PFlxElecEnergy[1]   endif endif   }
	"Add in PV/Batt - TOTAL  - Total"	   Proj:RunResults[10]:PFlxTotalEnergy[1]		= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                          else if (EnergyCodeYearNum < 2019) 
                                                                                          then  RunResults[10]:PFlxTotalEnergy[1] + RunResults[14]:PFlxTotalEnergy[1]
                                                                                          else  RunResults[10]:PFlxTotalEnergy[1] + RunResults[13]:PFlxTotalEnergy[1] + RunResults[14]:PFlxTotalEnergy[1]  endif endif   }
END

;*************************************************************************		- SAC 6/25/13
RULELIST "CARes_PropFlexResults_N" 1 0 0 1
; mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
;*************************************************************************

  ; Space Heating (& heating fan)
; mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
	"Store energy use - Elec   - N-SpcHt"		Proj:RunResultsN[1]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Htg", "HPBU", "FanH",   "Aux", "Fan"  ) / CondFloorArea  endif  }
	"Store energy use - NatGas - N-SpcHt"		Proj:RunResultsN[1]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Htg", "HPBU", "Aux"         ) / CondFloorArea  endif  }
	"Store energy use - Other  - N-SpcHt"		Proj:RunResultsN[1]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Htg", "HPBU",  "Aux"         ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - N-SpcHt"		Proj:RunResultsN[1]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsN[1]:PFlxElecEnergy[1] ) + LocalRef( RunResultsN[1]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsN[1]:PFlxOtherEnergy[1] )   }

  ; Space Cooling (& cooling fan)
	"Store energy use - Elec   - N-SpcCl"		Proj:RunResultsN[2]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - N-SpcCl"		Proj:RunResultsN[2]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Clg"         ) / CondFloorArea  endif  }
	"Store energy use - Other  - N-SpcCl"		Proj:RunResultsN[2]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Clg"         ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - N-SpcCl"		Proj:RunResultsN[2]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsN[2]:PFlxElecEnergy[1] ) + LocalRef( RunResultsN[2]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsN[2]:PFlxOtherEnergy[1] )   }

  ; IAQ Ventilation Fans
	"Store energy use - Elec   - N-IAQVent"	Proj:RunResultsN[3]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "FanV" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - N-IAQVent"	Proj:RunResultsN[3]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - N-IAQVent"	Proj:RunResultsN[3]:PFlxOtherEnergy[1]		= {	0  }
	"Store energy use - TOTAL  - N-IAQVent"	Proj:RunResultsN[3]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsN[3]:PFlxElecEnergy[1] )   }

  ; Other HVAC (aux & misc fans)
   ; SAC 1/27/19 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
	"Store energy use - Elec   - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxElecEnergy[1]	   = {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrElec",   "User1" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrNatGas", "User1" ) / CondFloorArea  endif  }
	"Store energy use - Other  - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxOtherEnergy[1]	   = {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrOther",  "User1" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsN[4]:PFlxElecEnergy[1] ) + LocalRef( RunResultsN[4]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsN[4]:PFlxOtherEnergy[1] )   }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC N-PFlx energy use across SpcHt & SpcCl by fuel based on ratio of total energy use (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - N-PFlxEnergy"   Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsN[4]:PFlxTotalEnergy[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsN[1]:PFlxTotalEnergy[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsN[2]:PFlxTotalEnergy[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsN[1]:PFlxTotalEnergy[1], 0 ) / 
                                                                                 (ValidOr( RunResultsN[1]:PFlxTotalEnergy[1], 0 ) + ValidOr( RunResultsN[2]:PFlxTotalEnergy[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - N-SpcHt"		Proj:RunResultsN[1]:PFlxElecEnergy[1]	   = {   if (IfValidAnd( RunResultsN[4]:PFlxElecEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsN[1]:PFlxElecEnergy[1] + (RunResultsN[4]:PFlxElecEnergy[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - NatGas - N-SpcHt"		Proj:RunResultsN[1]:PFlxNatGasEnergy[1]	= {   if (IfValidAnd( RunResultsN[4]:PFlxNatGasEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsN[1]:PFlxNatGasEnergy[1] + (RunResultsN[4]:PFlxNatGasEnergy[1] * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - Other  - N-SpcHt"		Proj:RunResultsN[1]:PFlxOtherEnergy[1]	   = {   if (IfValidAnd( RunResultsN[4]:PFlxOtherEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsN[1]:PFlxOtherEnergy[1] + (RunResultsN[4]:PFlxOtherEnergy[1]   * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcHt"		Proj:RunResultsN[1]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsN[1]:PFlxElecEnergy[1] ) + LocalRef( RunResultsN[1]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsN[1]:PFlxOtherEnergy[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - N-SpcCl"		Proj:RunResultsN[2]:PFlxElecEnergy[1]	   = {   if (IfValidAnd( RunResultsN[4]:PFlxElecEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsN[2]:PFlxElecEnergy[1] + (RunResultsN[4]:PFlxElecEnergy[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - NatGas - N-SpcCl"		Proj:RunResultsN[2]:PFlxNatGasEnergy[1]	= {   if (IfValidAnd( RunResultsN[4]:PFlxNatGasEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsN[2]:PFlxNatGasEnergy[1] + (RunResultsN[4]:PFlxNatGasEnergy[1] * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - Other  - N-SpcCl"		Proj:RunResultsN[2]:PFlxOtherEnergy[1]	   = {   if (IfValidAnd( RunResultsN[4]:PFlxOtherEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsN[2]:PFlxOtherEnergy[1] + (RunResultsN[4]:PFlxOtherEnergy[1]   * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcCl"		Proj:RunResultsN[2]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsN[2]:PFlxElecEnergy[1] ) + LocalRef( RunResultsN[2]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsN[2]:PFlxOtherEnergy[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxElecEnergy[1]	   = {	0  }
	"ZERO-OUT         - NatGas - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxNatGasEnergy[1]	= {	0  }
	"ZERO-OUT         - Other  - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxOtherEnergy[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxTotalEnergy[1]	   = {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC N-PFlxEnergy

  ; Water Heating
	"Store energy use - Elec   - N-WtrHt"		Proj:RunResultsN[5]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else if (CSEinclDHWMFL_EU)
			 			  																							   then  HourlyResultSum( RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea  endif endif  }
	"Store energy use - NatGas - N-WtrHt"		Proj:RunResultsN[5]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
	"Store energy use - Other  - N-WtrHt"		Proj:RunResultsN[5]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - N-WtrHt"		Proj:RunResultsN[5]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsN[5]:PFlxElecEnergy[1] ) + LocalRef( RunResultsN[5]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsN[5]:PFlxOtherEnergy[1] )   }

  ; Inside Lighting
	"Store energy use - Elec   - N-InsLtg"		Proj:RunResultsN[6]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Lit" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - N-InsLtg"		Proj:RunResultsN[6]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Lit" ) / CondFloorArea  endif  }
	"Store energy use - Other  - N-InsLtg"		Proj:RunResultsN[6]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Lit" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - N-InsLtg"		Proj:RunResultsN[6]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsN[6]:PFlxElecEnergy[1] ) + LocalRef( RunResultsN[6]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsN[6]:PFlxOtherEnergy[1] )   }

  ; Appliances & Cooking
	"Store energy use - Elec   - N-AppCkg"		Proj:RunResultsN[7]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - N-AppCkg"		Proj:RunResultsN[7]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - Other  - N-AppCkg"		Proj:RunResultsN[7]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - N-AppCkg"		Proj:RunResultsN[7]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsN[7]:PFlxElecEnergy[1] ) + LocalRef( RunResultsN[7]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsN[7]:PFlxOtherEnergy[1] )   }

  ; Plug Loads
	"Store energy use - Elec   - N-Plugs"		Proj:RunResultsN[8]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - N-Plugs"		Proj:RunResultsN[8]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - Other  - N-Plugs"		Proj:RunResultsN[8]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - N-Plugs"		Proj:RunResultsN[8]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsN[8]:PFlxElecEnergy[1] ) + LocalRef( RunResultsN[8]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsN[8]:PFlxOtherEnergy[1] )   }

  ; Exterior
	"Store energy use - Elec   - N-Ext"			Proj:RunResultsN[9]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Ext" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - N-Ext"			Proj:RunResultsN[9]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
	"Store energy use - Other  - N-Ext"			Proj:RunResultsN[9]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Ext" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - N-Ext"			Proj:RunResultsN[9]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsN[9]:PFlxElecEnergy[1] ) + LocalRef( RunResultsN[9]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsN[9]:PFlxOtherEnergy[1] )   }

  ; PV
	"Store energy use - Elec   - N-PV"			Proj:RunResultsN[13]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec", "PV" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - N-PV"			Proj:RunResultsN[13]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - N-PV"			Proj:RunResultsN[13]:PFlxOtherEnergy[1]	= {	0  }
	"Store energy use - TOTAL  - N-PV"			Proj:RunResultsN[13]:PFlxTotalEnergy[1]	= {	LocalRef( RunResultsN[13]:PFlxElecEnergy[1] )   }

  ; Battery
	"Store energy use - Elec   - N-Battery"	Proj:RunResultsN[14]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								   else  HourlyResultSum( RunID, "MtrElec", "BT" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - N-Battery"	Proj:RunResultsN[14]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - N-Battery"	Proj:RunResultsN[14]:PFlxOtherEnergy[1]	= {	0  }
	"Store energy use - TOTAL  - N-Battery"	Proj:RunResultsN[14]:PFlxTotalEnergy[1]	= {	LocalRef( RunResultsN[14]:PFlxElecEnergy[1] )   }

  ; Compliance Total
	"Store energy use - Elec   - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxElecEnergy[1]		= {	RunResultsN[1]:PFlxElecEnergy[1]   + RunResultsN[2]:PFlxElecEnergy[1]   + RunResultsN[3]:PFlxElecEnergy[1]   + RunResultsN[4]:PFlxElecEnergy[1]   + RunResultsN[5]:PFlxElecEnergy[1]    }
	"Store energy use - NatGas - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxNatGasEnergy[1]	= {	RunResultsN[1]:PFlxNatGasEnergy[1] + RunResultsN[2]:PFlxNatGasEnergy[1] + RunResultsN[3]:PFlxNatGasEnergy[1] + RunResultsN[4]:PFlxNatGasEnergy[1] + RunResultsN[5]:PFlxNatGasEnergy[1]  }
	"Store energy use - Other  - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxOtherEnergy[1]	= {	RunResultsN[1]:PFlxOtherEnergy[1]  + RunResultsN[2]:PFlxOtherEnergy[1]  + RunResultsN[3]:PFlxOtherEnergy[1]  + RunResultsN[4]:PFlxOtherEnergy[1]  + RunResultsN[5]:PFlxOtherEnergy[1]   }
	"Store energy use - TOTAL  - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxTotalEnergy[1]	= {	RunResultsN[1]:PFlxTotalEnergy[1]  + RunResultsN[2]:PFlxTotalEnergy[1]  + RunResultsN[3]:PFlxTotalEnergy[1]  + RunResultsN[4]:PFlxTotalEnergy[1]  + RunResultsN[5]:PFlxTotalEnergy[1]   }
;   ; SAC 10/6/16 - 2019 updates
;	"Add in PV - Elec   - N-Comp Ttl"	      Proj:RunResultsN[11]:PFlxElecEnergy[1]		= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                             else  RunResultsN[11]:PFlxElecEnergy[1]  + RunResultsN[13]:PFlxElecEnergy[1]  + RunResultsN[14]:PFlxElecEnergy[1]   endif   }
;	"Add in PV - TOTAL  - N-Comp Ttl"	      Proj:RunResultsN[11]:PFlxTotalEnergy[1]	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                             else  RunResultsN[11]:PFlxTotalEnergy[1] + RunResultsN[13]:PFlxTotalEnergy[1] + RunResultsN[14]:PFlxTotalEnergy[1]  endif   }

  ; Total
	"Store energy use - Elec   - N-Total"		Proj:RunResultsN[10]:PFlxElecEnergy[1]		= {	RunResultsN[11]:PFlxElecEnergy[1]   + RunResultsN[6]:PFlxElecEnergy[1]   + RunResultsN[7]:PFlxElecEnergy[1]   + RunResultsN[8]:PFlxElecEnergy[1]   + RunResultsN[9]:PFlxElecEnergy[1]    }
	"Store energy use - NatGas - N-Total"		Proj:RunResultsN[10]:PFlxNatGasEnergy[1]	= {	RunResultsN[11]:PFlxNatGasEnergy[1] + RunResultsN[6]:PFlxNatGasEnergy[1] + RunResultsN[7]:PFlxNatGasEnergy[1] + RunResultsN[8]:PFlxNatGasEnergy[1] + RunResultsN[9]:PFlxNatGasEnergy[1]  }
	"Store energy use - Other  - N-Total"		Proj:RunResultsN[10]:PFlxOtherEnergy[1]	= {	RunResultsN[11]:PFlxOtherEnergy[1]  + RunResultsN[6]:PFlxOtherEnergy[1]  + RunResultsN[7]:PFlxOtherEnergy[1]  + RunResultsN[8]:PFlxOtherEnergy[1]  + RunResultsN[9]:PFlxOtherEnergy[1]   }
	"Store energy use - TOTAL  - N-Total"		Proj:RunResultsN[10]:PFlxTotalEnergy[1]	= {	RunResultsN[11]:PFlxTotalEnergy[1]  + RunResultsN[6]:PFlxTotalEnergy[1]  + RunResultsN[7]:PFlxTotalEnergy[1]  + RunResultsN[8]:PFlxTotalEnergy[1]  + RunResultsN[9]:PFlxTotalEnergy[1]   }
   ; SAC 4/28/17 - shifted PV & Batt from CompTot to Tot for 2019
   ; SAC 4/28/17 - add in only Battery to Total for 2016
	"Add in PV/Batt - Elec   - N-Total"	      Proj:RunResultsN[10]:PFlxElecEnergy[1]		= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                             else if (EnergyCodeYearNum < 2019) 
                                                                                             then  RunResultsN[10]:PFlxElecEnergy[1]  + RunResultsN[14]:PFlxElecEnergy[1]
                                                                                             else  RunResultsN[10]:PFlxElecEnergy[1]  + RunResultsN[13]:PFlxElecEnergy[1]  + RunResultsN[14]:PFlxElecEnergy[1]   endif endif   }
	"Add in PV/Batt - TOTAL  - N-Total"	      Proj:RunResultsN[10]:PFlxTotalEnergy[1]	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                             else if (EnergyCodeYearNum < 2019) 
                                                                                             then  RunResultsN[10]:PFlxTotalEnergy[1] + RunResultsN[14]:PFlxTotalEnergy[1]
                                                                                             else  RunResultsN[10]:PFlxTotalEnergy[1] + RunResultsN[13]:PFlxTotalEnergy[1] + RunResultsN[14]:PFlxTotalEnergy[1]  endif endif   }
END

;*************************************************************************		- SAC 6/25/13
RULELIST "CARes_PropFlexResults_E" 1 0 0 1
; mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
;*************************************************************************

  ; Space Heating (& heating fan)
; mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
	"Store energy use - Elec   - E-SpcHt"		Proj:RunResultsE[1]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Htg", "HPBU", "FanH",   "Aux", "Fan" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - E-SpcHt"		Proj:RunResultsE[1]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Htg", "HPBU", "Aux"         ) / CondFloorArea  endif  }
	"Store energy use - Other  - E-SpcHt"		Proj:RunResultsE[1]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Htg", "HPBU",  "Aux"         ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - E-SpcHt"		Proj:RunResultsE[1]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsE[1]:PFlxElecEnergy[1] ) + LocalRef( RunResultsE[1]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsE[1]:PFlxOtherEnergy[1] )   }

  ; Space Cooling (& cooling fan)
	"Store energy use - Elec   - E-SpcCl"		Proj:RunResultsE[2]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - E-SpcCl"		Proj:RunResultsE[2]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Clg"         ) / CondFloorArea  endif  }
	"Store energy use - Other  - E-SpcCl"		Proj:RunResultsE[2]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Clg"         ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - E-SpcCl"		Proj:RunResultsE[2]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsE[2]:PFlxElecEnergy[1] ) + LocalRef( RunResultsE[2]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsE[2]:PFlxOtherEnergy[1] )   }

  ; IAQ Ventilation Fans
	"Store energy use - Elec   - E-IAQVent"	Proj:RunResultsE[3]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "FanV" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - E-IAQVent"	Proj:RunResultsE[3]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - E-IAQVent"	Proj:RunResultsE[3]:PFlxOtherEnergy[1]		= {	0  }
	"Store energy use - TOTAL  - E-IAQVent"	Proj:RunResultsE[3]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsE[3]:PFlxElecEnergy[1] )   }

  ; Other HVAC (aux & misc fans)
   ; SAC 1/27/19 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
	"Store energy use - Elec   - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxElecEnergy[1]	   = {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrElec",   "User1" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrNatGas", "User1" ) / CondFloorArea  endif  }
	"Store energy use - Other  - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxOtherEnergy[1]	   = {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrOther",  "User1" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsE[4]:PFlxElecEnergy[1] ) + LocalRef( RunResultsE[4]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsE[4]:PFlxOtherEnergy[1] )   }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC E-PFlx energy use across SpcHt & SpcCl by fuel based on ratio of total energy use (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - E-PFlxEnergy"   Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsE[4]:PFlxTotalEnergy[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsE[1]:PFlxTotalEnergy[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsE[2]:PFlxTotalEnergy[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsE[1]:PFlxTotalEnergy[1], 0 ) / 
                                                                                 (ValidOr( RunResultsE[1]:PFlxTotalEnergy[1], 0 ) + ValidOr( RunResultsE[2]:PFlxTotalEnergy[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - E-SpcHt"		Proj:RunResultsE[1]:PFlxElecEnergy[1]	   = {   if (IfValidAnd( RunResultsE[4]:PFlxElecEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsE[1]:PFlxElecEnergy[1] + (RunResultsE[4]:PFlxElecEnergy[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - NatGas - E-SpcHt"		Proj:RunResultsE[1]:PFlxNatGasEnergy[1]	= {   if (IfValidAnd( RunResultsE[4]:PFlxNatGasEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsE[1]:PFlxNatGasEnergy[1] + (RunResultsE[4]:PFlxNatGasEnergy[1] * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - Other  - E-SpcHt"		Proj:RunResultsE[1]:PFlxOtherEnergy[1]	   = {   if (IfValidAnd( RunResultsE[4]:PFlxOtherEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsE[1]:PFlxOtherEnergy[1] + (RunResultsE[4]:PFlxOtherEnergy[1]   * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - E-SpcHt"		Proj:RunResultsE[1]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsE[1]:PFlxElecEnergy[1] ) + LocalRef( RunResultsE[1]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsE[1]:PFlxOtherEnergy[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - E-SpcCl"		Proj:RunResultsE[2]:PFlxElecEnergy[1]	   = {   if (IfValidAnd( RunResultsE[4]:PFlxElecEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsE[2]:PFlxElecEnergy[1] + (RunResultsE[4]:PFlxElecEnergy[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - NatGas - E-SpcCl"		Proj:RunResultsE[2]:PFlxNatGasEnergy[1]	= {   if (IfValidAnd( RunResultsE[4]:PFlxNatGasEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsE[2]:PFlxNatGasEnergy[1] + (RunResultsE[4]:PFlxNatGasEnergy[1] * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - Other  - E-SpcCl"		Proj:RunResultsE[2]:PFlxOtherEnergy[1]	   = {   if (IfValidAnd( RunResultsE[4]:PFlxOtherEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsE[2]:PFlxOtherEnergy[1] + (RunResultsE[4]:PFlxOtherEnergy[1]   * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - E-SpcCl"		Proj:RunResultsE[2]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsE[2]:PFlxElecEnergy[1] ) + LocalRef( RunResultsE[2]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsE[2]:PFlxOtherEnergy[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxElecEnergy[1]	   = {	0  }
	"ZERO-OUT         - NatGas - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxNatGasEnergy[1]	= {	0  }
	"ZERO-OUT         - Other  - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxOtherEnergy[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxTotalEnergy[1]	   = {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC E-PFlxEnergy

  ; Water Heating
	"Store energy use - Elec   - E-WtrHt"		Proj:RunResultsE[5]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else if (CSEinclDHWMFL_EU)
			 			  																							   then  HourlyResultSum( RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea  endif endif  }
	"Store energy use - NatGas - E-WtrHt"		Proj:RunResultsE[5]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
	"Store energy use - Other  - E-WtrHt"		Proj:RunResultsE[5]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - E-WtrHt"		Proj:RunResultsE[5]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsE[5]:PFlxElecEnergy[1] ) + LocalRef( RunResultsE[5]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsE[5]:PFlxOtherEnergy[1] )   }

  ; Inside Lighting
	"Store energy use - Elec   - E-InsLtg"		Proj:RunResultsE[6]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Lit" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - E-InsLtg"		Proj:RunResultsE[6]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Lit" ) / CondFloorArea  endif  }
	"Store energy use - Other  - E-InsLtg"		Proj:RunResultsE[6]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Lit" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - E-InsLtg"		Proj:RunResultsE[6]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsE[6]:PFlxElecEnergy[1] ) + LocalRef( RunResultsE[6]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsE[6]:PFlxOtherEnergy[1] )   }

  ; Appliances & Cooking
	"Store energy use - Elec   - E-AppCkg"		Proj:RunResultsE[7]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - E-AppCkg"		Proj:RunResultsE[7]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - Other  - E-AppCkg"		Proj:RunResultsE[7]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - E-AppCkg"		Proj:RunResultsE[7]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsE[7]:PFlxElecEnergy[1] ) + LocalRef( RunResultsE[7]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsE[7]:PFlxOtherEnergy[1] )   }

  ; Plug Loads
	"Store energy use - Elec   - E-Plugs"		Proj:RunResultsE[8]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - E-Plugs"		Proj:RunResultsE[8]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - Other  - E-Plugs"		Proj:RunResultsE[8]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - E-Plugs"		Proj:RunResultsE[8]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsE[8]:PFlxElecEnergy[1] ) + LocalRef( RunResultsE[8]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsE[8]:PFlxOtherEnergy[1] )   }

  ; Exterior
	"Store energy use - Elec   - E-Ext"			Proj:RunResultsE[9]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Ext" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - E-Ext"			Proj:RunResultsE[9]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
	"Store energy use - Other  - E-Ext"			Proj:RunResultsE[9]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Ext" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - E-Ext"			Proj:RunResultsE[9]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsE[9]:PFlxElecEnergy[1] ) + LocalRef( RunResultsE[9]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsE[9]:PFlxOtherEnergy[1] )   }

  ; PV
	"Store energy use - Elec   - E-PV"			Proj:RunResultsE[13]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec", "PV" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - E-PV"			Proj:RunResultsE[13]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - E-PV"			Proj:RunResultsE[13]:PFlxOtherEnergy[1]	= {	0  }
	"Store energy use - TOTAL  - E-PV"			Proj:RunResultsE[13]:PFlxTotalEnergy[1]	= {	LocalRef( RunResultsE[13]:PFlxElecEnergy[1] )   }

  ; Battery
	"Store energy use - Elec   - E-Battery"	Proj:RunResultsE[14]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec", "BT" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - E-Battery"	Proj:RunResultsE[14]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - E-Battery"	Proj:RunResultsE[14]:PFlxOtherEnergy[1]	= {	0  }
	"Store energy use - TOTAL  - E-Battery"	Proj:RunResultsE[14]:PFlxTotalEnergy[1]	= {	LocalRef( RunResultsE[14]:PFlxElecEnergy[1] )   }

  ; Compliance Total
	"Store energy use - Elec   - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxElecEnergy[1]		= {	RunResultsE[1]:PFlxElecEnergy[1]   + RunResultsE[2]:PFlxElecEnergy[1]   + RunResultsE[3]:PFlxElecEnergy[1]   + RunResultsE[4]:PFlxElecEnergy[1]   + RunResultsE[5]:PFlxElecEnergy[1]    }
	"Store energy use - NatGas - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxNatGasEnergy[1]	= {	RunResultsE[1]:PFlxNatGasEnergy[1] + RunResultsE[2]:PFlxNatGasEnergy[1] + RunResultsE[3]:PFlxNatGasEnergy[1] + RunResultsE[4]:PFlxNatGasEnergy[1] + RunResultsE[5]:PFlxNatGasEnergy[1]  }
	"Store energy use - Other  - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxOtherEnergy[1]	= {	RunResultsE[1]:PFlxOtherEnergy[1]  + RunResultsE[2]:PFlxOtherEnergy[1]  + RunResultsE[3]:PFlxOtherEnergy[1]  + RunResultsE[4]:PFlxOtherEnergy[1]  + RunResultsE[5]:PFlxOtherEnergy[1]   }
	"Store energy use - TOTAL  - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxTotalEnergy[1]	= {	RunResultsE[1]:PFlxTotalEnergy[1]  + RunResultsE[2]:PFlxTotalEnergy[1]  + RunResultsE[3]:PFlxTotalEnergy[1]  + RunResultsE[4]:PFlxTotalEnergy[1]  + RunResultsE[5]:PFlxTotalEnergy[1]   }
;   ; SAC 10/6/16 - 2019 updates
;	"Add in PV - Elec   - E-Comp Ttl"	      Proj:RunResultsE[11]:PFlxElecEnergy[1]		= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                             else  RunResultsE[11]:PFlxElecEnergy[1]  + RunResultsE[13]:PFlxElecEnergy[1]  + RunResultsE[14]:PFlxElecEnergy[1]   endif   }
;	"Add in PV - TOTAL  - E-Comp Ttl"	      Proj:RunResultsE[11]:PFlxTotalEnergy[1]	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                             else  RunResultsE[11]:PFlxTotalEnergy[1] + RunResultsE[13]:PFlxTotalEnergy[1] + RunResultsE[14]:PFlxTotalEnergy[1]  endif   }

  ; Total
	"Store energy use - Elec   - E-Total"		Proj:RunResultsE[10]:PFlxElecEnergy[1]		= {	RunResultsE[11]:PFlxElecEnergy[1]   + RunResultsE[6]:PFlxElecEnergy[1]   + RunResultsE[7]:PFlxElecEnergy[1]   + RunResultsE[8]:PFlxElecEnergy[1]   + RunResultsE[9]:PFlxElecEnergy[1]    }
	"Store energy use - NatGas - E-Total"		Proj:RunResultsE[10]:PFlxNatGasEnergy[1]	= {	RunResultsE[11]:PFlxNatGasEnergy[1] + RunResultsE[6]:PFlxNatGasEnergy[1] + RunResultsE[7]:PFlxNatGasEnergy[1] + RunResultsE[8]:PFlxNatGasEnergy[1] + RunResultsE[9]:PFlxNatGasEnergy[1]  }
	"Store energy use - Other  - E-Total"		Proj:RunResultsE[10]:PFlxOtherEnergy[1]	= {	RunResultsE[11]:PFlxOtherEnergy[1]  + RunResultsE[6]:PFlxOtherEnergy[1]  + RunResultsE[7]:PFlxOtherEnergy[1]  + RunResultsE[8]:PFlxOtherEnergy[1]  + RunResultsE[9]:PFlxOtherEnergy[1]   }
	"Store energy use - TOTAL  - E-Total"		Proj:RunResultsE[10]:PFlxTotalEnergy[1]	= {	RunResultsE[11]:PFlxTotalEnergy[1]  + RunResultsE[6]:PFlxTotalEnergy[1]  + RunResultsE[7]:PFlxTotalEnergy[1]  + RunResultsE[8]:PFlxTotalEnergy[1]  + RunResultsE[9]:PFlxTotalEnergy[1]   }
   ; SAC 4/28/17 - shifted PV & Batt from CompTot to Tot for 2019
   ; SAC 4/28/17 - add in only Battery to Total for 2016
	"Add in PV/Batt - Elec   - E-Total"	      Proj:RunResultsE[10]:PFlxElecEnergy[1]		= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                             else if (EnergyCodeYearNum < 2019) 
                                                                                             then  RunResultsE[10]:PFlxElecEnergy[1]  + RunResultsE[14]:PFlxElecEnergy[1]
                                                                                             else  RunResultsE[10]:PFlxElecEnergy[1]  + RunResultsE[13]:PFlxElecEnergy[1]  + RunResultsE[14]:PFlxElecEnergy[1]   endif endif   }
	"Add in PV/Batt - TOTAL  - E-Total"	      Proj:RunResultsE[10]:PFlxTotalEnergy[1]	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                             else if (EnergyCodeYearNum < 2019) 
                                                                                             then  RunResultsE[10]:PFlxTotalEnergy[1] + RunResultsE[14]:PFlxTotalEnergy[1]
                                                                                             else  RunResultsE[10]:PFlxTotalEnergy[1] + RunResultsE[13]:PFlxTotalEnergy[1] + RunResultsE[14]:PFlxTotalEnergy[1]  endif endif   }
END

;*************************************************************************		- SAC 6/25/13
RULELIST "CARes_PropFlexResults_S" 1 0 0 1
; mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
;*************************************************************************

  ; Space Heating (& heating fan)
; mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
	"Store energy use - Elec   - S-SpcHt"		Proj:RunResultsS[1]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Htg", "HPBU", "FanH",   "Aux", "Fan" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - S-SpcHt"		Proj:RunResultsS[1]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Htg", "HPBU", "Aux"         ) / CondFloorArea  endif  }
	"Store energy use - Other  - S-SpcHt"		Proj:RunResultsS[1]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Htg", "HPBU",  "Aux"         ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - S-SpcHt"		Proj:RunResultsS[1]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsS[1]:PFlxElecEnergy[1] ) + LocalRef( RunResultsS[1]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsS[1]:PFlxOtherEnergy[1] )   }

  ; Space Cooling (& cooling fan)
	"Store energy use - Elec   - S-SpcCl"		Proj:RunResultsS[2]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - S-SpcCl"		Proj:RunResultsS[2]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Clg"         ) / CondFloorArea  endif  }
	"Store energy use - Other  - S-SpcCl"		Proj:RunResultsS[2]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Clg"         ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - S-SpcCl"		Proj:RunResultsS[2]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsS[2]:PFlxElecEnergy[1] ) + LocalRef( RunResultsS[2]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsS[2]:PFlxOtherEnergy[1] )   }

  ; IAQ Ventilation Fans
	"Store energy use - Elec   - S-IAQVent"	Proj:RunResultsS[3]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "FanV" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - S-IAQVent"	Proj:RunResultsS[3]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - S-IAQVent"	Proj:RunResultsS[3]:PFlxOtherEnergy[1]		= {	0  }
	"Store energy use - TOTAL  - S-IAQVent"	Proj:RunResultsS[3]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsS[3]:PFlxElecEnergy[1] )   }

  ; Other HVAC (aux & misc fans)
   ; SAC 1/27/19 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
	"Store energy use - Elec   - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxElecEnergy[1]	   = {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrElec",   "User1" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrNatGas", "User1" ) / CondFloorArea  endif  }
	"Store energy use - Other  - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxOtherEnergy[1]	   = {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrOther",  "User1" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsS[4]:PFlxElecEnergy[1] ) + LocalRef( RunResultsS[4]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsS[4]:PFlxOtherEnergy[1] )   }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC S-PFlx energy use across SpcHt & SpcCl by fuel based on ratio of total energy use (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - S-PFlxEnergy"   Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsS[4]:PFlxTotalEnergy[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsS[1]:PFlxTotalEnergy[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsS[2]:PFlxTotalEnergy[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsS[1]:PFlxTotalEnergy[1], 0 ) / 
                                                                                 (ValidOr( RunResultsS[1]:PFlxTotalEnergy[1], 0 ) + ValidOr( RunResultsS[2]:PFlxTotalEnergy[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - S-SpcHt"		Proj:RunResultsS[1]:PFlxElecEnergy[1]	   = {   if (IfValidAnd( RunResultsS[4]:PFlxElecEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsS[1]:PFlxElecEnergy[1] + (RunResultsS[4]:PFlxElecEnergy[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - NatGas - S-SpcHt"		Proj:RunResultsS[1]:PFlxNatGasEnergy[1]	= {   if (IfValidAnd( RunResultsS[4]:PFlxNatGasEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsS[1]:PFlxNatGasEnergy[1] + (RunResultsS[4]:PFlxNatGasEnergy[1] * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - Other  - S-SpcHt"		Proj:RunResultsS[1]:PFlxOtherEnergy[1]	   = {   if (IfValidAnd( RunResultsS[4]:PFlxOtherEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsS[1]:PFlxOtherEnergy[1] + (RunResultsS[4]:PFlxOtherEnergy[1]   * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - S-SpcHt"		Proj:RunResultsS[1]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsS[1]:PFlxElecEnergy[1] ) + LocalRef( RunResultsS[1]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsS[1]:PFlxOtherEnergy[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - S-SpcCl"		Proj:RunResultsS[2]:PFlxElecEnergy[1]	   = {   if (IfValidAnd( RunResultsS[4]:PFlxElecEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsS[2]:PFlxElecEnergy[1] + (RunResultsS[4]:PFlxElecEnergy[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - NatGas - S-SpcCl"		Proj:RunResultsS[2]:PFlxNatGasEnergy[1]	= {   if (IfValidAnd( RunResultsS[4]:PFlxNatGasEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsS[2]:PFlxNatGasEnergy[1] + (RunResultsS[4]:PFlxNatGasEnergy[1] * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - Other  - S-SpcCl"		Proj:RunResultsS[2]:PFlxOtherEnergy[1]	   = {   if (IfValidAnd( RunResultsS[4]:PFlxOtherEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsS[2]:PFlxOtherEnergy[1] + (RunResultsS[4]:PFlxOtherEnergy[1]   * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - S-SpcCl"		Proj:RunResultsS[2]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsS[2]:PFlxElecEnergy[1] ) + LocalRef( RunResultsS[2]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsS[2]:PFlxOtherEnergy[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxElecEnergy[1]	   = {	0  }
	"ZERO-OUT         - NatGas - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxNatGasEnergy[1]	= {	0  }
	"ZERO-OUT         - Other  - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxOtherEnergy[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxTotalEnergy[1]	   = {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC S-PFlxEnergy

  ; Water Heating
	"Store energy use - Elec   - S-WtrHt"		Proj:RunResultsS[5]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else if (CSEinclDHWMFL_EU)
			 			  																							   then  HourlyResultSum( RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea  endif endif  }
	"Store energy use - NatGas - S-WtrHt"		Proj:RunResultsS[5]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
	"Store energy use - Other  - S-WtrHt"		Proj:RunResultsS[5]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - S-WtrHt"		Proj:RunResultsS[5]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsS[5]:PFlxElecEnergy[1] ) + LocalRef( RunResultsS[5]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsS[5]:PFlxOtherEnergy[1] )   }

  ; Inside Lighting
	"Store energy use - Elec   - S-InsLtg"		Proj:RunResultsS[6]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Lit" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - S-InsLtg"		Proj:RunResultsS[6]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Lit" ) / CondFloorArea  endif  }
	"Store energy use - Other  - S-InsLtg"		Proj:RunResultsS[6]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Lit" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - S-InsLtg"		Proj:RunResultsS[6]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsS[6]:PFlxElecEnergy[1] ) + LocalRef( RunResultsS[6]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsS[6]:PFlxOtherEnergy[1] )   }

  ; Appliances & Cooking
	"Store energy use - Elec   - S-AppCkg"		Proj:RunResultsS[7]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - S-AppCkg"		Proj:RunResultsS[7]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - Other  - S-AppCkg"		Proj:RunResultsS[7]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - S-AppCkg"		Proj:RunResultsS[7]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsS[7]:PFlxElecEnergy[1] ) + LocalRef( RunResultsS[7]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsS[7]:PFlxOtherEnergy[1] )   }

  ; Plug Loads
	"Store energy use - Elec   - S-Plugs"		Proj:RunResultsS[8]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - S-Plugs"		Proj:RunResultsS[8]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - Other  - S-Plugs"		Proj:RunResultsS[8]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - S-Plugs"		Proj:RunResultsS[8]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsS[8]:PFlxElecEnergy[1] ) + LocalRef( RunResultsS[8]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsS[8]:PFlxOtherEnergy[1] )   }

  ; Exterior
	"Store energy use - Elec   - S-Ext"			Proj:RunResultsS[9]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Ext" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - S-Ext"			Proj:RunResultsS[9]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
	"Store energy use - Other  - S-Ext"			Proj:RunResultsS[9]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Ext" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - S-Ext"			Proj:RunResultsS[9]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsS[9]:PFlxElecEnergy[1] ) + LocalRef( RunResultsS[9]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsS[9]:PFlxOtherEnergy[1] )   }

  ; PV
	"Store energy use - Elec   - S-PV"			Proj:RunResultsS[13]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec", "PV" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - S-PV"			Proj:RunResultsS[13]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - S-PV"			Proj:RunResultsS[13]:PFlxOtherEnergy[1]	= {	0  }
	"Store energy use - TOTAL  - S-PV"			Proj:RunResultsS[13]:PFlxTotalEnergy[1]	= {	LocalRef( RunResultsS[13]:PFlxElecEnergy[1] )   }

  ; Battery
	"Store energy use - Elec   - S-Battery"	Proj:RunResultsS[14]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec", "BT" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - S-Battery"	Proj:RunResultsS[14]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - S-Battery"	Proj:RunResultsS[14]:PFlxOtherEnergy[1]	= {	0  }
	"Store energy use - TOTAL  - S-Battery"	Proj:RunResultsS[14]:PFlxTotalEnergy[1]	= {	LocalRef( RunResultsS[14]:PFlxElecEnergy[1] )   }

  ; Compliance Total
	"Store energy use - Elec   - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxElecEnergy[1]		= {	RunResultsS[1]:PFlxElecEnergy[1]   + RunResultsS[2]:PFlxElecEnergy[1]   + RunResultsS[3]:PFlxElecEnergy[1]   + RunResultsS[4]:PFlxElecEnergy[1]   + RunResultsS[5]:PFlxElecEnergy[1]    }
	"Store energy use - NatGas - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxNatGasEnergy[1]	= {	RunResultsS[1]:PFlxNatGasEnergy[1] + RunResultsS[2]:PFlxNatGasEnergy[1] + RunResultsS[3]:PFlxNatGasEnergy[1] + RunResultsS[4]:PFlxNatGasEnergy[1] + RunResultsS[5]:PFlxNatGasEnergy[1]  }
	"Store energy use - Other  - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxOtherEnergy[1]	= {	RunResultsS[1]:PFlxOtherEnergy[1]  + RunResultsS[2]:PFlxOtherEnergy[1]  + RunResultsS[3]:PFlxOtherEnergy[1]  + RunResultsS[4]:PFlxOtherEnergy[1]  + RunResultsS[5]:PFlxOtherEnergy[1]   }
	"Store energy use - TOTAL  - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxTotalEnergy[1]	= {	RunResultsS[1]:PFlxTotalEnergy[1]  + RunResultsS[2]:PFlxTotalEnergy[1]  + RunResultsS[3]:PFlxTotalEnergy[1]  + RunResultsS[4]:PFlxTotalEnergy[1]  + RunResultsS[5]:PFlxTotalEnergy[1]   }
;   ; SAC 10/6/16 - 2019 updates
;	"Add in PV - Elec   - S-Comp Ttl"	      Proj:RunResultsS[11]:PFlxElecEnergy[1]		= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                             else  RunResultsS[11]:PFlxElecEnergy[1]  + RunResultsS[13]:PFlxElecEnergy[1]  + RunResultsW[14]:PFlxTotalEnergy[1]  endif   }
;	"Add in PV - TOTAL  - S-Comp Ttl"	      Proj:RunResultsS[11]:PFlxTotalEnergy[1]	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                             else  RunResultsS[11]:PFlxTotalEnergy[1] + RunResultsS[13]:PFlxTotalEnergy[1] + RunResultsS[14]:PFlxTotalEnergy[1]  endif   }

  ; Total
	"Store energy use - Elec   - S-Total"		Proj:RunResultsS[10]:PFlxElecEnergy[1]		= {	RunResultsS[11]:PFlxElecEnergy[1]   + RunResultsS[6]:PFlxElecEnergy[1]   + RunResultsS[7]:PFlxElecEnergy[1]   + RunResultsS[8]:PFlxElecEnergy[1]   + RunResultsS[9]:PFlxElecEnergy[1]    }
	"Store energy use - NatGas - S-Total"		Proj:RunResultsS[10]:PFlxNatGasEnergy[1]	= {	RunResultsS[11]:PFlxNatGasEnergy[1] + RunResultsS[6]:PFlxNatGasEnergy[1] + RunResultsS[7]:PFlxNatGasEnergy[1] + RunResultsS[8]:PFlxNatGasEnergy[1] + RunResultsS[9]:PFlxNatGasEnergy[1]  }
	"Store energy use - Other  - S-Total"		Proj:RunResultsS[10]:PFlxOtherEnergy[1]	= {	RunResultsS[11]:PFlxOtherEnergy[1]  + RunResultsS[6]:PFlxOtherEnergy[1]  + RunResultsS[7]:PFlxOtherEnergy[1]  + RunResultsS[8]:PFlxOtherEnergy[1]  + RunResultsS[9]:PFlxOtherEnergy[1]   }
	"Store energy use - TOTAL  - S-Total"		Proj:RunResultsS[10]:PFlxTotalEnergy[1]	= {	RunResultsS[11]:PFlxTotalEnergy[1]  + RunResultsS[6]:PFlxTotalEnergy[1]  + RunResultsS[7]:PFlxTotalEnergy[1]  + RunResultsS[8]:PFlxTotalEnergy[1]  + RunResultsS[9]:PFlxTotalEnergy[1]   }
   ; SAC 4/28/17 - shifted PV & Batt from CompTot to Tot for 2019
   ; SAC 4/28/17 - add in only Battery to Total for 2016
	"Add in PV/Batt - Elec   - S-Total"	      Proj:RunResultsS[10]:PFlxElecEnergy[1]		= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                             else if (EnergyCodeYearNum < 2019) 
                                                                                             then  RunResultsS[10]:PFlxElecEnergy[1]  + RunResultsS[14]:PFlxElecEnergy[1]
                                                                                             else  RunResultsS[10]:PFlxElecEnergy[1]  + RunResultsS[13]:PFlxElecEnergy[1]  + RunResultsS[14]:PFlxElecEnergy[1]   endif endif   }
	"Add in PV/Batt - TOTAL  - S-Total"	      Proj:RunResultsS[10]:PFlxTotalEnergy[1]	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                             else if (EnergyCodeYearNum < 2019) 
                                                                                             then  RunResultsS[10]:PFlxTotalEnergy[1] + RunResultsS[14]:PFlxTotalEnergy[1]
                                                                                             else  RunResultsS[10]:PFlxTotalEnergy[1] + RunResultsS[13]:PFlxTotalEnergy[1] + RunResultsS[14]:PFlxTotalEnergy[1]  endif endif   }
END

;*************************************************************************		- SAC 6/25/13
RULELIST "CARes_PropFlexResults_W" 1 0 0 1
; mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
;*************************************************************************

  ; Space Heating (& heating fan)
; mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
	"Store energy use - Elec   - W-SpcHt"		Proj:RunResultsW[1]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Htg", "HPBU", "FanH",   "Aux", "Fan" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - W-SpcHt"		Proj:RunResultsW[1]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Htg", "HPBU", "Aux"         ) / CondFloorArea  endif  }
	"Store energy use - Other  - W-SpcHt"		Proj:RunResultsW[1]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Htg", "HPBU", "Aux"         ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - W-SpcHt"		Proj:RunResultsW[1]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsW[1]:PFlxElecEnergy[1] ) + LocalRef( RunResultsW[1]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsW[1]:PFlxOtherEnergy[1] )   }

  ; Space Cooling (& cooling fan)
	"Store energy use - Elec   - W-SpcCl"		Proj:RunResultsW[2]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - W-SpcCl"		Proj:RunResultsW[2]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Clg"         ) / CondFloorArea  endif  }
	"Store energy use - Other  - W-SpcCl"		Proj:RunResultsW[2]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Clg"         ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - W-SpcCl"		Proj:RunResultsW[2]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsW[2]:PFlxElecEnergy[1] ) + LocalRef( RunResultsW[2]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsW[2]:PFlxOtherEnergy[1] )   }

  ; IAQ Ventilation Fans
	"Store energy use - Elec   - W-IAQVent"	Proj:RunResultsW[3]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "FanV" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - W-IAQVent"	Proj:RunResultsW[3]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - W-IAQVent"	Proj:RunResultsW[3]:PFlxOtherEnergy[1]		= {	0  }
	"Store energy use - TOTAL  - W-IAQVent"	Proj:RunResultsW[3]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsW[3]:PFlxElecEnergy[1] )   }

  ; Other HVAC (aux & misc fans)
   ; SAC 1/27/19 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
	"Store energy use - Elec   - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxElecEnergy[1]	   = {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrElec",   "User1" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrNatGas", "User1" ) / CondFloorArea  endif  }
	"Store energy use - Other  - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxOtherEnergy[1]	   = {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																							      else  HourlyResultSum( RunID, "MtrOther",  "User1" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsW[4]:PFlxElecEnergy[1] ) + LocalRef( RunResultsW[4]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsW[4]:PFlxOtherEnergy[1] )   }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC W-PFlx energy use across SpcHt & SpcCl by fuel based on ratio of total energy use (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - W-PFlxEnergy"   Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsW[4]:PFlxTotalEnergy[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsW[1]:PFlxTotalEnergy[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsW[2]:PFlxTotalEnergy[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsW[1]:PFlxTotalEnergy[1], 0 ) / 
                                                                                 (ValidOr( RunResultsW[1]:PFlxTotalEnergy[1], 0 ) + ValidOr( RunResultsW[2]:PFlxTotalEnergy[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - W-SpcHt"		Proj:RunResultsW[1]:PFlxElecEnergy[1]	   = {   if (IfValidAnd( RunResultsW[4]:PFlxElecEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsW[1]:PFlxElecEnergy[1] + (RunResultsW[4]:PFlxElecEnergy[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - NatGas - W-SpcHt"		Proj:RunResultsW[1]:PFlxNatGasEnergy[1]	= {   if (IfValidAnd( RunResultsW[4]:PFlxNatGasEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsW[1]:PFlxNatGasEnergy[1] + (RunResultsW[4]:PFlxNatGasEnergy[1] * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - Other  - W-SpcHt"		Proj:RunResultsW[1]:PFlxOtherEnergy[1]	   = {   if (IfValidAnd( RunResultsW[4]:PFlxOtherEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsW[1]:PFlxOtherEnergy[1] + (RunResultsW[4]:PFlxOtherEnergy[1]   * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - W-SpcHt"		Proj:RunResultsW[1]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsW[1]:PFlxElecEnergy[1] ) + LocalRef( RunResultsW[1]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsW[1]:PFlxOtherEnergy[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - W-SpcCl"		Proj:RunResultsW[2]:PFlxElecEnergy[1]	   = {   if (IfValidAnd( RunResultsW[4]:PFlxElecEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsW[2]:PFlxElecEnergy[1] + (RunResultsW[4]:PFlxElecEnergy[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - NatGas - W-SpcCl"		Proj:RunResultsW[2]:PFlxNatGasEnergy[1]	= {   if (IfValidAnd( RunResultsW[4]:PFlxNatGasEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsW[2]:PFlxNatGasEnergy[1] + (RunResultsW[4]:PFlxNatGasEnergy[1] * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - Other  - W-SpcCl"		Proj:RunResultsW[2]:PFlxOtherEnergy[1]	   = {   if (IfValidAnd( RunResultsW[4]:PFlxOtherEnergy[1] != 0 )==0) then  UNCHANGED
                                                                                             else  RunResultsW[2]:PFlxOtherEnergy[1] + (RunResultsW[4]:PFlxOtherEnergy[1]   * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - W-SpcCl"		Proj:RunResultsW[2]:PFlxTotalEnergy[1]	   = {	LocalRef( RunResultsW[2]:PFlxElecEnergy[1] ) + LocalRef( RunResultsW[2]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsW[2]:PFlxOtherEnergy[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxElecEnergy[1]	   = {	0  }
	"ZERO-OUT         - NatGas - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxNatGasEnergy[1]	= {	0  }
	"ZERO-OUT         - Other  - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxOtherEnergy[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxTotalEnergy[1]	   = {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC W-PFlxEnergy

  ; Water Heating
	"Store energy use - Elec   - W-WtrHt"		Proj:RunResultsW[5]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else if (CSEinclDHWMFL_EU)
			 			  																							   then  HourlyResultSum( RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea  endif endif  }
	"Store energy use - NatGas - W-WtrHt"		Proj:RunResultsW[5]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea  endif  }
	"Store energy use - Other  - W-WtrHt"		Proj:RunResultsW[5]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - W-WtrHt"		Proj:RunResultsW[5]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsW[5]:PFlxElecEnergy[1] ) + LocalRef( RunResultsW[5]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsW[5]:PFlxOtherEnergy[1] )   }

  ; Inside Lighting
	"Store energy use - Elec   - W-InsLtg"		Proj:RunResultsW[6]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Lit" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - W-InsLtg"		Proj:RunResultsW[6]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Lit" ) / CondFloorArea  endif  }
	"Store energy use - Other  - W-InsLtg"		Proj:RunResultsW[6]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Lit" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - W-InsLtg"		Proj:RunResultsW[6]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsW[6]:PFlxElecEnergy[1] ) + LocalRef( RunResultsW[6]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsW[6]:PFlxOtherEnergy[1] )   }

  ; Appliances & Cooking
	"Store energy use - Elec   - W-AppCkg"		Proj:RunResultsW[7]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - W-AppCkg"		Proj:RunResultsW[7]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - Other  - W-AppCkg"		Proj:RunResultsW[7]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - W-AppCkg"		Proj:RunResultsW[7]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsW[7]:PFlxElecEnergy[1] ) + LocalRef( RunResultsW[7]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsW[7]:PFlxOtherEnergy[1] )   }

  ; Plug Loads
	"Store energy use - Elec   - W-Plugs"		Proj:RunResultsW[8]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - W-Plugs"		Proj:RunResultsW[8]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - Other  - W-Plugs"		Proj:RunResultsW[8]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Rcp" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - W-Plugs"		Proj:RunResultsW[8]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsW[8]:PFlxElecEnergy[1] ) + LocalRef( RunResultsW[8]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsW[8]:PFlxOtherEnergy[1] )   }

  ; Exterior
	"Store energy use - Elec   - W-Ext"			Proj:RunResultsW[9]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec   ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec",   "Ext" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - W-Ext"			Proj:RunResultsW[9]:PFlxNatGasEnergy[1]	= {	if (Local( Fuel_HaveNatGas ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrNatGas", "Ext" ) / CondFloorArea  endif  }
	"Store energy use - Other  - W-Ext"			Proj:RunResultsW[9]:PFlxOtherEnergy[1]		= {	if (Local( Fuel_HaveOther  ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrOther",  "Ext" ) / CondFloorArea  endif  }
	"Store energy use - TOTAL  - W-Ext"			Proj:RunResultsW[9]:PFlxTotalEnergy[1]		= {	LocalRef( RunResultsW[9]:PFlxElecEnergy[1] ) + LocalRef( RunResultsW[9]:PFlxNatGasEnergy[1] ) + LocalRef( RunResultsW[9]:PFlxOtherEnergy[1] )   }

  ; PV
	"Store energy use - Elec   - W-PV"			Proj:RunResultsW[13]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec", "PV" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - W-PV"			Proj:RunResultsW[13]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - W-PV"			Proj:RunResultsW[13]:PFlxOtherEnergy[1]	= {	0  }
	"Store energy use - TOTAL  - W-PV"			Proj:RunResultsW[13]:PFlxTotalEnergy[1]	= {	LocalRef( RunResultsW[13]:PFlxElecEnergy[1] )   }

  ; Battery
	"Store energy use - Elec   - W-Battery"	Proj:RunResultsW[14]:PFlxElecEnergy[1]		= {	if (Local( Fuel_HaveElec ) < 0.5 .OR. CondFloorArea < 1) then  0
			 			  																								else  HourlyResultSum( RunID, "MtrElec", "BT" ) / CondFloorArea  endif  }
	"Store energy use - NatGas - W-Battery"	Proj:RunResultsW[14]:PFlxNatGasEnergy[1]	= {	0  }
	"Store energy use - Other  - W-Battery"	Proj:RunResultsW[14]:PFlxOtherEnergy[1]	= {	0  }
	"Store energy use - TOTAL  - W-Battery"	Proj:RunResultsW[14]:PFlxTotalEnergy[1]	= {	LocalRef( RunResultsW[14]:PFlxElecEnergy[1] )   }

  ; Compliance Total
	"Store energy use - Elec   - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxElecEnergy[1]		= {	RunResultsW[1]:PFlxElecEnergy[1]   + RunResultsW[2]:PFlxElecEnergy[1]   + RunResultsW[3]:PFlxElecEnergy[1]   + RunResultsW[4]:PFlxElecEnergy[1]   + RunResultsW[5]:PFlxElecEnergy[1]    }
	"Store energy use - NatGas - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxNatGasEnergy[1]	= {	RunResultsW[1]:PFlxNatGasEnergy[1] + RunResultsW[2]:PFlxNatGasEnergy[1] + RunResultsW[3]:PFlxNatGasEnergy[1] + RunResultsW[4]:PFlxNatGasEnergy[1] + RunResultsW[5]:PFlxNatGasEnergy[1]  }
	"Store energy use - Other  - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxOtherEnergy[1]	= {	RunResultsW[1]:PFlxOtherEnergy[1]  + RunResultsW[2]:PFlxOtherEnergy[1]  + RunResultsW[3]:PFlxOtherEnergy[1]  + RunResultsW[4]:PFlxOtherEnergy[1]  + RunResultsW[5]:PFlxOtherEnergy[1]   }
	"Store energy use - TOTAL  - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxTotalEnergy[1]	= {	RunResultsW[1]:PFlxTotalEnergy[1]  + RunResultsW[2]:PFlxTotalEnergy[1]  + RunResultsW[3]:PFlxTotalEnergy[1]  + RunResultsW[4]:PFlxTotalEnergy[1]  + RunResultsW[5]:PFlxTotalEnergy[1]   }
;   ; SAC 10/6/16 - 2019 updates
;	"Add in PV - Elec   - W-Comp Ttl"	      Proj:RunResultsW[11]:PFlxElecEnergy[1]		= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                             else  RunResultsW[11]:PFlxElecEnergy[1]  + RunResultsW[13]:PFlxElecEnergy[1]  + RunResultsW[14]:PFlxElecEnergy[1]   endif   }
;	"Add in PV - TOTAL  - W-Comp Ttl"	      Proj:RunResultsW[11]:PFlxTotalEnergy[1]	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                             else  RunResultsW[11]:PFlxTotalEnergy[1] + RunResultsW[13]:PFlxTotalEnergy[1] + RunResultsW[14]:PFlxTotalEnergy[1]  endif   }

  ; Total
	"Store energy use - Elec   - W-Total"		Proj:RunResultsW[10]:PFlxElecEnergy[1]		= {	RunResultsW[11]:PFlxElecEnergy[1]   + RunResultsW[6]:PFlxElecEnergy[1]   + RunResultsW[7]:PFlxElecEnergy[1]   + RunResultsW[8]:PFlxElecEnergy[1]   + RunResultsW[9]:PFlxElecEnergy[1]    }
	"Store energy use - NatGas - W-Total"		Proj:RunResultsW[10]:PFlxNatGasEnergy[1]	= {	RunResultsW[11]:PFlxNatGasEnergy[1] + RunResultsW[6]:PFlxNatGasEnergy[1] + RunResultsW[7]:PFlxNatGasEnergy[1] + RunResultsW[8]:PFlxNatGasEnergy[1] + RunResultsW[9]:PFlxNatGasEnergy[1]  }
	"Store energy use - Other  - W-Total"		Proj:RunResultsW[10]:PFlxOtherEnergy[1]	= {	RunResultsW[11]:PFlxOtherEnergy[1]  + RunResultsW[6]:PFlxOtherEnergy[1]  + RunResultsW[7]:PFlxOtherEnergy[1]  + RunResultsW[8]:PFlxOtherEnergy[1]  + RunResultsW[9]:PFlxOtherEnergy[1]   }
	"Store energy use - TOTAL  - W-Total"		Proj:RunResultsW[10]:PFlxTotalEnergy[1]	= {	RunResultsW[11]:PFlxTotalEnergy[1]  + RunResultsW[6]:PFlxTotalEnergy[1]  + RunResultsW[7]:PFlxTotalEnergy[1]  + RunResultsW[8]:PFlxTotalEnergy[1]  + RunResultsW[9]:PFlxTotalEnergy[1]   }
   ; SAC 4/28/17 - shifted PV & Batt from CompTot to Tot for 2019
   ; SAC 4/28/17 - add in only Battery to Total for 2016
	"Add in PV/Batt - Elec   - W-Total"	      Proj:RunResultsW[10]:PFlxElecEnergy[1]		= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                             else if (EnergyCodeYearNum < 2019) 
                                                                                             then  RunResultsW[10]:PFlxElecEnergy[1]  + RunResultsW[14]:PFlxElecEnergy[1]
                                                                                             else  RunResultsW[10]:PFlxElecEnergy[1]  + RunResultsW[13]:PFlxElecEnergy[1]  + RunResultsW[14]:PFlxElecEnergy[1]   endif endif   }
	"Add in PV/Batt - TOTAL  - W-Total"	      Proj:RunResultsW[10]:PFlxTotalEnergy[1]	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                             else if (EnergyCodeYearNum < 2019) 
                                                                                             then  RunResultsW[10]:PFlxTotalEnergy[1] + RunResultsW[14]:PFlxTotalEnergy[1]
                                                                                             else  RunResultsW[10]:PFlxTotalEnergy[1] + RunResultsW[13]:PFlxTotalEnergy[1] + RunResultsW[14]:PFlxTotalEnergy[1]  endif endif   }
END



;*************************************************************************
RULELIST "CARes_PropFlexTDVResults" 1 0 0 1
;*************************************************************************
; SAC 7/14/16 - moved Aux & Fan energy into Heating enduse for consistency w/ related mods by MJB:   mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
         ; SAC 8/24/19 - replaced 1/3.413 & 0.01 TDV table multipliers with Proj:TDVSecMult_Elec & TDVSecMult_Fuel to accommodate 2022+ switch to native (E3) TDV table units
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
	"Calculate TDV - Elec   - SpcHt"		Proj:RunResults[1]:PFlxElecTDV[1]			= {	if (LocalRef( RunResults[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - SpcHt"		Proj:RunResults[1]:PFlxNatGasTDV			= {	if (LocalRef( RunResults[1]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - SpcHt"		Proj:RunResults[1]:PFlxOtherTDV			= {	if (LocalRef( RunResults[1]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - SpcHt"		Proj:RunResults[1]:PFlxTDV[1]			= {	LocalRef( RunResults[1]:PFlxElecTDV[1] ) + LocalRef( RunResults[1]:PFlxNatGasTDV ) + LocalRef( RunResults[1]:PFlxOtherTDV )   }
  ; SAC 8/23/14 - added rules to set elec demand
	"Calculate Elec Demand  - SpcHt"		Proj:RunResults[1]:PFlxElecDemand[1]		= {	if (LocalRef( RunResults[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412  endif  }

  ; Space Cooling (& cooling fan)
	"Calculate TDV - Elec   - SpcCl"		Proj:RunResults[2]:PFlxElecTDV[1]			= {	if (LocalRef( RunResults[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - SpcCl"		Proj:RunResults[2]:PFlxNatGasTDV			= {	if (LocalRef( RunResults[2]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - SpcCl"		Proj:RunResults[2]:PFlxOtherTDV			= {	if (LocalRef( RunResults[2]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - SpcCl"		Proj:RunResults[2]:PFlxTDV[1]			= {	LocalRef( RunResults[2]:PFlxElecTDV[1] ) + LocalRef( RunResults[2]:PFlxNatGasTDV ) + LocalRef( RunResults[2]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - SpcCl"		Proj:RunResults[2]:PFlxElecDemand[1]		= {	if (LocalRef( RunResults[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Clg", "FanC" ) / 3.412  endif  }

  ; IAQ Ventilation Fans
	"Calculate TDV - Elec   - IAQVent"	Proj:RunResults[3]:PFlxElecTDV[1]			= {	if (LocalRef( RunResults[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "IAQVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "FanV" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - IAQVent"	Proj:RunResults[3]:PFlxNatGasTDV			= {	0  }
	"Calculate TDV - Other  - IAQVent"	Proj:RunResults[3]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - IAQVent"	Proj:RunResults[3]:PFlxTDV[1]			= {	LocalRef( RunResults[3]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - IAQVent"	Proj:RunResults[3]:PFlxElecDemand[1]		= {	if (LocalRef( RunResults[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "FanV" ) / 3.412  endif  }

  ; Other HVAC (aux & misc fans)
   ; SAC 11/15/18 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
	"Calculate TDV - Elec   - OthrHVAC"	Proj:RunResults[4]:PFlxElecTDV[1]		= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "OHVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "User1" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - OthrHVAC"	Proj:RunResults[4]:PFlxNatGasTDV			= {	0  }
	"Calculate TDV - Other  - OthrHVAC"	Proj:RunResults[4]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - OthrHVAC"	Proj:RunResults[4]:PFlxTDV[1]		      = {	RunResults[4]:PFlxElecTDV[1]  }
	"Calculate Elec Demand  - OthrHVAC"	Proj:RunResults[4]:PFlxElecDemand[1]	= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "User1" ) / 3.412  endif  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC PFlx TDV use across SpcHt & SpcCl by fuel based on ratio of total TDV (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - PFlxTDV"     Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResults[4]:PFlxTDV[1] != 0 )==0) then  0
                                                                        else if (IfValidAnd( RunResults[1]:PFlxTDV[1] == 0 ) .AND.
                                                                                 IfValidAnd( RunResults[2]:PFlxTDV[1] == 0 )) then  0.5
                                                                        else   ValidOr( RunResults[1]:PFlxTDV[1], 0 ) / 
                                                                              (ValidOr( RunResults[1]:PFlxTDV[1], 0 ) + ValidOr( RunResults[2]:PFlxTDV[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - SpcHt"		Proj:RunResults[1]:PFlxElecTDV[1]	= {   if (IfValidAnd( RunResults[4]:PFlxElecTDV[1] != 0 )==0) then  UNCHANGED
                                                                                    else  RunResults[1]:PFlxElecTDV[1] + (RunResults[4]:PFlxElecTDV[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcHt"		Proj:RunResults[1]:PFlxTDV[1]	      = {	LocalRef( RunResults[1]:PFlxElecTDV[1] ) + LocalRef( RunResults[1]:PFlxNatGasTDV[1] ) + LocalRef( RunResults[1]:PFlxOtherTDV[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - SpcCl"		Proj:RunResults[2]:PFlxElecTDV[1]	= {   if (IfValidAnd( RunResults[4]:PFlxElecTDV[1] != 0 )==0) then  UNCHANGED
                                                                                    else  RunResults[2]:PFlxElecTDV[1] + (RunResults[4]:PFlxElecTDV[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcCl"		Proj:RunResults[2]:PFlxTDV[1]	      = {	LocalRef( RunResults[2]:PFlxElecTDV[1] ) + LocalRef( RunResults[2]:PFlxNatGasTDV[1] ) + LocalRef( RunResults[2]:PFlxOtherTDV[1] )   }
   ; SAC 1/27/19 - REDISTRIBUTE OthrHVAC PFlx Demand across SpcHt & SpcCl by fuel based on ratio of total Demand (tic #1053)
   "Set OthrHVAC_SpcHtFrac - Demand"      Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResults[4]:PFlxElecDemand[1] != 0 )==0) then  0
                                                                        else if (IfValidAnd( RunResults[1]:PFlxElecDemand[1] == 0 ) .AND.
                                                                                 IfValidAnd( RunResults[2]:PFlxElecDemand[1] == 0 )) then  0.5
                                                                        else   ValidOr( RunResults[1]:PFlxElecDemand[1], 0 ) / 
                                                                              (ValidOr( RunResults[1]:PFlxElecDemand[1], 0 ) + ValidOr( RunResults[2]:PFlxElecDemand[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Demand - SpcHt"		Proj:RunResults[1]:PFlxElecDemand[1]   = {   if (IfValidAnd( RunResults[4]:PFlxElecDemand[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[1]:PFlxElecDemand[1] + (RunResults[4]:PFlxElecDemand[1]     * OthrHVAC_SpcHtFrac)  endif  }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Demand - SpcCl"		Proj:RunResults[2]:PFlxElecDemand[1]   = {   if (IfValidAnd( RunResults[4]:PFlxElecDemand[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResults[2]:PFlxElecDemand[1] + (RunResults[4]:PFlxElecDemand[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - OthrHVAC"	Proj:RunResults[4]:PFlxElecTDV[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - OthrHVAC"	Proj:RunResults[4]:PFlxTDV[1]	         = {	0  }
	"ZERO-OUT         - Demand - OthrHVAC"	Proj:RunResults[4]:PFlxElecDemand[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC PFlxTDV

  ; Water Heating
	"Calculate TDV - Elec   - WtrHt"		Proj:RunResults[5]:PFlxElecTDV[1]			= {	if (LocalRef( RunResults[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else if (CSEinclDHWMFL_EU)
			 			  																						then  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea) + 0.5) / 100
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - WtrHt"		Proj:RunResults[5]:PFlxNatGasTDV			= {	if (LocalRef( RunResults[5]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - WtrHt"		Proj:RunResults[5]:PFlxOtherTDV			= {	if (LocalRef( RunResults[5]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - WtrHt"		Proj:RunResults[5]:PFlxTDV[1]			= {	LocalRef( RunResults[5]:PFlxElecTDV[1] ) + LocalRef( RunResults[5]:PFlxNatGasTDV ) + LocalRef( RunResults[5]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - WtrHt"		Proj:RunResults[5]:PFlxElecDemand[1]		= {	if (LocalRef( RunResults[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else if (CSEinclDHWMFL_EU)
			 			  																						then  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412
			 			  																						else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412  endif endif  }

  ; Inside Lighting
	"Calculate TDV - Elec   - InsLtg"	Proj:RunResults[6]:PFlxElecTDV[1]			= {	if (LocalRef( RunResults[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - InsLtg"	Proj:RunResults[6]:PFlxNatGasTDV			= {	if (LocalRef( RunResults[6]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - InsLtg"	Proj:RunResults[6]:PFlxOtherTDV			= {	if (LocalRef( RunResults[6]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - InsLtg"	Proj:RunResults[6]:PFlxTDV[1]			= {	LocalRef( RunResults[6]:PFlxElecTDV[1] ) + LocalRef( RunResults[6]:PFlxNatGasTDV ) + LocalRef( RunResults[6]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - InsLtg"	Proj:RunResults[6]:PFlxElecDemand[1]		= {	if (LocalRef( RunResults[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Lit" ) / 3.412  endif  }

  ; Appliances & Cooking
	"Calculate TDV - Elec   - AppCkg"	Proj:RunResults[7]:PFlxElecTDV[1]			= {	if (LocalRef( RunResults[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - AppCkg"	Proj:RunResults[7]:PFlxNatGasTDV			= {	if (LocalRef( RunResults[7]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - AppCkg"	Proj:RunResults[7]:PFlxOtherTDV			= {	if (LocalRef( RunResults[7]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - AppCkg"	Proj:RunResults[7]:PFlxTDV[1]			= {	LocalRef( RunResults[7]:PFlxElecTDV[1] ) + LocalRef( RunResults[7]:PFlxNatGasTDV ) + LocalRef( RunResults[7]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - AppCkg"	Proj:RunResults[7]:PFlxElecDemand[1]		= {	if (LocalRef( RunResults[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412  endif  }

  ; Plug Loads
	"Calculate TDV - Elec   - Plugs"		Proj:RunResults[8]:PFlxElecTDV[1]			= {	if (LocalRef( RunResults[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - Plugs"		Proj:RunResults[8]:PFlxNatGasTDV			= {	if (LocalRef( RunResults[8]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - Plugs"		Proj:RunResults[8]:PFlxOtherTDV			= {	if (LocalRef( RunResults[8]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - Plugs"		Proj:RunResults[8]:PFlxTDV[1]			= {	LocalRef( RunResults[8]:PFlxElecTDV[1] ) + LocalRef( RunResults[8]:PFlxNatGasTDV ) + LocalRef( RunResults[8]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - Plugs"		Proj:RunResults[8]:PFlxElecDemand[1]		= {	if (LocalRef( RunResults[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Rcp" ) / 3.412  endif  }

  ; Exterior
	"Calculate TDV - Elec   - Ext"		Proj:RunResults[9]:PFlxElecTDV[1]			= {	if (LocalRef( RunResults[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - Ext"		Proj:RunResults[9]:PFlxNatGasTDV			= {	if (LocalRef( RunResults[9]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - Ext"		Proj:RunResults[9]:PFlxOtherTDV			= {	if (LocalRef( RunResults[9]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - Ext"		Proj:RunResults[9]:PFlxTDV[1]			= {	LocalRef( RunResults[9]:PFlxElecTDV[1] ) + LocalRef( RunResults[9]:PFlxNatGasTDV ) + LocalRef( RunResults[9]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - Ext"		Proj:RunResults[9]:PFlxElecDemand[1]		= {	if (LocalRef( RunResults[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Ext" ) / 3.412  endif  }

      ; revised all calls to ApplyHourlyResultMultipliers_NEM() to include hourly NEM table name & col arguments - SAC 05/16/23 (NEM3)
      ; revised all calls to ApplyHourlyResultMultipliers_NEM() to include NEMGrossUpFactor argument - SAC 05/25/23 (NEM3)
  ; PV
	"Calculate TDV - Elec   - PV"			Proj:RunResults[13]:PFlxElecTDV[1]		= {	if (LocalRef( RunResults[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringTDVAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResults[14]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "BT" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - PV"			Proj:RunResults[13]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - PV"			Proj:RunResults[13]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - PV"			Proj:RunResults[13]:PFlxTDV[1]		= {	LocalRef( RunResults[13]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - PV"			Proj:RunResults[13]:PFlxElecDemand[1]	= {	if (LocalRef( RunResults[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
			 			  																						else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec", "PV" ) / 3.412  endif  }

  ; Battery
	"Calculate TDV - Elec   - Battery"	Proj:RunResults[14]:PFlxElecTDV[1]		= {	if (LocalRef( RunResults[14]:PFlxElecEnergy[1]		) = 0) then  0
		else if (IfValidAnd( NetEnergyMeteringTDVAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResults[13]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "PV" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - Battery"	Proj:RunResults[14]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - Battery"	Proj:RunResults[14]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - Battery"	Proj:RunResults[14]:PFlxTDV[1]		= {	LocalRef( RunResults[14]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - Battery"	Proj:RunResults[14]:PFlxElecDemand[1]	= {	if (LocalRef( RunResults[14]:PFlxElecEnergy[1]		) = 0) then  0
			 			  																						else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec", "BT" ) / 3.412  endif  }

  ; Compliance Total
	"Calculate TDV - Elec   - Comp Ttl"	Proj:RunResults[11]:PFlxElecTDV[1]		= {	RunResults[1]:PFlxElecTDV[1]    + RunResults[2]:PFlxElecTDV[1]    + RunResults[3]:PFlxElecTDV[1]    + RunResults[4]:PFlxElecTDV[1]    + RunResults[5]:PFlxElecTDV[1]     }
	"Calculate TDV - NatGas - Comp Ttl"	Proj:RunResults[11]:PFlxNatGasTDV		= {	RunResults[1]:PFlxNatGasTDV     + RunResults[2]:PFlxNatGasTDV     + RunResults[3]:PFlxNatGasTDV     + RunResults[4]:PFlxNatGasTDV     + RunResults[5]:PFlxNatGasTDV      }
	"Calculate TDV - Other  - Comp Ttl"	Proj:RunResults[11]:PFlxOtherTDV			= {	RunResults[1]:PFlxOtherTDV      + RunResults[2]:PFlxOtherTDV      + RunResults[3]:PFlxOtherTDV      + RunResults[4]:PFlxOtherTDV      + RunResults[5]:PFlxOtherTDV       }
	"Calculate TDV - TOTAL  - Comp Ttl"	Proj:RunResults[11]:PFlxTDV[1]		= {	RunResults[1]:PFlxTDV[1]    + RunResults[2]:PFlxTDV[1]    + RunResults[3]:PFlxTDV[1]    + RunResults[4]:PFlxTDV[1]    + RunResults[5]:PFlxTDV[1]     }
	"Calculate Elec Demand  - Comp Ttl"	Proj:RunResults[11]:PFlxElecDemand[1]	= {	RunResults[1]:PFlxElecDemand[1] + RunResults[2]:PFlxElecDemand[1] + RunResults[3]:PFlxElecDemand[1] + RunResults[4]:PFlxElecDemand[1] + RunResults[5]:PFlxElecDemand[1]  }
;   ; SAC 10/6/16 - 2019 updates   - SAC 4/7/17 - shifted PV & Batt from CompTot to Tot for 2019
;	"Add in PV TDV - Elec   - Comp Ttl"	Proj:RunResults[11]:PFlxElecTDV[1]	   = {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                    else  RunResults[11]:PFlxElecTDV[1]    + RunResults[13]:PFlxElecTDV[1]    + RunResults[14]:PFlxElecTDV[1]     endif   }
;	"Add in PV TDV - TOTAL  - Comp Ttl"	Proj:RunResults[11]:PFlxTDV[1]  	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                    else  RunResults[11]:PFlxTDV[1]    + RunResults[13]:PFlxTDV[1]    + RunResults[14]:PFlxTDV[1]     endif   }
;	"Add in PV Elec Demand  - Comp Ttl"	Proj:RunResults[11]:PFlxElecDemand[1]	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                    else  RunResults[11]:PFlxElecDemand[1] + RunResults[13]:PFlxElecDemand[1] + RunResults[14]:PFlxElecDemand[1]  endif   }

  ; Total
	"Calculate TDV - Elec   - Total"		Proj:RunResults[10]:PFlxElecTDV[1]		= {	RunResults[11]:PFlxElecTDV[1]    + RunResults[6]:PFlxElecTDV[1]    + RunResults[7]:PFlxElecTDV[1]    + RunResults[8]:PFlxElecTDV[1]    + RunResults[9]:PFlxElecTDV[1]     }
	"Calculate TDV - NatGas - Total"		Proj:RunResults[10]:PFlxNatGasTDV		= {	RunResults[11]:PFlxNatGasTDV     + RunResults[6]:PFlxNatGasTDV     + RunResults[7]:PFlxNatGasTDV     + RunResults[8]:PFlxNatGasTDV     + RunResults[9]:PFlxNatGasTDV      }
	"Calculate TDV - Other  - Total"		Proj:RunResults[10]:PFlxOtherTDV			= {	RunResults[11]:PFlxOtherTDV      + RunResults[6]:PFlxOtherTDV      + RunResults[7]:PFlxOtherTDV      + RunResults[8]:PFlxOtherTDV      + RunResults[9]:PFlxOtherTDV       }
	"Calculate TDV - TOTAL  - Total"		Proj:RunResults[10]:PFlxTDV[1]		= {	RunResults[11]:PFlxTDV[1]    + RunResults[6]:PFlxTDV[1]    + RunResults[7]:PFlxTDV[1]    + RunResults[8]:PFlxTDV[1]    + RunResults[9]:PFlxTDV[1]     }
	"Calculate Elec Demand  - Total"		Proj:RunResults[10]:PFlxElecDemand[1]	= {	RunResults[11]:PFlxElecDemand[1] + RunResults[6]:PFlxElecDemand[1] + RunResults[7]:PFlxElecDemand[1] + RunResults[8]:PFlxElecDemand[1] + RunResults[9]:PFlxElecDemand[1]  }
   ; SAC 4/7/17 - shifted PV & Batt from CompTot to Tot for 2019
   ; SAC 4/28/17 - add in only Battery to Total for 2016
	"Add in PV TDV - Elec   - Total"	   Proj:RunResults[10]:PFlxElecTDV[1]	   = {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                    else if (EnergyCodeYearNum < 2019) 
                                                                                    then  RunResults[10]:PFlxElecTDV[1]    + RunResults[14]:PFlxElecTDV[1]
                                                                                    else  RunResults[10]:PFlxElecTDV[1]    + RunResults[13]:PFlxElecTDV[1]    + RunResults[14]:PFlxElecTDV[1]     endif endif   }
	"Add in PV TDV - TOTAL  - Total"	   Proj:RunResults[10]:PFlxTDV[1]  	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                    else if (EnergyCodeYearNum < 2019) 
                                                                                    then  RunResults[10]:PFlxTDV[1]    + RunResults[14]:PFlxTDV[1]
                                                                                    else  RunResults[10]:PFlxTDV[1]    + RunResults[13]:PFlxTDV[1]    + RunResults[14]:PFlxTDV[1]     endif endif   }
	"Add in PV Elec Demand  - Total"	   Proj:RunResults[10]:PFlxElecDemand[1]	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                    else if (EnergyCodeYearNum < 2019) 
                                                                                    then  RunResults[10]:PFlxElecDemand[1] + RunResults[14]:PFlxElecDemand[1]
                                                                                    else  RunResults[10]:PFlxElecDemand[1] + RunResults[13]:PFlxElecDemand[1] + RunResults[14]:PFlxElecDemand[1]  endif endif   }
END

;*************************************************************************  - SAC 6/25/13
RULELIST "CARes_PropFlexTDVResults_N" 1 0 0 1
;*************************************************************************
; SAC 7/14/16 - moved Aux & Fan energy into Heating enduse for consistency w/ related mods by MJB:   mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
         ; SAC 8/24/19 - replaced 1/3.413 & 0.01 TDV table multipliers with Proj:TDVSecMult_Elec & TDVSecMult_Fuel to accommodate 2022+ switch to native (E3) TDV table units
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
	"Calculate TDV - Elec   - N-SpcHt"		Proj:RunResultsN[1]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsN[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - N-SpcHt"		Proj:RunResultsN[1]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsN[1]:PFlxNatGasEnergy[1]	) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - N-SpcHt"		Proj:RunResultsN[1]:PFlxOtherTDV			= {	if (LocalRef( RunResultsN[1]:PFlxOtherEnergy[1]		) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - N-SpcHt"		Proj:RunResultsN[1]:PFlxTDV[1]			= {	LocalRef( RunResultsN[1]:PFlxElecTDV[1] ) + LocalRef( RunResultsN[1]:PFlxNatGasTDV ) + LocalRef( RunResultsN[1]:PFlxOtherTDV )   }
  ; SAC 8/23/14 - added rules to set elec demand
	"Calculate Elec Demand  - N-SpcHt"		Proj:RunResultsN[1]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsN[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412  endif  }

  ; Space Cooling (& cooling fan)
	"Calculate TDV - Elec   - N-SpcCl"		Proj:RunResultsN[2]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsN[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - N-SpcCl"		Proj:RunResultsN[2]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsN[2]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - N-SpcCl"		Proj:RunResultsN[2]:PFlxOtherTDV			= {	if (LocalRef( RunResultsN[2]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - N-SpcCl"		Proj:RunResultsN[2]:PFlxTDV[1]			= {	LocalRef( RunResultsN[2]:PFlxElecTDV[1] ) + LocalRef( RunResultsN[2]:PFlxNatGasTDV ) + LocalRef( RunResultsN[2]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - N-SpcCl"		Proj:RunResultsN[2]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsN[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Clg", "FanC" ) / 3.412  endif  }

  ; IAQ Ventilation Fans
	"Calculate TDV - Elec   - N-IAQVent"	Proj:RunResultsN[3]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsN[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "IAQVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "FanV" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - N-IAQVent"	Proj:RunResultsN[3]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - N-IAQVent"	Proj:RunResultsN[3]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - N-IAQVent"	Proj:RunResultsN[3]:PFlxTDV[1]			= {	LocalRef( RunResultsN[3]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - N-IAQVent"	Proj:RunResultsN[3]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsN[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "FanV" ) / 3.412  endif  }

  ; Other HVAC (aux & misc fans)
   ; SAC 1/27/19 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
	"Calculate TDV - Elec   - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxElecTDV[1]		= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  int( (100 * ApplyHourlyResultMultipliers( "OHVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "User1" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxTDV[1]		   = {	RunResultsN[4]:PFlxElecTDV[1]  }
	"Calculate Elec Demand  - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxElecDemand[1]	= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "User1" ) / 3.412  endif  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC N-PFlx TDV use across SpcHt & SpcCl by fuel based on ratio of total TDV (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - N-PFlxTDV"      Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsN[4]:PFlxTDV[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsN[1]:PFlxTDV[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsN[2]:PFlxTDV[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsN[1]:PFlxTDV[1], 0 ) / 
                                                                                 (ValidOr( RunResultsN[1]:PFlxTDV[1], 0 ) + ValidOr( RunResultsN[2]:PFlxTDV[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - N-SpcHt"		Proj:RunResultsN[1]:PFlxElecTDV[1]	= {   if (IfValidAnd( RunResultsN[4]:PFlxElecTDV[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsN[1]:PFlxElecTDV[1] + (RunResultsN[4]:PFlxElecTDV[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcHt"		Proj:RunResultsN[1]:PFlxTDV[1]	   = {	LocalRef( RunResultsN[1]:PFlxElecTDV[1] ) + LocalRef( RunResultsN[1]:PFlxNatGasTDV[1] ) + LocalRef( RunResultsN[1]:PFlxOtherTDV[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - N-SpcCl"		Proj:RunResultsN[2]:PFlxElecTDV[1]	= {   if (IfValidAnd( RunResultsN[4]:PFlxElecTDV[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsN[2]:PFlxElecTDV[1] + (RunResultsN[4]:PFlxElecTDV[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcCl"		Proj:RunResultsN[2]:PFlxTDV[1]	   = {	LocalRef( RunResultsN[2]:PFlxElecTDV[1] ) + LocalRef( RunResultsN[2]:PFlxNatGasTDV[1] ) + LocalRef( RunResultsN[2]:PFlxOtherTDV[1] )   }
   ; SAC 1/27/19 - REDISTRIBUTE OthrHVAC PFlx Demand across SpcHt & SpcCl by fuel based on ratio of total Demand (tic #1053)
   "Set OthrHVAC_SpcHtFrac - N-Demand"       Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsN[4]:PFlxElecDemand[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsN[1]:PFlxElecDemand[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsN[2]:PFlxElecDemand[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsN[1]:PFlxElecDemand[1], 0 ) / 
                                                                                 (ValidOr( RunResultsN[1]:PFlxElecDemand[1], 0 ) + ValidOr( RunResultsN[2]:PFlxElecDemand[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Demand - N-SpcHt"		Proj:RunResultsN[1]:PFlxElecDemand[1]  = {   if (IfValidAnd( RunResultsN[4]:PFlxElecDemand[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsN[1]:PFlxElecDemand[1] + (RunResultsN[4]:PFlxElecDemand[1]     * OthrHVAC_SpcHtFrac)  endif  }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Demand - N-SpcCl"		Proj:RunResultsN[2]:PFlxElecDemand[1]  = {   if (IfValidAnd( RunResultsN[4]:PFlxElecDemand[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsN[2]:PFlxElecDemand[1] + (RunResultsN[4]:PFlxElecDemand[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxElecTDV[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxTDV[1]	      = {	0  }
	"ZERO-OUT         - Demand - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxElecDemand[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC N-PFlxTDV

  ; Water Heating
	"Calculate TDV - Elec   - N-WtrHt"		Proj:RunResultsN[5]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsN[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea) + 0.5) / 100
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - N-WtrHt"		Proj:RunResultsN[5]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsN[5]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - N-WtrHt"		Proj:RunResultsN[5]:PFlxOtherTDV			= {	if (LocalRef( RunResultsN[5]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - N-WtrHt"		Proj:RunResultsN[5]:PFlxTDV[1]			= {	LocalRef( RunResultsN[5]:PFlxElecTDV[1] ) + LocalRef( RunResultsN[5]:PFlxNatGasTDV ) + LocalRef( RunResultsN[5]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - N-WtrHt"		Proj:RunResultsN[5]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsN[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412  endif endif  }

  ; Inside Lighting
	"Calculate TDV - Elec   - N-InsLtg"		Proj:RunResultsN[6]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsN[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - N-InsLtg"		Proj:RunResultsN[6]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsN[6]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - N-InsLtg"		Proj:RunResultsN[6]:PFlxOtherTDV			= {	if (LocalRef( RunResultsN[6]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - N-InsLtg"		Proj:RunResultsN[6]:PFlxTDV[1]			= {	LocalRef( RunResultsN[6]:PFlxElecTDV[1] ) + LocalRef( RunResultsN[6]:PFlxNatGasTDV ) + LocalRef( RunResultsN[6]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - N-InsLtg"		Proj:RunResultsN[6]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsN[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Lit" ) / 3.412  endif  }

  ; Appliances & Cooking
	"Calculate TDV - Elec   - N-AppCkg"		Proj:RunResultsN[7]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsN[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - N-AppCkg"		Proj:RunResultsN[7]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsN[7]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - N-AppCkg"		Proj:RunResultsN[7]:PFlxOtherTDV			= {	if (LocalRef( RunResultsN[7]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - N-AppCkg"		Proj:RunResultsN[7]:PFlxTDV[1]			= {	LocalRef( RunResultsN[7]:PFlxElecTDV[1] ) + LocalRef( RunResultsN[7]:PFlxNatGasTDV ) + LocalRef( RunResultsN[7]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - N-AppCkg"		Proj:RunResultsN[7]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsN[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412  endif  }

  ; Plug Loads
	"Calculate TDV - Elec   - N-Plugs"		Proj:RunResultsN[8]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsN[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - N-Plugs"		Proj:RunResultsN[8]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsN[8]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - N-Plugs"		Proj:RunResultsN[8]:PFlxOtherTDV			= {	if (LocalRef( RunResultsN[8]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - N-Plugs"		Proj:RunResultsN[8]:PFlxTDV[1]			= {	LocalRef( RunResultsN[8]:PFlxElecTDV[1] ) + LocalRef( RunResultsN[8]:PFlxNatGasTDV ) + LocalRef( RunResultsN[8]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - N-Plugs"		Proj:RunResultsN[8]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsN[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Rcp" ) / 3.412  endif  }

  ; Exterior
	"Calculate TDV - Elec   - N-Ext"			Proj:RunResultsN[9]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsN[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - N-Ext"			Proj:RunResultsN[9]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsN[9]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - N-Ext"			Proj:RunResultsN[9]:PFlxOtherTDV			= {	if (LocalRef( RunResultsN[9]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - N-Ext"			Proj:RunResultsN[9]:PFlxTDV[1]			= {	LocalRef( RunResultsN[9]:PFlxElecTDV[1] ) + LocalRef( RunResultsN[9]:PFlxNatGasTDV ) + LocalRef( RunResultsN[9]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - N-Ext"			Proj:RunResultsN[9]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsN[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Ext" ) / 3.412  endif  }

  ; PV
	"Calculate TDV - Elec   - N-PV"			Proj:RunResultsN[13]:PFlxElecTDV[1]		= {	if (LocalRef( RunResultsN[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringTDVAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsN[14]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "BT" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - N-PV"			Proj:RunResultsN[13]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - N-PV"			Proj:RunResultsN[13]:PFlxOtherTDV		= {	0  }
	"Calculate TDV - TOTAL  - N-PV"			Proj:RunResultsN[13]:PFlxTDV[1]		= {	LocalRef( RunResultsN[13]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - N-PV"			Proj:RunResultsN[13]:PFlxElecDemand[1]	= {	if (LocalRef( RunResultsN[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec", "PV" ) / 3.412  endif  }
; "store BEMProc details"		Proj:Action = {  StoreBEMProc( "DsgnRtg PV TDV", 0 )  }
; "testing"	Proj:Action	= {	MessageBox( "RunResultsN[13]:PFlxTDV[1] = %g  and [2] = %g", ValidOr( RunResultsN[13]:PFlxTDV[1], 0 ), ValidOr( RunResultsN[13]:PFlxTDV[2], 0 ) )  }

  ; Battery
	"Calculate TDV - Elec   - N-Battery"	Proj:RunResultsN[14]:PFlxElecTDV[1]		= {	if (LocalRef( RunResultsN[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringTDVAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsN[13]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "PV" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - N-Battery"	Proj:RunResultsN[14]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - N-Battery"	Proj:RunResultsN[14]:PFlxOtherTDV		= {	0  }
	"Calculate TDV - TOTAL  - N-Battery"	Proj:RunResultsN[14]:PFlxTDV[1]		= {	LocalRef( RunResultsN[14]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - N-Battery"	Proj:RunResultsN[14]:PFlxElecDemand[1]	= {	if (LocalRef( RunResultsN[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "BT" ) / 3.412  endif  }

  ; Compliance Total
	"Calculate TDV - Elec   - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxElecTDV[1]		= {	RunResultsN[1]:PFlxElecTDV[1]    + RunResultsN[2]:PFlxElecTDV[1]    + RunResultsN[3]:PFlxElecTDV[1]    + RunResultsN[4]:PFlxElecTDV[1]    + RunResultsN[5]:PFlxElecTDV[1]     }
	"Calculate TDV - NatGas - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxNatGasTDV		= {	RunResultsN[1]:PFlxNatGasTDV     + RunResultsN[2]:PFlxNatGasTDV     + RunResultsN[3]:PFlxNatGasTDV     + RunResultsN[4]:PFlxNatGasTDV     + RunResultsN[5]:PFlxNatGasTDV      }
	"Calculate TDV - Other  - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxOtherTDV		= {	RunResultsN[1]:PFlxOtherTDV      + RunResultsN[2]:PFlxOtherTDV      + RunResultsN[3]:PFlxOtherTDV      + RunResultsN[4]:PFlxOtherTDV      + RunResultsN[5]:PFlxOtherTDV       }
	"Calculate TDV - TOTAL  - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxTDV[1]		= {	RunResultsN[1]:PFlxTDV[1]    + RunResultsN[2]:PFlxTDV[1]    + RunResultsN[3]:PFlxTDV[1]    + RunResultsN[4]:PFlxTDV[1]    + RunResultsN[5]:PFlxTDV[1]     }
	"Calculate Elec Demand  - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxElecDemand[1]	= {	RunResultsN[1]:PFlxElecDemand[1] + RunResultsN[2]:PFlxElecDemand[1] + RunResultsN[3]:PFlxElecDemand[1] + RunResultsN[4]:PFlxElecDemand[1] + RunResultsN[5]:PFlxElecDemand[1]  }
;   ; SAC 10/6/16 - 2019 updates
;	"Add in PV TDV - Elec   - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxElecTDV[1]	   = {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsN[11]:PFlxElecTDV[1]    + RunResultsN[13]:PFlxElecTDV[1]    + RunResultsN[14]:PFlxElecTDV[1]     endif   }
;	"Add in PV TDV - TOTAL  - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxTDV[1]  	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsN[11]:PFlxTDV[1]    + RunResultsN[13]:PFlxTDV[1]    + RunResultsN[14]:PFlxTDV[1]     endif   }
;	"Add in PV Elec Demand  - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxElecDemand[1]	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsN[11]:PFlxElecDemand[1] + RunResultsN[13]:PFlxElecDemand[1] + RunResultsN[14]:PFlxElecDemand[1]  endif   }

  ; Total
	"Calculate TDV - Elec   - N-Total"		Proj:RunResultsN[10]:PFlxElecTDV[1]		= {	RunResultsN[11]:PFlxElecTDV[1]    + RunResultsN[6]:PFlxElecTDV[1]    + RunResultsN[7]:PFlxElecTDV[1]    + RunResultsN[8]:PFlxElecTDV[1]    + RunResultsN[9]:PFlxElecTDV[1]     }
	"Calculate TDV - NatGas - N-Total"		Proj:RunResultsN[10]:PFlxNatGasTDV		= {	RunResultsN[11]:PFlxNatGasTDV  + RunResultsN[6]:PFlxNatGasTDV  + RunResultsN[7]:PFlxNatGasTDV  + RunResultsN[8]:PFlxNatGasTDV  + RunResultsN[9]:PFlxNatGasTDV   }
	"Calculate TDV - Other  - N-Total"		Proj:RunResultsN[10]:PFlxOtherTDV		= {	RunResultsN[11]:PFlxOtherTDV   + RunResultsN[6]:PFlxOtherTDV   + RunResultsN[7]:PFlxOtherTDV   + RunResultsN[8]:PFlxOtherTDV   + RunResultsN[9]:PFlxOtherTDV    }
	"Calculate TDV - TOTAL  - N-Total"		Proj:RunResultsN[10]:PFlxTDV[1]		= {	RunResultsN[11]:PFlxTDV[1]    + RunResultsN[6]:PFlxTDV[1]    + RunResultsN[7]:PFlxTDV[1]    + RunResultsN[8]:PFlxTDV[1]    + RunResultsN[9]:PFlxTDV[1]     }
	"Calculate Elec Demand  - N-Total"		Proj:RunResultsN[10]:PFlxElecDemand[1]	= {	RunResultsN[11]:PFlxElecDemand[1] + RunResultsN[6]:PFlxElecDemand[1] + RunResultsN[7]:PFlxElecDemand[1] + RunResultsN[8]:PFlxElecDemand[1] + RunResultsN[9]:PFlxElecDemand[1]  }
   ; SAC 4/28/17 - shifted PV & Batt from CompTot to Tot for 2019
   ; SAC 4/28/17 - add in only Battery to Total for 2016
	"Add in PV TDV - Elec   - N-Total"	   Proj:RunResultsN[10]:PFlxElecTDV[1]	   = {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsN[10]:PFlxElecTDV[1]    + RunResultsN[14]:PFlxElecTDV[1]
                                                                                       else  RunResultsN[10]:PFlxElecTDV[1]    + RunResultsN[13]:PFlxElecTDV[1]    + RunResultsN[14]:PFlxElecTDV[1]     endif endif   }
	"Add in PV TDV - TOTAL  - N-Total"	   Proj:RunResultsN[10]:PFlxTDV[1]  	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsN[10]:PFlxTDV[1]    + RunResultsN[14]:PFlxTDV[1]
                                                                                       else  RunResultsN[10]:PFlxTDV[1]    + RunResultsN[13]:PFlxTDV[1]    + RunResultsN[14]:PFlxTDV[1]     endif endif   }
	"Add in PV Elec Demand  - N-Total"	   Proj:RunResultsN[10]:PFlxElecDemand[1]	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsN[10]:PFlxElecDemand[1] + RunResultsN[14]:PFlxElecDemand[1]
                                                                                       else  RunResultsN[10]:PFlxElecDemand[1] + RunResultsN[13]:PFlxElecDemand[1] + RunResultsN[14]:PFlxElecDemand[1]  endif endif   }
END

;*************************************************************************  - SAC 6/25/13
RULELIST "CARes_PropFlexTDVResults_E" 1 0 0 1
;*************************************************************************
; SAC 7/14/16 - moved Aux & Fan energy into Heating enduse for consistency w/ related mods by MJB:   mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
         ; SAC 8/24/19 - replaced 1/3.413 & 0.01 TDV table multipliers with Proj:TDVSecMult_Elec & TDVSecMult_Fuel to accommodate 2022+ switch to native (E3) TDV table units
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
	"Calculate TDV - Elec   - E-SpcHt"		Proj:RunResultsE[1]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsE[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - E-SpcHt"		Proj:RunResultsE[1]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsE[1]:PFlxNatGasEnergy[1]	) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - E-SpcHt"		Proj:RunResultsE[1]:PFlxOtherTDV			= {	if (LocalRef( RunResultsE[1]:PFlxOtherEnergy[1]		) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - E-SpcHt"		Proj:RunResultsE[1]:PFlxTDV[1]			= {	LocalRef( RunResultsE[1]:PFlxElecTDV[1] ) + LocalRef( RunResultsE[1]:PFlxNatGasTDV ) + LocalRef( RunResultsE[1]:PFlxOtherTDV )   }
  ; SAC 8/23/14 - added rules to set elec demand
	"Calculate Elec Demand  - E-SpcHt"		Proj:RunResultsE[1]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsE[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412  endif  }

  ; Space Cooling (& cooling fan)
	"Calculate TDV - Elec   - E-SpcCl"		Proj:RunResultsE[2]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsE[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - E-SpcCl"		Proj:RunResultsE[2]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsE[2]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - E-SpcCl"		Proj:RunResultsE[2]:PFlxOtherTDV			= {	if (LocalRef( RunResultsE[2]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - E-SpcCl"		Proj:RunResultsE[2]:PFlxTDV[1]			= {	LocalRef( RunResultsE[2]:PFlxElecTDV[1] ) + LocalRef( RunResultsE[2]:PFlxNatGasTDV ) + LocalRef( RunResultsE[2]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - E-SpcCl"		Proj:RunResultsE[2]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsE[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Clg", "FanC" ) / 3.412  endif  }

  ; IAQ Ventilation Fans
	"Calculate TDV - Elec   - E-IAQVent"	Proj:RunResultsE[3]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsE[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "IAQVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "FanV" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - E-IAQVent"	Proj:RunResultsE[3]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - E-IAQVent"	Proj:RunResultsE[3]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - E-IAQVent"	Proj:RunResultsE[3]:PFlxTDV[1]			= {	LocalRef( RunResultsE[3]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - E-IAQVent"	Proj:RunResultsE[3]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsE[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "FanV" ) / 3.412  endif  }

  ; Other HVAC (aux & misc fans)
   ; SAC 1/27/19 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
	"Calculate TDV - Elec   - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxElecTDV[1]		= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  int( (100 * ApplyHourlyResultMultipliers( "OHVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "User1" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxTDV[1]		   = {	RunResultsE[4]:PFlxElecTDV[1]  }
	"Calculate Elec Demand  - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxElecDemand[1]	= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "User1" ) / 3.412  endif  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC E-PFlx TDV use across SpcHt & SpcCl by fuel based on ratio of total TDV (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - E-PFlxTDV"      Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsE[4]:PFlxTDV[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsE[1]:PFlxTDV[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsE[2]:PFlxTDV[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsE[1]:PFlxTDV[1], 0 ) / 
                                                                                 (ValidOr( RunResultsE[1]:PFlxTDV[1], 0 ) + ValidOr( RunResultsE[2]:PFlxTDV[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - E-SpcHt"		Proj:RunResultsE[1]:PFlxElecTDV[1]	= {   if (IfValidAnd( RunResultsE[4]:PFlxElecTDV[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsE[1]:PFlxElecTDV[1] + (RunResultsE[4]:PFlxElecTDV[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - E-SpcHt"		Proj:RunResultsE[1]:PFlxTDV[1]	   = {	LocalRef( RunResultsE[1]:PFlxElecTDV[1] ) + LocalRef( RunResultsE[1]:PFlxNatGasTDV[1] ) + LocalRef( RunResultsE[1]:PFlxOtherTDV[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - E-SpcCl"		Proj:RunResultsE[2]:PFlxElecTDV[1]	= {   if (IfValidAnd( RunResultsE[4]:PFlxElecTDV[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsE[2]:PFlxElecTDV[1] + (RunResultsE[4]:PFlxElecTDV[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - E-SpcCl"		Proj:RunResultsE[2]:PFlxTDV[1]	   = {	LocalRef( RunResultsE[2]:PFlxElecTDV[1] ) + LocalRef( RunResultsE[2]:PFlxNatGasTDV[1] ) + LocalRef( RunResultsE[2]:PFlxOtherTDV[1] )   }
   ; SAC 1/27/19 - REDISTRIBUTE OthrHVAC PFlx Demand across SpcHt & SpcCl by fuel based on ratio of total Demand (tic #1053)
   "Set OthrHVAC_SpcHtFrac - E-Demand"       Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsE[4]:PFlxElecDemand[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsE[1]:PFlxElecDemand[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsE[2]:PFlxElecDemand[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsE[1]:PFlxElecDemand[1], 0 ) / 
                                                                                 (ValidOr( RunResultsE[1]:PFlxElecDemand[1], 0 ) + ValidOr( RunResultsE[2]:PFlxElecDemand[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Demand - E-SpcHt"		Proj:RunResultsE[1]:PFlxElecDemand[1]  = {   if (IfValidAnd( RunResultsE[4]:PFlxElecDemand[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsE[1]:PFlxElecDemand[1] + (RunResultsE[4]:PFlxElecDemand[1]     * OthrHVAC_SpcHtFrac)  endif  }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Demand - E-SpcCl"		Proj:RunResultsE[2]:PFlxElecDemand[1]  = {   if (IfValidAnd( RunResultsE[4]:PFlxElecDemand[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsE[2]:PFlxElecDemand[1] + (RunResultsE[4]:PFlxElecDemand[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxElecTDV[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxTDV[1]	      = {	0  }
	"ZERO-OUT         - Demand - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxElecDemand[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC E-PFlxTDV

  ; Water Heating
	"Calculate TDV - Elec   - E-WtrHt"		Proj:RunResultsE[5]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsE[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea) + 0.5) / 100
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - E-WtrHt"		Proj:RunResultsE[5]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsE[5]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - E-WtrHt"		Proj:RunResultsE[5]:PFlxOtherTDV			= {	if (LocalRef( RunResultsE[5]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - E-WtrHt"		Proj:RunResultsE[5]:PFlxTDV[1]			= {	LocalRef( RunResultsE[5]:PFlxElecTDV[1] ) + LocalRef( RunResultsE[5]:PFlxNatGasTDV ) + LocalRef( RunResultsE[5]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - E-WtrHt"		Proj:RunResultsE[5]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsE[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412  endif endif  }

  ; Inside Lighting
	"Calculate TDV - Elec   - E-InsLtg"		Proj:RunResultsE[6]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsE[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - E-InsLtg"		Proj:RunResultsE[6]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsE[6]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - E-InsLtg"		Proj:RunResultsE[6]:PFlxOtherTDV			= {	if (LocalRef( RunResultsE[6]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - E-InsLtg"		Proj:RunResultsE[6]:PFlxTDV[1]			= {	LocalRef( RunResultsE[6]:PFlxElecTDV[1] ) + LocalRef( RunResultsE[6]:PFlxNatGasTDV ) + LocalRef( RunResultsE[6]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - E-IndLtg"		Proj:RunResultsE[6]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsE[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Lit" ) / 3.412  endif  }

  ; Appliances & Cooking
	"Calculate TDV - Elec   - E-AppCkg"		Proj:RunResultsE[7]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsE[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - E-AppCkg"		Proj:RunResultsE[7]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsE[7]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - E-AppCkg"		Proj:RunResultsE[7]:PFlxOtherTDV			= {	if (LocalRef( RunResultsE[7]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - E-AppCkg"		Proj:RunResultsE[7]:PFlxTDV[1]			= {	LocalRef( RunResultsE[7]:PFlxElecTDV[1] ) + LocalRef( RunResultsE[7]:PFlxNatGasTDV ) + LocalRef( RunResultsE[7]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - E-AppCkg"		Proj:RunResultsE[7]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsE[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412  endif  }

  ; Plug Loads
	"Calculate TDV - Elec   - E-Plugs"		Proj:RunResultsE[8]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsE[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - E-Plugs"		Proj:RunResultsE[8]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsE[8]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - E-Plugs"		Proj:RunResultsE[8]:PFlxOtherTDV			= {	if (LocalRef( RunResultsE[8]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - E-Plugs"		Proj:RunResultsE[8]:PFlxTDV[1]			= {	LocalRef( RunResultsE[8]:PFlxElecTDV[1] ) + LocalRef( RunResultsE[8]:PFlxNatGasTDV ) + LocalRef( RunResultsE[8]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - E-Plugs"		Proj:RunResultsE[8]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsE[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Rcp" ) / 3.412  endif  }

  ; Exterior
	"Calculate TDV - Elec   - E-Ext"			Proj:RunResultsE[9]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsE[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - E-Ext"			Proj:RunResultsE[9]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsE[9]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - E-Ext"			Proj:RunResultsE[9]:PFlxOtherTDV			= {	if (LocalRef( RunResultsE[9]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - E-Ext"			Proj:RunResultsE[9]:PFlxTDV[1]			= {	LocalRef( RunResultsE[9]:PFlxElecTDV[1] ) + LocalRef( RunResultsE[9]:PFlxNatGasTDV ) + LocalRef( RunResultsE[9]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - E-Ext"			Proj:RunResultsE[9]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsE[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Ext" ) / 3.412  endif  }

  ; PV
	"Calculate TDV - Elec   - E-PV"			Proj:RunResultsE[13]:PFlxElecTDV[1]		= {	if (LocalRef( RunResultsE[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringTDVAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsE[14]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "BT" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - E-PV"			Proj:RunResultsE[13]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - E-PV"			Proj:RunResultsE[13]:PFlxOtherTDV		= {	0  }
	"Calculate TDV - TOTAL  - E-PV"			Proj:RunResultsE[13]:PFlxTDV[1]		= {	LocalRef( RunResultsE[13]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - E-PV"			Proj:RunResultsE[13]:PFlxElecDemand[1]	= {	if (LocalRef( RunResultsE[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec", "PV" ) / 3.412  endif  }

  ; Battery
	"Calculate TDV - Elec   - E-Battery"	Proj:RunResultsE[14]:PFlxElecTDV[1]		= {	if (LocalRef( RunResultsE[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringTDVAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsE[13]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "PV" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - E-Battery"	Proj:RunResultsE[14]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - E-Battery"	Proj:RunResultsE[14]:PFlxOtherTDV		= {	0  }
	"Calculate TDV - TOTAL  - E-Battery"	Proj:RunResultsE[14]:PFlxTDV[1]		= {	LocalRef( RunResultsE[14]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - E-Battery"	Proj:RunResultsE[14]:PFlxElecDemand[1]	= {	if (LocalRef( RunResultsE[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec", "BT" ) / 3.412  endif  }

  ; Compliance Total
	"Calculate TDV - Elec   - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxElecTDV[1]			= {	RunResultsE[1]:PFlxElecTDV[1]    + RunResultsE[2]:PFlxElecTDV[1]    + RunResultsE[3]:PFlxElecTDV[1]    + RunResultsE[4]:PFlxElecTDV[1]    + RunResultsE[5]:PFlxElecTDV[1]     }
	"Calculate TDV - NatGas - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxNatGasTDV		= {	RunResultsE[1]:PFlxNatGasTDV  + RunResultsE[2]:PFlxNatGasTDV  + RunResultsE[3]:PFlxNatGasTDV  + RunResultsE[4]:PFlxNatGasTDV  + RunResultsE[5]:PFlxNatGasTDV   }
	"Calculate TDV - Other  - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxOtherTDV		= {	RunResultsE[1]:PFlxOtherTDV   + RunResultsE[2]:PFlxOtherTDV   + RunResultsE[3]:PFlxOtherTDV   + RunResultsE[4]:PFlxOtherTDV   + RunResultsE[5]:PFlxOtherTDV    }
	"Calculate TDV - TOTAL  - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxTDV[1]			= {	RunResultsE[1]:PFlxTDV[1]    + RunResultsE[2]:PFlxTDV[1]    + RunResultsE[3]:PFlxTDV[1]    + RunResultsE[4]:PFlxTDV[1]    + RunResultsE[5]:PFlxTDV[1]     }
	"Calculate Elec Demand  - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxElecDemand[1]		= {	RunResultsE[1]:PFlxElecDemand[1] + RunResultsE[2]:PFlxElecDemand[1] + RunResultsE[3]:PFlxElecDemand[1] + RunResultsE[4]:PFlxElecDemand[1] + RunResultsE[5]:PFlxElecDemand[1]  }
;   ; SAC 10/6/16 - 2019 updates
;	"Add in PV TDV - Elec   - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxElecTDV[1]	   = {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsE[11]:PFlxElecTDV[1]    + RunResultsE[13]:PFlxElecTDV[1]    + RunResultsE[14]:PFlxElecTDV[1]     endif   }
;	"Add in PV TDV - TOTAL  - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxTDV[1]  	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsE[11]:PFlxTDV[1]    + RunResultsE[13]:PFlxTDV[1]    + RunResultsE[14]:PFlxTDV[1]     endif   }
;	"Add in PV Elec Demand  - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxElecDemand[1]	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsE[11]:PFlxElecDemand[1] + RunResultsE[13]:PFlxElecDemand[1] + RunResultsE[14]:PFlxElecDemand[1]  endif   }

  ; Total
	"Calculate TDV - Elec   - E-Total"		Proj:RunResultsE[10]:PFlxElecTDV[1]			= {	RunResultsE[11]:PFlxElecTDV[1]    + RunResultsE[6]:PFlxElecTDV[1]    + RunResultsE[7]:PFlxElecTDV[1]    + RunResultsE[8]:PFlxElecTDV[1]    + RunResultsE[9]:PFlxElecTDV[1]     }
	"Calculate TDV - NatGas - E-Total"		Proj:RunResultsE[10]:PFlxNatGasTDV		= {	RunResultsE[11]:PFlxNatGasTDV  + RunResultsE[6]:PFlxNatGasTDV  + RunResultsE[7]:PFlxNatGasTDV  + RunResultsE[8]:PFlxNatGasTDV  + RunResultsE[9]:PFlxNatGasTDV   }
	"Calculate TDV - Other  - E-Total"		Proj:RunResultsE[10]:PFlxOtherTDV		= {	RunResultsE[11]:PFlxOtherTDV   + RunResultsE[6]:PFlxOtherTDV   + RunResultsE[7]:PFlxOtherTDV   + RunResultsE[8]:PFlxOtherTDV   + RunResultsE[9]:PFlxOtherTDV    }
	"Calculate TDV - TOTAL  - E-Total"		Proj:RunResultsE[10]:PFlxTDV[1]			= {	RunResultsE[11]:PFlxTDV[1]    + RunResultsE[6]:PFlxTDV[1]    + RunResultsE[7]:PFlxTDV[1]    + RunResultsE[8]:PFlxTDV[1]    + RunResultsE[9]:PFlxTDV[1]     }
	"Calculate Elec Demand  - E-Total"		Proj:RunResultsE[10]:PFlxElecDemand[1]		= {	RunResultsE[11]:PFlxElecDemand[1] + RunResultsE[6]:PFlxElecDemand[1] + RunResultsE[7]:PFlxElecDemand[1] + RunResultsE[8]:PFlxElecDemand[1] + RunResultsE[9]:PFlxElecDemand[1]  }
   ; SAC 4/28/17 - shifted PV & Batt from CompTot to Tot for 2019
   ; SAC 4/28/17 - add in only Battery to Total for 2016
	"Add in PV TDV - Elec   - E-Total"	   Proj:RunResultsE[10]:PFlxElecTDV[1]	   = {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsE[10]:PFlxElecTDV[1]    + RunResultsE[14]:PFlxElecTDV[1]
                                                                                       else  RunResultsE[10]:PFlxElecTDV[1]    + RunResultsE[13]:PFlxElecTDV[1]    + RunResultsE[14]:PFlxElecTDV[1]     endif endif   }
	"Add in PV TDV - TOTAL  - E-Total"	   Proj:RunResultsE[10]:PFlxTDV[1]  	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsE[10]:PFlxTDV[1]    + RunResultsE[14]:PFlxTDV[1]
                                                                                       else  RunResultsE[10]:PFlxTDV[1]    + RunResultsE[13]:PFlxTDV[1]    + RunResultsE[14]:PFlxTDV[1]     endif endif   }
	"Add in PV Elec Demand  - E-Total"	   Proj:RunResultsE[10]:PFlxElecDemand[1]	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsE[10]:PFlxElecDemand[1] + RunResultsE[14]:PFlxElecDemand[1]
                                                                                       else  RunResultsE[10]:PFlxElecDemand[1] + RunResultsE[13]:PFlxElecDemand[1] + RunResultsE[14]:PFlxElecDemand[1]  endif endif   }
END

;*************************************************************************  - SAC 6/25/13
RULELIST "CARes_PropFlexTDVResults_S" 1 0 0 1
;*************************************************************************
; SAC 7/14/16 - moved Aux & Fan energy into Heating enduse for consistency w/ related mods by MJB:   mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
         ; SAC 8/24/19 - replaced 1/3.413 & 0.01 TDV table multipliers with Proj:TDVSecMult_Elec & TDVSecMult_Fuel to accommodate 2022+ switch to native (E3) TDV table units
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
	"Calculate TDV - Elec   - S-SpcHt"		Proj:RunResultsS[1]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsS[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - S-SpcHt"		Proj:RunResultsS[1]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsS[1]:PFlxNatGasEnergy[1]	) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - S-SpcHt"		Proj:RunResultsS[1]:PFlxOtherTDV			= {	if (LocalRef( RunResultsS[1]:PFlxOtherEnergy[1]		) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - S-SpcHt"		Proj:RunResultsS[1]:PFlxTDV[1]			= {	LocalRef( RunResultsS[1]:PFlxElecTDV[1] ) + LocalRef( RunResultsS[1]:PFlxNatGasTDV ) + LocalRef( RunResultsS[1]:PFlxOtherTDV )   }
  ; SAC 8/23/14 - added rules to set elec demand
	"Calculate Elec Demand  - S-SpcHt"		Proj:RunResultsS[1]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsS[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412  endif  }

  ; Space Cooling (& cooling fan)
	"Calculate TDV - Elec   - S-SpcCl"		Proj:RunResultsS[2]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsS[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - S-SpcCl"		Proj:RunResultsS[2]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsS[2]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - S-SpcCl"		Proj:RunResultsS[2]:PFlxOtherTDV			= {	if (LocalRef( RunResultsS[2]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - S-SpcCl"		Proj:RunResultsS[2]:PFlxTDV[1]			= {	LocalRef( RunResultsS[2]:PFlxElecTDV[1] ) + LocalRef( RunResultsS[2]:PFlxNatGasTDV ) + LocalRef( RunResultsS[2]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - S-SpcCl"		Proj:RunResultsS[2]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsS[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Clg", "FanC" ) / 3.412  endif  }

  ; IAQ Ventilation Fans
	"Calculate TDV - Elec   - S-IAQVent"	Proj:RunResultsS[3]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsS[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "IAQVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "FanV" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - S-IAQVent"	Proj:RunResultsS[3]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - S-IAQVent"	Proj:RunResultsS[3]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - S-IAQVent"	Proj:RunResultsS[3]:PFlxTDV[1]			= {	LocalRef( RunResultsS[3]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - S-IAQVent"	Proj:RunResultsS[3]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsS[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "FanV" ) / 3.412  endif  }

  ; Other HVAC (aux & misc fans)
   ; SAC 1/27/19 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
	"Calculate TDV - Elec   - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxElecTDV[1]		= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  int( (100 * ApplyHourlyResultMultipliers( "OHVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "User1" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxTDV[1]		   = {	RunResultsS[4]:PFlxElecTDV[1]  }
	"Calculate Elec Demand  - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxElecDemand[1]	= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "User1" ) / 3.412  endif  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC S-PFlx TDV use across SpcHt & SpcCl by fuel based on ratio of total TDV (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - S-PFlxTDV"      Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsS[4]:PFlxTDV[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsS[1]:PFlxTDV[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsS[2]:PFlxTDV[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsS[1]:PFlxTDV[1], 0 ) / 
                                                                                 (ValidOr( RunResultsS[1]:PFlxTDV[1], 0 ) + ValidOr( RunResultsS[2]:PFlxTDV[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - S-SpcHt"		Proj:RunResultsS[1]:PFlxElecTDV[1]	= {   if (IfValidAnd( RunResultsS[4]:PFlxElecTDV[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsS[1]:PFlxElecTDV[1] + (RunResultsS[4]:PFlxElecTDV[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - S-SpcHt"		Proj:RunResultsS[1]:PFlxTDV[1]	   = {	LocalRef( RunResultsS[1]:PFlxElecTDV[1] ) + LocalRef( RunResultsS[1]:PFlxNatGasTDV[1] ) + LocalRef( RunResultsS[1]:PFlxOtherTDV[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - S-SpcCl"		Proj:RunResultsS[2]:PFlxElecTDV[1]	= {   if (IfValidAnd( RunResultsS[4]:PFlxElecTDV[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsS[2]:PFlxElecTDV[1] + (RunResultsS[4]:PFlxElecTDV[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - S-SpcCl"		Proj:RunResultsS[2]:PFlxTDV[1]	   = {	LocalRef( RunResultsS[2]:PFlxElecTDV[1] ) + LocalRef( RunResultsS[2]:PFlxNatGasTDV[1] ) + LocalRef( RunResultsS[2]:PFlxOtherTDV[1] )   }
   ; SAC 1/27/19 - REDISTRIBUTE OthrHVAC PFlx Demand across SpcHt & SpcCl by fuel based on ratio of total Demand (tic #1053)
   "Set OthrHVAC_SpcHtFrac - S-Demand"       Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsS[4]:PFlxElecDemand[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsS[1]:PFlxElecDemand[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsS[2]:PFlxElecDemand[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsS[1]:PFlxElecDemand[1], 0 ) / 
                                                                                 (ValidOr( RunResultsS[1]:PFlxElecDemand[1], 0 ) + ValidOr( RunResultsS[2]:PFlxElecDemand[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Demand - S-SpcHt"		Proj:RunResultsS[1]:PFlxElecDemand[1]  = {   if (IfValidAnd( RunResultsS[4]:PFlxElecDemand[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsS[1]:PFlxElecDemand[1] + (RunResultsS[4]:PFlxElecDemand[1]     * OthrHVAC_SpcHtFrac)  endif  }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Demand - S-SpcCl"		Proj:RunResultsS[2]:PFlxElecDemand[1]  = {   if (IfValidAnd( RunResultsS[4]:PFlxElecDemand[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsS[2]:PFlxElecDemand[1] + (RunResultsS[4]:PFlxElecDemand[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxElecTDV[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxTDV[1]	      = {	0  }
	"ZERO-OUT         - Demand - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxElecDemand[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC S-PFlxTDV

  ; Water Heating
	"Calculate TDV - Elec   - S-WtrHt"		Proj:RunResultsS[5]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsS[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea) + 0.5) / 100
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - S-WtrHt"		Proj:RunResultsS[5]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsS[5]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - S-WtrHt"		Proj:RunResultsS[5]:PFlxOtherTDV			= {	if (LocalRef( RunResultsS[5]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - S-WtrHt"		Proj:RunResultsS[5]:PFlxTDV[1]			= {	LocalRef( RunResultsS[5]:PFlxElecTDV[1] ) + LocalRef( RunResultsS[5]:PFlxNatGasTDV ) + LocalRef( RunResultsS[5]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - S-WtrHt"		Proj:RunResultsS[5]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsS[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412  endif endif  }

  ; Inside Lighting
	"Calculate TDV - Elec   - S-InsLtg"		Proj:RunResultsS[6]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsS[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - S-InsLtg"		Proj:RunResultsS[6]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsS[6]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - S-InsLtg"		Proj:RunResultsS[6]:PFlxOtherTDV			= {	if (LocalRef( RunResultsS[6]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - S-InsLtg"		Proj:RunResultsS[6]:PFlxTDV[1]			= {	LocalRef( RunResultsS[6]:PFlxElecTDV[1] ) + LocalRef( RunResultsS[6]:PFlxNatGasTDV ) + LocalRef( RunResultsS[6]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - S-IndLtg"		Proj:RunResultsS[6]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsS[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Lit" ) / 3.412  endif  }

  ; Appliances & Cooking
	"Calculate TDV - Elec   - S-AppCkg"		Proj:RunResultsS[7]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsS[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - S-AppCkg"		Proj:RunResultsS[7]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsS[7]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - S-AppCkg"		Proj:RunResultsS[7]:PFlxOtherTDV			= {	if (LocalRef( RunResultsS[7]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - S-AppCkg"		Proj:RunResultsS[7]:PFlxTDV[1]			= {	LocalRef( RunResultsS[7]:PFlxElecTDV[1] ) + LocalRef( RunResultsS[7]:PFlxNatGasTDV ) + LocalRef( RunResultsS[7]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - S-AppCkg"		Proj:RunResultsS[7]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsS[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412  endif  }

  ; Plug Loads
	"Calculate TDV - Elec   - S-Plugs"		Proj:RunResultsS[8]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsS[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - S-Plugs"		Proj:RunResultsS[8]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsS[8]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - S-Plugs"		Proj:RunResultsS[8]:PFlxOtherTDV			= {	if (LocalRef( RunResultsS[8]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - S-Plugs"		Proj:RunResultsS[8]:PFlxTDV[1]			= {	LocalRef( RunResultsS[8]:PFlxElecTDV[1] ) + LocalRef( RunResultsS[8]:PFlxNatGasTDV ) + LocalRef( RunResultsS[8]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - S-Plugs"		Proj:RunResultsS[8]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsS[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Rcp" ) / 3.412  endif  }

  ; Exterior
	"Calculate TDV - Elec   - S-Ext"			Proj:RunResultsS[9]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsS[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - S-Ext"			Proj:RunResultsS[9]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsS[9]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - S-Ext"			Proj:RunResultsS[9]:PFlxOtherTDV			= {	if (LocalRef( RunResultsS[9]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - S-Ext"			Proj:RunResultsS[9]:PFlxTDV[1]			= {	LocalRef( RunResultsS[9]:PFlxElecTDV[1] ) + LocalRef( RunResultsS[9]:PFlxNatGasTDV ) + LocalRef( RunResultsS[9]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - S-Ext"			Proj:RunResultsS[9]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsS[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Ext" ) / 3.412  endif  }

  ; PV
	"Calculate TDV - Elec   - S-PV"			Proj:RunResultsS[13]:PFlxElecTDV[1]		= {	if (LocalRef( RunResultsS[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringTDVAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsS[14]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "BT" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - S-PV"			Proj:RunResultsS[13]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - S-PV"			Proj:RunResultsS[13]:PFlxOtherTDV		= {	0  }
	"Calculate TDV - TOTAL  - S-PV"			Proj:RunResultsS[13]:PFlxTDV[1]		= {	LocalRef( RunResultsS[13]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - S-PV"			Proj:RunResultsS[13]:PFlxElecDemand[1]	= {	if (LocalRef( RunResultsS[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec", "PV" ) / 3.412  endif  }

  ; Battery
	"Calculate TDV - Elec   - S-Battery"	Proj:RunResultsS[14]:PFlxElecTDV[1]		= {	if (LocalRef( RunResultsS[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringTDVAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsS[13]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "PV" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - S-Battery"	Proj:RunResultsS[14]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - S-Battery"	Proj:RunResultsS[14]:PFlxOtherTDV		= {	0  }
	"Calculate TDV - TOTAL  - S-Battery"	Proj:RunResultsS[14]:PFlxTDV[1]		= {	LocalRef( RunResultsS[14]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - S-Battery"	Proj:RunResultsS[14]:PFlxElecDemand[1]	= {	if (LocalRef( RunResultsS[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec", "BT" ) / 3.412  endif  }

  ; Compliance Total
	"Calculate TDV - Elec   - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxElecTDV[1]		= {	RunResultsS[1]:PFlxElecTDV[1]    + RunResultsS[2]:PFlxElecTDV[1]    + RunResultsS[3]:PFlxElecTDV[1]    + RunResultsS[4]:PFlxElecTDV[1]    + RunResultsS[5]:PFlxElecTDV[1]     }
	"Calculate TDV - NatGas - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxNatGasTDV		= {	RunResultsS[1]:PFlxNatGasTDV  + RunResultsS[2]:PFlxNatGasTDV  + RunResultsS[3]:PFlxNatGasTDV  + RunResultsS[4]:PFlxNatGasTDV  + RunResultsS[5]:PFlxNatGasTDV   }
	"Calculate TDV - Other  - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxOtherTDV		= {	RunResultsS[1]:PFlxOtherTDV   + RunResultsS[2]:PFlxOtherTDV   + RunResultsS[3]:PFlxOtherTDV   + RunResultsS[4]:PFlxOtherTDV   + RunResultsS[5]:PFlxOtherTDV    }
	"Calculate TDV - TOTAL  - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxTDV[1]		= {	RunResultsS[1]:PFlxTDV[1]    + RunResultsS[2]:PFlxTDV[1]    + RunResultsS[3]:PFlxTDV[1]    + RunResultsS[4]:PFlxTDV[1]    + RunResultsS[5]:PFlxTDV[1]     }
	"Calculate Elec Demand  - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxElecDemand[1]	= {	RunResultsS[1]:PFlxElecDemand[1] + RunResultsS[2]:PFlxElecDemand[1] + RunResultsS[3]:PFlxElecDemand[1] + RunResultsS[4]:PFlxElecDemand[1] + RunResultsS[5]:PFlxElecDemand[1]  }
;   ; SAC 10/6/16 - 2019 updates
;	"Add in PV TDV - Elec   - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxElecTDV[1]	   = {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsS[11]:PFlxElecTDV[1]    + RunResultsS[13]:PFlxElecTDV[1]    + RunResultsS[14]:PFlxElecTDV[1]     endif   }
;	"Add in PV TDV - TOTAL  - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxTDV[1]  	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsS[11]:PFlxTDV[1]    + RunResultsS[13]:PFlxTDV[1]    + RunResultsS[14]:PFlxTDV[1]     endif   }
;	"Add in PV Elec Demand  - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxElecDemand[1]	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsS[11]:PFlxElecDemand[1] + RunResultsS[13]:PFlxElecDemand[1] + RunResultsS[14]:PFlxElecDemand[1]  endif   }

  ; Total
	"Calculate TDV - Elec   - S-Total"		Proj:RunResultsS[10]:PFlxElecTDV[1]			= {	RunResultsS[11]:PFlxElecTDV[1]    + RunResultsS[6]:PFlxElecTDV[1]    + RunResultsS[7]:PFlxElecTDV[1]    + RunResultsS[8]:PFlxElecTDV[1]    + RunResultsS[9]:PFlxElecTDV[1]     }
	"Calculate TDV - NatGas - S-Total"		Proj:RunResultsS[10]:PFlxNatGasTDV		= {	RunResultsS[11]:PFlxNatGasTDV  + RunResultsS[6]:PFlxNatGasTDV  + RunResultsS[7]:PFlxNatGasTDV  + RunResultsS[8]:PFlxNatGasTDV  + RunResultsS[9]:PFlxNatGasTDV   }
	"Calculate TDV - Other  - S-Total"		Proj:RunResultsS[10]:PFlxOtherTDV		= {	RunResultsS[11]:PFlxOtherTDV   + RunResultsS[6]:PFlxOtherTDV   + RunResultsS[7]:PFlxOtherTDV   + RunResultsS[8]:PFlxOtherTDV   + RunResultsS[9]:PFlxOtherTDV    }
	"Calculate TDV - TOTAL  - S-Total"		Proj:RunResultsS[10]:PFlxTDV[1]			= {	RunResultsS[11]:PFlxTDV[1]    + RunResultsS[6]:PFlxTDV[1]    + RunResultsS[7]:PFlxTDV[1]    + RunResultsS[8]:PFlxTDV[1]    + RunResultsS[9]:PFlxTDV[1]     }
	"Calculate Elec Demand  - S-Total"		Proj:RunResultsS[10]:PFlxElecDemand[1]		= {	RunResultsS[11]:PFlxElecDemand[1] + RunResultsS[6]:PFlxElecDemand[1] + RunResultsS[7]:PFlxElecDemand[1] + RunResultsS[8]:PFlxElecDemand[1] + RunResultsS[9]:PFlxElecDemand[1]  }
   ; SAC 4/28/17 - shifted PV & Batt from CompTot to Tot for 2019
   ; SAC 4/28/17 - add in only Battery to Total for 2016
	"Add in PV TDV - Elec   - S-Total"	   Proj:RunResultsS[10]:PFlxElecTDV[1]	   = {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsS[10]:PFlxElecTDV[1]    + RunResultsS[14]:PFlxElecTDV[1]
                                                                                       else  RunResultsS[10]:PFlxElecTDV[1]    + RunResultsS[13]:PFlxElecTDV[1]    + RunResultsS[14]:PFlxElecTDV[1]     endif endif   }
	"Add in PV TDV - TOTAL  - S-Total"	   Proj:RunResultsS[10]:PFlxTDV[1]  	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsS[10]:PFlxTDV[1]    + RunResultsS[14]:PFlxTDV[1]
                                                                                       else  RunResultsS[10]:PFlxTDV[1]    + RunResultsS[13]:PFlxTDV[1]    + RunResultsS[14]:PFlxTDV[1]     endif endif   }
	"Add in PV Elec Demand  - S-Total"	   Proj:RunResultsS[10]:PFlxElecDemand[1]	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsS[10]:PFlxElecDemand[1] + RunResultsS[14]:PFlxElecDemand[1]
                                                                                       else  RunResultsS[10]:PFlxElecDemand[1] + RunResultsS[13]:PFlxElecDemand[1] + RunResultsS[14]:PFlxElecDemand[1]  endif endif   }
END

;*************************************************************************  - SAC 6/25/13
RULELIST "CARes_PropFlexTDVResults_W" 1 0 0 1
;*************************************************************************
; SAC 7/14/16 - moved Aux & Fan energy into Heating enduse for consistency w/ related mods by MJB:   mjb-10/16/13	moved "Other HVAC" [4] into "Space Heating" [1]
         ; SAC 8/24/19 - replaced 1/3.413 & 0.01 TDV table multipliers with Proj:TDVSecMult_Elec & TDVSecMult_Fuel to accommodate 2022+ switch to native (E3) TDV table units
         ; SAC 8/26/19 - added primary table multipliers (of 1.0) to all ApplyHourlyResultMult* function calls (to accommodate 2022+ TDV table unit switch)
  ; Space Heating (& heating fan)
	"Calculate TDV - Elec   - W-SpcHt"		Proj:RunResultsW[1]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsW[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - W-SpcHt"		Proj:RunResultsW[1]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsW[1]:PFlxNatGasEnergy[1]	) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - W-SpcHt"		Proj:RunResultsW[1]:PFlxOtherTDV			= {	if (LocalRef( RunResultsW[1]:PFlxOtherEnergy[1]		) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "HtgTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - W-SpcHt"		Proj:RunResultsW[1]:PFlxTDV[1]			= {	LocalRef( RunResultsW[1]:PFlxElecTDV[1] ) + LocalRef( RunResultsW[1]:PFlxNatGasTDV ) + LocalRef( RunResultsW[1]:PFlxOtherTDV )   }
  ; SAC 8/23/14 - added rules to set elec demand
	"Calculate Elec Demand  - W-SpcHt"		Proj:RunResultsW[1]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsW[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / 3.412  endif  }

  ; Space Cooling (& cooling fan)
	"Calculate TDV - Elec   - W-SpcCl"		Proj:RunResultsW[2]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsW[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - W-SpcCl"		Proj:RunResultsW[2]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsW[2]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - W-SpcCl"		Proj:RunResultsW[2]:PFlxOtherTDV			= {	if (LocalRef( RunResultsW[2]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ClgTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - W-SpcCl"		Proj:RunResultsW[2]:PFlxTDV[1]			= {	LocalRef( RunResultsW[2]:PFlxElecTDV[1] ) + LocalRef( RunResultsW[2]:PFlxNatGasTDV ) + LocalRef( RunResultsW[2]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - W-SpcCl"		Proj:RunResultsW[2]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsW[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Clg", "FanC" ) / 3.412  endif  }

  ; IAQ Ventilation Fans
	"Calculate TDV - Elec   - W-IAQVent"	Proj:RunResultsW[3]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsW[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "IAQVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "FanV" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - W-IAQVent"	Proj:RunResultsW[3]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - W-IAQVent"	Proj:RunResultsW[3]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - W-IAQVent"	Proj:RunResultsW[3]:PFlxTDV[1]			= {	LocalRef( RunResultsW[3]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - W-IAQVent"	Proj:RunResultsW[3]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsW[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "FanV" ) / 3.412  endif  }		; SAC 7/14/16 - fixed bug here - was same as Htg demand!

  ; Other HVAC (aux & misc fans)
   ; SAC 1/27/19 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
	"Calculate TDV - Elec   - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxElecTDV[1]		= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  int( (100 * ApplyHourlyResultMultipliers( "OHVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "User1" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxOtherTDV			= {	0  }
	"Calculate TDV - TOTAL  - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxTDV[1]		   = {	RunResultsW[4]:PFlxElecTDV[1]  }
	"Calculate Elec Demand  - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxElecDemand[1]	= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "User1" ) / 3.412  endif  }

; SAC 1/27/19 - REDISTRIBUTE OthrHVAC W-PFlx TDV use across SpcHt & SpcCl by fuel based on ratio of total TDV (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - W-PFlxTDV"      Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsW[4]:PFlxTDV[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsW[1]:PFlxTDV[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsW[2]:PFlxTDV[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsW[1]:PFlxTDV[1], 0 ) / 
                                                                                 (ValidOr( RunResultsW[1]:PFlxTDV[1], 0 ) + ValidOr( RunResultsW[2]:PFlxTDV[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - W-SpcHt"		Proj:RunResultsW[1]:PFlxElecTDV[1]	= {   if (IfValidAnd( RunResultsW[4]:PFlxElecTDV[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsW[1]:PFlxElecTDV[1] + (RunResultsW[4]:PFlxElecTDV[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - W-SpcHt"		Proj:RunResultsW[1]:PFlxTDV[1]	   = {	LocalRef( RunResultsW[1]:PFlxElecTDV[1] ) + LocalRef( RunResultsW[1]:PFlxNatGasTDV[1] ) + LocalRef( RunResultsW[1]:PFlxOtherTDV[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - W-SpcCl"		Proj:RunResultsW[2]:PFlxElecTDV[1]	= {   if (IfValidAnd( RunResultsW[4]:PFlxElecTDV[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsW[2]:PFlxElecTDV[1] + (RunResultsW[4]:PFlxElecTDV[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - W-SpcCl"		Proj:RunResultsW[2]:PFlxTDV[1]	   = {	LocalRef( RunResultsW[2]:PFlxElecTDV[1] ) + LocalRef( RunResultsW[2]:PFlxNatGasTDV[1] ) + LocalRef( RunResultsW[2]:PFlxOtherTDV[1] )   }
   ; SAC 1/27/19 - REDISTRIBUTE OthrHVAC PFlx Demand across SpcHt & SpcCl by fuel based on ratio of total Demand (tic #1053)
   "Set OthrHVAC_SpcHtFrac - W-Demand"       Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsW[4]:PFlxElecDemand[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsW[1]:PFlxElecDemand[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsW[2]:PFlxElecDemand[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsW[1]:PFlxElecDemand[1], 0 ) / 
                                                                                 (ValidOr( RunResultsW[1]:PFlxElecDemand[1], 0 ) + ValidOr( RunResultsW[2]:PFlxElecDemand[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Demand - W-SpcHt"		Proj:RunResultsW[1]:PFlxElecDemand[1]  = {   if (IfValidAnd( RunResultsW[4]:PFlxElecDemand[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsW[1]:PFlxElecDemand[1] + (RunResultsW[4]:PFlxElecDemand[1]     * OthrHVAC_SpcHtFrac)  endif  }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Demand - W-SpcCl"		Proj:RunResultsW[2]:PFlxElecDemand[1]  = {   if (IfValidAnd( RunResultsW[4]:PFlxElecDemand[1] != 0 )==0) then  UNCHANGED
                                                                                          else  RunResultsW[2]:PFlxElecDemand[1] + (RunResultsW[4]:PFlxElecDemand[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxElecTDV[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxTDV[1]	      = {	0  }
	"ZERO-OUT         - Demand - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxElecDemand[1]	= {	0  }
   ; SAC 1/27/19 - end of - redistribution of OthrHVAC W-PFlxTDV

  ; Water Heating
	"Calculate TDV - Elec   - W-WtrHt"		Proj:RunResultsW[5]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsW[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea) + 0.5) / 100
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - W-WtrHt"		Proj:RunResultsW[5]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsW[5]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - W-WtrHt"		Proj:RunResultsW[5]:PFlxOtherTDV			= {	if (LocalRef( RunResultsW[5]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "WHtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - W-WtrHt"		Proj:RunResultsW[5]:PFlxTDV[1]			= {	LocalRef( RunResultsW[5]:PFlxElecTDV[1] ) + LocalRef( RunResultsW[5]:PFlxNatGasTDV ) + LocalRef( RunResultsW[5]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - W-WtrHt"		Proj:RunResultsW[5]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsW[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / 3.412
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / 3.412  endif endif  }

  ; Inside Lighting
	"Calculate TDV - Elec   - W-InsLtg"		Proj:RunResultsW[6]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsW[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - W-InsLtg"		Proj:RunResultsW[6]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsW[6]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - W-InsLtg"		Proj:RunResultsW[6]:PFlxOtherTDV			= {	if (LocalRef( RunResultsW[6]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ILtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - W-InsLtg"		Proj:RunResultsW[6]:PFlxTDV[1]			= {	LocalRef( RunResultsW[6]:PFlxElecTDV[1] ) + LocalRef( RunResultsW[6]:PFlxNatGasTDV ) + LocalRef( RunResultsW[6]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - W-InsLtg"		Proj:RunResultsW[6]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsW[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Lit" ) / 3.412  endif  }

  ; Appliances & Cooking
	"Calculate TDV - Elec   - W-AppCkg"		Proj:RunResultsW[7]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsW[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - W-AppCkg"		Proj:RunResultsW[7]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsW[7]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - W-AppCkg"		Proj:RunResultsW[7]:PFlxOtherTDV			= {	if (LocalRef( RunResultsW[7]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "AppTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - W-AppCkg"		Proj:RunResultsW[7]:PFlxTDV[1]			= {	LocalRef( RunResultsW[7]:PFlxElecTDV[1] ) + LocalRef( RunResultsW[7]:PFlxNatGasTDV ) + LocalRef( RunResultsW[7]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - W-AppCkg"		Proj:RunResultsW[7]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsW[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / 3.412  endif  }

  ; Plug Loads
	"Calculate TDV - Elec   - W-Plugs"		Proj:RunResultsW[8]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsW[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - W-Plugs"		Proj:RunResultsW[8]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsW[8]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - W-Plugs"		Proj:RunResultsW[8]:PFlxOtherTDV			= {	if (LocalRef( RunResultsW[8]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "RcpTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - W-Plugs"		Proj:RunResultsW[8]:PFlxTDV[1]			= {	LocalRef( RunResultsW[8]:PFlxElecTDV[1] ) + LocalRef( RunResultsW[8]:PFlxNatGasTDV ) + LocalRef( RunResultsW[8]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - W-Plugs"		Proj:RunResultsW[8]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsW[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Rcp" ) / 3.412  endif  }

  ; Exterior
	"Calculate TDV - Elec   - W-Ext"			Proj:RunResultsW[9]:PFlxElecTDV[1]			= {	if (LocalRef( RunResultsW[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec",   "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - NatGas - W-Ext"			Proj:RunResultsW[9]:PFlxNatGasTDV		= {	if (LocalRef( RunResultsW[9]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 2, TDVMult_Fuel, TDVSecTbl_NGas, ClimateZone, TDVSecMult_Fuel, RunID, "MtrNatGas", "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - Other  - W-Ext"			Proj:RunResultsW[9]:PFlxOtherTDV			= {	if (LocalRef( RunResultsW[9]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "ExtTDV", TDVTableName, ((ClimateZone-1) * 3) + 3, TDVMult_Fuel, TDVSecTbl_Othr, ClimateZone, TDVSecMult_Fuel, RunID, "MtrOther",  "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate TDV - TOTAL  - W-Ext"			Proj:RunResultsW[9]:PFlxTDV[1]			= {	LocalRef( RunResultsW[9]:PFlxElecTDV[1] ) + LocalRef( RunResultsW[9]:PFlxNatGasTDV ) + LocalRef( RunResultsW[9]:PFlxOtherTDV )   }
	"Calculate Elec Demand  - W-Ext"			Proj:RunResultsW[9]:PFlxElecDemand[1]		= {	if (LocalRef( RunResultsW[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec",   "Ext" ) / 3.412  endif  }

  ; PV
	"Calculate TDV - Elec   - W-PV"			Proj:RunResultsW[13]:PFlxElecTDV[1]		= {	if (LocalRef( RunResultsW[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringTDVAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsW[14]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "BT" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "PVTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "PV" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - W-PV"			Proj:RunResultsW[13]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - W-PV"			Proj:RunResultsW[13]:PFlxOtherTDV		= {	0  }
	"Calculate TDV - TOTAL  - W-PV"			Proj:RunResultsW[13]:PFlxTDV[1]		= {	LocalRef( RunResultsW[13]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - W-PV"			Proj:RunResultsW[13]:PFlxElecDemand[1]	= {	if (LocalRef( RunResultsW[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec", "PV" ) / 3.412  endif  }

  ; Battery
	"Calculate TDV - Elec   - W-Battery"	Proj:RunResultsW[14]:PFlxElecTDV[1]		= {	if (LocalRef( RunResultsW[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringTDVAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsW[13]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringTDVAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "PV" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "BTTDV", TDVTableName, ((ClimateZone-1) * 3) + 1, TDVMult_Elec, TDVSecTbl_Elec, ClimateZone, TDVSecMult_Elec, RunID, "MtrElec", "BT" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate TDV - NatGas - W-Battery"	Proj:RunResultsW[14]:PFlxNatGasTDV		= {	0  }
	"Calculate TDV - Other  - W-Battery"	Proj:RunResultsW[14]:PFlxOtherTDV		= {	0  }
	"Calculate TDV - TOTAL  - W-Battery"	Proj:RunResultsW[14]:PFlxTDV[1]		= {	LocalRef( RunResultsW[14]:PFlxElecTDV[1] )   }
	"Calculate Elec Demand  - W-Battery"	Proj:RunResultsW[14]:PFlxElecDemand[1]	= {	if (LocalRef( RunResultsW[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  ApplyHourlyResultMultipliers( "none", "PeakDemandTable", 1, 1, "none", 0, 0, RunID, "MtrElec", "BT" ) / 3.412  endif  }

  ; Compliance Total
	"Calculate TDV - Elec   - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxElecTDV[1]			= {	RunResultsW[1]:PFlxElecTDV[1]    + RunResultsW[2]:PFlxElecTDV[1]    + RunResultsW[3]:PFlxElecTDV[1]    + RunResultsW[4]:PFlxElecTDV[1]    + RunResultsW[5]:PFlxElecTDV[1]     }
	"Calculate TDV - NatGas - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxNatGasTDV		= {	RunResultsW[1]:PFlxNatGasTDV  + RunResultsW[2]:PFlxNatGasTDV  + RunResultsW[3]:PFlxNatGasTDV  + RunResultsW[4]:PFlxNatGasTDV  + RunResultsW[5]:PFlxNatGasTDV   }
	"Calculate TDV - Other  - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxOtherTDV		= {	RunResultsW[1]:PFlxOtherTDV   + RunResultsW[2]:PFlxOtherTDV   + RunResultsW[3]:PFlxOtherTDV   + RunResultsW[4]:PFlxOtherTDV   + RunResultsW[5]:PFlxOtherTDV    }
	"Calculate TDV - TOTAL  - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxTDV[1]			= {	RunResultsW[1]:PFlxTDV[1]    + RunResultsW[2]:PFlxTDV[1]    + RunResultsW[3]:PFlxTDV[1]    + RunResultsW[4]:PFlxTDV[1]    + RunResultsW[5]:PFlxTDV[1]     }
	"Calculate Elec Demand  - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxElecDemand[1]		= {	RunResultsW[1]:PFlxElecDemand[1] + RunResultsW[2]:PFlxElecDemand[1] + RunResultsW[3]:PFlxElecDemand[1] + RunResultsW[4]:PFlxElecDemand[1] + RunResultsW[5]:PFlxElecDemand[1]  }
;   ; SAC 10/6/16 - 2019 updates
;	"Add in PV TDV - Elec   - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxElecTDV[1]	   = {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsW[11]:PFlxElecTDV[1]    + RunResultsW[13]:PFlxElecTDV[1]    + RunResultsW[14]:PFlxElecTDV[1]     endif   }
;	"Add in PV TDV - TOTAL  - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxTDV[1]  	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsW[11]:PFlxTDV[1]    + RunResultsW[13]:PFlxTDV[1]    + RunResultsW[14]:PFlxTDV[1]     endif   }
;	"Add in PV Elec Demand  - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxElecDemand[1]	= {	if (EnergyCodeYearNum < 2019) then  UNCHANGED
;                                                                                       else  RunResultsW[11]:PFlxElecDemand[1] + RunResultsW[13]:PFlxElecDemand[1] + RunResultsW[14]:PFlxElecDemand[1]  endif   }

  ; Total
	"Calculate TDV - Elec   - W-Total"		Proj:RunResultsW[10]:PFlxElecTDV[1]			= {	RunResultsW[11]:PFlxElecTDV[1]    + RunResultsW[6]:PFlxElecTDV[1]    + RunResultsW[7]:PFlxElecTDV[1]    + RunResultsW[8]:PFlxElecTDV[1]    + RunResultsW[9]:PFlxElecTDV[1]     }
	"Calculate TDV - NatGas - W-Total"		Proj:RunResultsW[10]:PFlxNatGasTDV		= {	RunResultsW[11]:PFlxNatGasTDV  + RunResultsW[6]:PFlxNatGasTDV  + RunResultsW[7]:PFlxNatGasTDV  + RunResultsW[8]:PFlxNatGasTDV  + RunResultsW[9]:PFlxNatGasTDV   }
	"Calculate TDV - Other  - W-Total"		Proj:RunResultsW[10]:PFlxOtherTDV		= {	RunResultsW[11]:PFlxOtherTDV   + RunResultsW[6]:PFlxOtherTDV   + RunResultsW[7]:PFlxOtherTDV   + RunResultsW[8]:PFlxOtherTDV   + RunResultsW[9]:PFlxOtherTDV    }
	"Calculate TDV - TOTAL  - W-Total"		Proj:RunResultsW[10]:PFlxTDV[1]			= {	RunResultsW[11]:PFlxTDV[1]    + RunResultsW[6]:PFlxTDV[1]    + RunResultsW[7]:PFlxTDV[1]    + RunResultsW[8]:PFlxTDV[1]    + RunResultsW[9]:PFlxTDV[1]     }
	"Calculate Elec Demand  - W-Total"		Proj:RunResultsW[10]:PFlxElecDemand[1]		= {	RunResultsW[11]:PFlxElecDemand[1] + RunResultsW[6]:PFlxElecDemand[1] + RunResultsW[7]:PFlxElecDemand[1] + RunResultsW[8]:PFlxElecDemand[1] + RunResultsW[9]:PFlxElecDemand[1]  }
   ; SAC 4/28/17 - shifted PV & Batt from CompTot to Tot for 2019
   ; SAC 4/28/17 - add in only Battery to Total for 2016
	"Add in PV TDV - Elec   - W-Total"	   Proj:RunResultsW[10]:PFlxElecTDV[1]	   = {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsW[10]:PFlxElecTDV[1]    + RunResultsW[14]:PFlxElecTDV[1]
                                                                                       else  RunResultsW[10]:PFlxElecTDV[1]    + RunResultsW[13]:PFlxElecTDV[1]    + RunResultsW[14]:PFlxElecTDV[1]     endif endif   }
	"Add in PV TDV - TOTAL  - W-Total"	   Proj:RunResultsW[10]:PFlxTDV[1]  	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsW[10]:PFlxTDV[1]    + RunResultsW[14]:PFlxTDV[1]
                                                                                       else  RunResultsW[10]:PFlxTDV[1]    + RunResultsW[13]:PFlxTDV[1]    + RunResultsW[14]:PFlxTDV[1]     endif endif   }
	"Add in PV Elec Demand  - W-Total"	   Proj:RunResultsW[10]:PFlxElecDemand[1]	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsW[10]:PFlxElecDemand[1] + RunResultsW[14]:PFlxElecDemand[1]
                                                                                       else  RunResultsW[10]:PFlxElecDemand[1] + RunResultsW[13]:PFlxElecDemand[1] + RunResultsW[14]:PFlxElecDemand[1]  endif endif   }
END


;************************************************************************* SAC 11/27/23
RULELIST "CARes_PropFlexSrcEnergyResults" 1 0 0 1
;*************************************************************************
  ; Space Heating (& heating fan)
	"Calculate Src - Elec   - SpcHt"		Proj:RunResults[1]:PFlxElecSrc[1]		= {	if (LocalRef( RunResults[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - SpcHt"		Proj:RunResults[1]:PFlxNatGasSrc			= {	if (LocalRef( RunResults[1]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - SpcHt"		Proj:RunResults[1]:PFlxOtherSrc			= {	if (LocalRef( RunResults[1]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - SpcHt"		Proj:RunResults[1]:PFlxSrc[1]			   = {	LocalRef( RunResults[1]:PFlxElecSrc[1] ) + LocalRef( RunResults[1]:PFlxNatGasSrc ) + LocalRef( RunResults[1]:PFlxOtherSrc )   }

  ; Space Cooling (& cooling fan)
	"Calculate Src - Elec   - SpcCl"		Proj:RunResults[2]:PFlxElecSrc[1]		= {	if (LocalRef( RunResults[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - SpcCl"		Proj:RunResults[2]:PFlxNatGasSrc			= {	if (LocalRef( RunResults[2]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - SpcCl"		Proj:RunResults[2]:PFlxOtherSrc			= {	if (LocalRef( RunResults[2]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - SpcCl"		Proj:RunResults[2]:PFlxSrc[1]			   = {	LocalRef( RunResults[2]:PFlxElecSrc[1] ) + LocalRef( RunResults[2]:PFlxNatGasSrc ) + LocalRef( RunResults[2]:PFlxOtherSrc )   }

  ; IAQ Ventilation Fans
	"Calculate Src - Elec   - IAQVent"	Proj:RunResults[3]:PFlxElecSrc[1]		= {	if (LocalRef( RunResults[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "FanV" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - IAQVent"	Proj:RunResults[3]:PFlxNatGasSrc			= {	0  }
	"Calculate Src - Other  - IAQVent"	Proj:RunResults[3]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - IAQVent"	Proj:RunResults[3]:PFlxSrc[1]			   = {	LocalRef( RunResults[3]:PFlxElecSrc[1] )   }

  ; Other HVAC (aux & misc fans)
	"Calculate Src - Elec   - OthrHVAC"	Proj:RunResults[4]:PFlxElecSrc[1]		= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "User1" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - OthrHVAC"	Proj:RunResults[4]:PFlxNatGasSrc			= {	0  }
	"Calculate Src - Other  - OthrHVAC"	Proj:RunResults[4]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - OthrHVAC"	Proj:RunResults[4]:PFlxSrc[1]		      = {	RunResults[4]:PFlxElecSrc[1]  }

   ; SAC 1/27/19 - REDISTRIBUTE OthrHVAC PFlx Src use across SpcHt & SpcCl by fuel based on ratio of total Src (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - PFlxSrc"     Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResults[4]:PFlxSrc[1] != 0 )==0) then  0
                                                                        else if (IfValidAnd( RunResults[1]:PFlxSrc[1] == 0 ) .AND.
                                                                                 IfValidAnd( RunResults[2]:PFlxSrc[1] == 0 )) then  0.5
                                                                        else   ValidOr( RunResults[1]:PFlxSrc[1], 0 ) / 
                                                                              (ValidOr( RunResults[1]:PFlxSrc[1], 0 ) + ValidOr( RunResults[2]:PFlxSrc[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - SpcHt"		Proj:RunResults[1]:PFlxElecSrc[1]	= {   if (IfValidAnd( RunResults[4]:PFlxElecSrc[1] != 0 )==0) then  UNCHANGED
                                                                                    else  RunResults[1]:PFlxElecSrc[1] + (RunResults[4]:PFlxElecSrc[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcHt"		Proj:RunResults[1]:PFlxSrc[1]	      = {	LocalRef( RunResults[1]:PFlxElecSrc[1] ) + LocalRef( RunResults[1]:PFlxNatGasSrc[1] ) + LocalRef( RunResults[1]:PFlxOtherSrc[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - SpcCl"		Proj:RunResults[2]:PFlxElecSrc[1]	= {   if (IfValidAnd( RunResults[4]:PFlxElecSrc[1] != 0 )==0) then  UNCHANGED
                                                                                    else  RunResults[2]:PFlxElecSrc[1] + (RunResults[4]:PFlxElecSrc[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - SpcCl"		Proj:RunResults[2]:PFlxSrc[1]	      = {	LocalRef( RunResults[2]:PFlxElecSrc[1] ) + LocalRef( RunResults[2]:PFlxNatGasSrc[1] ) + LocalRef( RunResults[2]:PFlxOtherSrc[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - OthrHVAC"	Proj:RunResults[4]:PFlxElecSrc[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - OthrHVAC"	Proj:RunResults[4]:PFlxSrc[1]	         = {	0  }

  ; Water Heating
	"Calculate Src - Elec   - WtrHt"		Proj:RunResults[5]:PFlxElecSrc[1]		= {	if (LocalRef( RunResults[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else if (CSEinclDHWMFL_EU)
			 			  																						then  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea) + 0.5) / 100
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - WtrHt"		Proj:RunResults[5]:PFlxNatGasSrc			= {	if (LocalRef( RunResults[5]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - WtrHt"		Proj:RunResults[5]:PFlxOtherSrc			= {	if (LocalRef( RunResults[5]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - WtrHt"		Proj:RunResults[5]:PFlxSrc[1]			   = {	LocalRef( RunResults[5]:PFlxElecSrc[1] ) + LocalRef( RunResults[5]:PFlxNatGasSrc ) + LocalRef( RunResults[5]:PFlxOtherSrc )   }

  ; Inside Lighting
	"Calculate Src - Elec   - InsLtg"	Proj:RunResults[6]:PFlxElecSrc[1]		= {	if (LocalRef( RunResults[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - InsLtg"	Proj:RunResults[6]:PFlxNatGasSrc			= {	if (LocalRef( RunResults[6]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - InsLtg"	Proj:RunResults[6]:PFlxOtherSrc			= {	if (LocalRef( RunResults[6]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - InsLtg"	Proj:RunResults[6]:PFlxSrc[1]			   = {	LocalRef( RunResults[6]:PFlxElecSrc[1] ) + LocalRef( RunResults[6]:PFlxNatGasSrc ) + LocalRef( RunResults[6]:PFlxOtherSrc )   }

  ; Appliances & Cooking
	"Calculate Src - Elec   - AppCkg"	Proj:RunResults[7]:PFlxElecSrc[1]		= {	if (LocalRef( RunResults[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - AppCkg"	Proj:RunResults[7]:PFlxNatGasSrc			= {	if (LocalRef( RunResults[7]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - AppCkg"	Proj:RunResults[7]:PFlxOtherSrc			= {	if (LocalRef( RunResults[7]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - AppCkg"	Proj:RunResults[7]:PFlxSrc[1]			   = {	LocalRef( RunResults[7]:PFlxElecSrc[1] ) + LocalRef( RunResults[7]:PFlxNatGasSrc ) + LocalRef( RunResults[7]:PFlxOtherSrc )   }

  ; Plug Loads
	"Calculate Src - Elec   - Plugs"		Proj:RunResults[8]:PFlxElecSrc[1]		= {	if (LocalRef( RunResults[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - Plugs"		Proj:RunResults[8]:PFlxNatGasSrc			= {	if (LocalRef( RunResults[8]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - Plugs"		Proj:RunResults[8]:PFlxOtherSrc			= {	if (LocalRef( RunResults[8]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - Plugs"		Proj:RunResults[8]:PFlxSrc[1]			   = {	LocalRef( RunResults[8]:PFlxElecSrc[1] ) + LocalRef( RunResults[8]:PFlxNatGasSrc ) + LocalRef( RunResults[8]:PFlxOtherSrc )   }

  ; Exterior
	"Calculate Src - Elec   - Ext"		Proj:RunResults[9]:PFlxElecSrc[1]		= {	if (LocalRef( RunResults[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - Ext"		Proj:RunResults[9]:PFlxNatGasSrc			= {	if (LocalRef( RunResults[9]:PFlxNatGasEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - Ext"		Proj:RunResults[9]:PFlxOtherSrc			= {	if (LocalRef( RunResults[9]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																						else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - Ext"		Proj:RunResults[9]:PFlxSrc[1]			   = {	LocalRef( RunResults[9]:PFlxElecSrc[1] ) + LocalRef( RunResults[9]:PFlxNatGasSrc ) + LocalRef( RunResults[9]:PFlxOtherSrc )   }

  ; PV
	"Calculate Src - Elec   - PV"			Proj:RunResults[13]:PFlxElecSrc[1]		= {	if (LocalRef( RunResults[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringSrcAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResults[14]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "BT" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - PV"			Proj:RunResults[13]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - PV"			Proj:RunResults[13]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - PV"			Proj:RunResults[13]:PFlxSrc[1]		   = {	LocalRef( RunResults[13]:PFlxElecSrc[1] )   }

  ; Battery
	"Calculate Src - Elec   - Battery"	Proj:RunResults[14]:PFlxElecSrc[1]		= {	if (LocalRef( RunResults[14]:PFlxElecEnergy[1]		) = 0) then  0
		else if (IfValidAnd( NetEnergyMeteringSrcAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResults[13]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "PV" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - Battery"	Proj:RunResults[14]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - Battery"	Proj:RunResults[14]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - Battery"	Proj:RunResults[14]:PFlxSrc[1]		   = {	LocalRef( RunResults[14]:PFlxElecSrc[1] )   }

  ; Compliance Total
	"Calculate Src - Elec   - Comp Ttl"	Proj:RunResults[11]:PFlxElecSrc[1]		= {	RunResults[1]:PFlxElecSrc[1]    + RunResults[2]:PFlxElecSrc[1]    + RunResults[3]:PFlxElecSrc[1]    + RunResults[4]:PFlxElecSrc[1]    + RunResults[5]:PFlxElecSrc[1]     }
	"Calculate Src - NatGas - Comp Ttl"	Proj:RunResults[11]:PFlxNatGasSrc		= {	RunResults[1]:PFlxNatGasSrc     + RunResults[2]:PFlxNatGasSrc     + RunResults[3]:PFlxNatGasSrc     + RunResults[4]:PFlxNatGasSrc     + RunResults[5]:PFlxNatGasSrc      }
	"Calculate Src - Other  - Comp Ttl"	Proj:RunResults[11]:PFlxOtherSrc			= {	RunResults[1]:PFlxOtherSrc      + RunResults[2]:PFlxOtherSrc      + RunResults[3]:PFlxOtherSrc      + RunResults[4]:PFlxOtherSrc      + RunResults[5]:PFlxOtherSrc       }
	"Calculate Src - TOTAL  - Comp Ttl"	Proj:RunResults[11]:PFlxSrc[1]		   = {	RunResults[1]:PFlxSrc[1]    + RunResults[2]:PFlxSrc[1]    + RunResults[3]:PFlxSrc[1]    + RunResults[4]:PFlxSrc[1]    + RunResults[5]:PFlxSrc[1]     }

  ; Total
	"Calculate Src - Elec   - Total"		Proj:RunResults[10]:PFlxElecSrc[1]		= {	RunResults[11]:PFlxElecSrc[1]    + RunResults[6]:PFlxElecSrc[1]    + RunResults[7]:PFlxElecSrc[1]    + RunResults[8]:PFlxElecSrc[1]    + RunResults[9]:PFlxElecSrc[1]     }
	"Calculate Src - NatGas - Total"		Proj:RunResults[10]:PFlxNatGasSrc		= {	RunResults[11]:PFlxNatGasSrc     + RunResults[6]:PFlxNatGasSrc     + RunResults[7]:PFlxNatGasSrc     + RunResults[8]:PFlxNatGasSrc     + RunResults[9]:PFlxNatGasSrc      }
	"Calculate Src - Other  - Total"		Proj:RunResults[10]:PFlxOtherSrc			= {	RunResults[11]:PFlxOtherSrc      + RunResults[6]:PFlxOtherSrc      + RunResults[7]:PFlxOtherSrc      + RunResults[8]:PFlxOtherSrc      + RunResults[9]:PFlxOtherSrc       }
	"Calculate Src - TOTAL  - Total"		Proj:RunResults[10]:PFlxSrc[1]		   = {	RunResults[11]:PFlxSrc[1]    + RunResults[6]:PFlxSrc[1]    + RunResults[7]:PFlxSrc[1]    + RunResults[8]:PFlxSrc[1]    + RunResults[9]:PFlxSrc[1]     }

	"Add in PV Src - Elec   - Total"	   Proj:RunResults[10]:PFlxElecSrc[1]	   = {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                    else if (EnergyCodeYearNum < 2019) 
                                                                                    then  RunResults[10]:PFlxElecSrc[1]    + RunResults[14]:PFlxElecSrc[1]
                                                                                    else  RunResults[10]:PFlxElecSrc[1]    + RunResults[13]:PFlxElecSrc[1]    + RunResults[14]:PFlxElecSrc[1]     endif endif   }
	"Add in PV Src - TOTAL  - Total"	   Proj:RunResults[10]:PFlxSrc[1]  	      = {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                    else if (EnergyCodeYearNum < 2019) 
                                                                                    then  RunResults[10]:PFlxSrc[1]    + RunResults[14]:PFlxSrc[1]
                                                                                    else  RunResults[10]:PFlxSrc[1]    + RunResults[13]:PFlxSrc[1]    + RunResults[14]:PFlxSrc[1]     endif endif   }
END

;************************************************************************* SAC 11/27/23
RULELIST "CARes_PropFlexSrcEnergyResults_N" 1 0 0 1
;*************************************************************************
  ; Space Heating (& heating fan)
	"Calculate Src - Elec   - N-SpcHt"		Proj:RunResultsN[1]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsN[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - N-SpcHt"		Proj:RunResultsN[1]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsN[1]:PFlxNatGasEnergy[1]	) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - N-SpcHt"		Proj:RunResultsN[1]:PFlxOtherSrc			= {	if (LocalRef( RunResultsN[1]:PFlxOtherEnergy[1]		) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - N-SpcHt"		Proj:RunResultsN[1]:PFlxSrc[1]			= {	LocalRef( RunResultsN[1]:PFlxElecSrc[1] ) + LocalRef( RunResultsN[1]:PFlxNatGasSrc ) + LocalRef( RunResultsN[1]:PFlxOtherSrc )   }

  ; Space Cooling (& cooling fan)
	"Calculate Src - Elec   - N-SpcCl"		Proj:RunResultsN[2]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsN[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - N-SpcCl"		Proj:RunResultsN[2]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsN[2]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - N-SpcCl"		Proj:RunResultsN[2]:PFlxOtherSrc			= {	if (LocalRef( RunResultsN[2]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - N-SpcCl"		Proj:RunResultsN[2]:PFlxSrc[1]			= {	LocalRef( RunResultsN[2]:PFlxElecSrc[1] ) + LocalRef( RunResultsN[2]:PFlxNatGasSrc ) + LocalRef( RunResultsN[2]:PFlxOtherSrc )   }

  ; IAQ Ventilation Fans
	"Calculate Src - Elec   - N-IAQVent"	Proj:RunResultsN[3]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsN[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "FanV" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - N-IAQVent"	Proj:RunResultsN[3]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - N-IAQVent"	Proj:RunResultsN[3]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - N-IAQVent"	Proj:RunResultsN[3]:PFlxSrc[1]			= {	LocalRef( RunResultsN[3]:PFlxElecSrc[1] )   }

  ; Other HVAC (aux & misc fans)
	"Calculate Src - Elec   - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxElecSrc[1]		= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "User1" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxSrc[1]		   = {	RunResultsN[4]:PFlxElecSrc[1]  }

   ; SAC 1/27/19 - REDISTRIBUTE OthrHVAC N-PFlx Src use across SpcHt & SpcCl by fuel based on ratio of total Src (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - N-PFlxSrc"      Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsN[4]:PFlxSrc[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsN[1]:PFlxSrc[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsN[2]:PFlxSrc[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsN[1]:PFlxSrc[1], 0 ) / 
                                                                                 (ValidOr( RunResultsN[1]:PFlxSrc[1], 0 ) + ValidOr( RunResultsN[2]:PFlxSrc[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - N-SpcHt"		Proj:RunResultsN[1]:PFlxElecSrc[1]	= {   if (IfValidAnd( RunResultsN[4]:PFlxElecSrc[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsN[1]:PFlxElecSrc[1] + (RunResultsN[4]:PFlxElecSrc[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcHt"		Proj:RunResultsN[1]:PFlxSrc[1]	   = {	LocalRef( RunResultsN[1]:PFlxElecSrc[1] ) + LocalRef( RunResultsN[1]:PFlxNatGasSrc[1] ) + LocalRef( RunResultsN[1]:PFlxOtherSrc[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - N-SpcCl"		Proj:RunResultsN[2]:PFlxElecSrc[1]	= {   if (IfValidAnd( RunResultsN[4]:PFlxElecSrc[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsN[2]:PFlxElecSrc[1] + (RunResultsN[4]:PFlxElecSrc[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - N-SpcCl"		Proj:RunResultsN[2]:PFlxSrc[1]	   = {	LocalRef( RunResultsN[2]:PFlxElecSrc[1] ) + LocalRef( RunResultsN[2]:PFlxNatGasSrc[1] ) + LocalRef( RunResultsN[2]:PFlxOtherSrc[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxElecSrc[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - N-OthrHVAC"	Proj:RunResultsN[4]:PFlxSrc[1]	      = {	0  }

  ; Water Heating
	"Calculate Src - Elec   - N-WtrHt"		Proj:RunResultsN[5]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsN[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea) + 0.5) / 100
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - N-WtrHt"		Proj:RunResultsN[5]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsN[5]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - N-WtrHt"		Proj:RunResultsN[5]:PFlxOtherSrc			= {	if (LocalRef( RunResultsN[5]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - N-WtrHt"		Proj:RunResultsN[5]:PFlxSrc[1]			= {	LocalRef( RunResultsN[5]:PFlxElecSrc[1] ) + LocalRef( RunResultsN[5]:PFlxNatGasSrc ) + LocalRef( RunResultsN[5]:PFlxOtherSrc )   }

  ; Inside Lighting
	"Calculate Src - Elec   - N-InsLtg"		Proj:RunResultsN[6]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsN[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - N-InsLtg"		Proj:RunResultsN[6]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsN[6]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - N-InsLtg"		Proj:RunResultsN[6]:PFlxOtherSrc			= {	if (LocalRef( RunResultsN[6]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - N-InsLtg"		Proj:RunResultsN[6]:PFlxSrc[1]			= {	LocalRef( RunResultsN[6]:PFlxElecSrc[1] ) + LocalRef( RunResultsN[6]:PFlxNatGasSrc ) + LocalRef( RunResultsN[6]:PFlxOtherSrc )   }

  ; Appliances & Cooking
	"Calculate Src - Elec   - N-AppCkg"		Proj:RunResultsN[7]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsN[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - N-AppCkg"		Proj:RunResultsN[7]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsN[7]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - N-AppCkg"		Proj:RunResultsN[7]:PFlxOtherSrc			= {	if (LocalRef( RunResultsN[7]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - N-AppCkg"		Proj:RunResultsN[7]:PFlxSrc[1]			= {	LocalRef( RunResultsN[7]:PFlxElecSrc[1] ) + LocalRef( RunResultsN[7]:PFlxNatGasSrc ) + LocalRef( RunResultsN[7]:PFlxOtherSrc )   }

  ; Plug Loads
	"Calculate Src - Elec   - N-Plugs"		Proj:RunResultsN[8]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsN[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - N-Plugs"		Proj:RunResultsN[8]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsN[8]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - N-Plugs"		Proj:RunResultsN[8]:PFlxOtherSrc			= {	if (LocalRef( RunResultsN[8]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - N-Plugs"		Proj:RunResultsN[8]:PFlxSrc[1]			= {	LocalRef( RunResultsN[8]:PFlxElecSrc[1] ) + LocalRef( RunResultsN[8]:PFlxNatGasSrc ) + LocalRef( RunResultsN[8]:PFlxOtherSrc )   }

  ; Exterior
	"Calculate Src - Elec   - N-Ext"			Proj:RunResultsN[9]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsN[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - N-Ext"			Proj:RunResultsN[9]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsN[9]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - N-Ext"			Proj:RunResultsN[9]:PFlxOtherSrc			= {	if (LocalRef( RunResultsN[9]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - N-Ext"			Proj:RunResultsN[9]:PFlxSrc[1]			= {	LocalRef( RunResultsN[9]:PFlxElecSrc[1] ) + LocalRef( RunResultsN[9]:PFlxNatGasSrc ) + LocalRef( RunResultsN[9]:PFlxOtherSrc )   }

  ; PV
	"Calculate Src - Elec   - N-PV"			Proj:RunResultsN[13]:PFlxElecSrc[1]		= {	if (LocalRef( RunResultsN[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringSrcAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsN[14]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "BT" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - N-PV"			Proj:RunResultsN[13]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - N-PV"			Proj:RunResultsN[13]:PFlxOtherSrc		= {	0  }
	"Calculate Src - TOTAL  - N-PV"			Proj:RunResultsN[13]:PFlxSrc[1]		= {	LocalRef( RunResultsN[13]:PFlxElecSrc[1] )   }

  ; Battery
	"Calculate Src - Elec   - N-Battery"	Proj:RunResultsN[14]:PFlxElecSrc[1]		= {	if (LocalRef( RunResultsN[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringSrcAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsN[13]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "PV" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - N-Battery"	Proj:RunResultsN[14]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - N-Battery"	Proj:RunResultsN[14]:PFlxOtherSrc		= {	0  }
	"Calculate Src - TOTAL  - N-Battery"	Proj:RunResultsN[14]:PFlxSrc[1]		= {	LocalRef( RunResultsN[14]:PFlxElecSrc[1] )   }

  ; Compliance Total
	"Calculate Src - Elec   - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxElecSrc[1]		= {	RunResultsN[1]:PFlxElecSrc[1]    + RunResultsN[2]:PFlxElecSrc[1]    + RunResultsN[3]:PFlxElecSrc[1]    + RunResultsN[4]:PFlxElecSrc[1]    + RunResultsN[5]:PFlxElecSrc[1]     }
	"Calculate Src - NatGas - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxNatGasSrc		= {	RunResultsN[1]:PFlxNatGasSrc     + RunResultsN[2]:PFlxNatGasSrc     + RunResultsN[3]:PFlxNatGasSrc     + RunResultsN[4]:PFlxNatGasSrc     + RunResultsN[5]:PFlxNatGasSrc      }
	"Calculate Src - Other  - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxOtherSrc		= {	RunResultsN[1]:PFlxOtherSrc      + RunResultsN[2]:PFlxOtherSrc      + RunResultsN[3]:PFlxOtherSrc      + RunResultsN[4]:PFlxOtherSrc      + RunResultsN[5]:PFlxOtherSrc       }
	"Calculate Src - TOTAL  - N-Comp Ttl"	Proj:RunResultsN[11]:PFlxSrc[1]		= {	RunResultsN[1]:PFlxSrc[1]    + RunResultsN[2]:PFlxSrc[1]    + RunResultsN[3]:PFlxSrc[1]    + RunResultsN[4]:PFlxSrc[1]    + RunResultsN[5]:PFlxSrc[1]     }

  ; Total
	"Calculate Src - Elec   - N-Total"		Proj:RunResultsN[10]:PFlxElecSrc[1]		= {	RunResultsN[11]:PFlxElecSrc[1]    + RunResultsN[6]:PFlxElecSrc[1]    + RunResultsN[7]:PFlxElecSrc[1]    + RunResultsN[8]:PFlxElecSrc[1]    + RunResultsN[9]:PFlxElecSrc[1]     }
	"Calculate Src - NatGas - N-Total"		Proj:RunResultsN[10]:PFlxNatGasSrc		= {	RunResultsN[11]:PFlxNatGasSrc  + RunResultsN[6]:PFlxNatGasSrc  + RunResultsN[7]:PFlxNatGasSrc  + RunResultsN[8]:PFlxNatGasSrc  + RunResultsN[9]:PFlxNatGasSrc   }
	"Calculate Src - Other  - N-Total"		Proj:RunResultsN[10]:PFlxOtherSrc		= {	RunResultsN[11]:PFlxOtherSrc   + RunResultsN[6]:PFlxOtherSrc   + RunResultsN[7]:PFlxOtherSrc   + RunResultsN[8]:PFlxOtherSrc   + RunResultsN[9]:PFlxOtherSrc    }
	"Calculate Src - TOTAL  - N-Total"		Proj:RunResultsN[10]:PFlxSrc[1]		= {	RunResultsN[11]:PFlxSrc[1]    + RunResultsN[6]:PFlxSrc[1]    + RunResultsN[7]:PFlxSrc[1]    + RunResultsN[8]:PFlxSrc[1]    + RunResultsN[9]:PFlxSrc[1]     }

	"Add in PV Src - Elec   - N-Total"	   Proj:RunResultsN[10]:PFlxElecSrc[1]	   = {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsN[10]:PFlxElecSrc[1]    + RunResultsN[14]:PFlxElecSrc[1]
                                                                                       else  RunResultsN[10]:PFlxElecSrc[1]    + RunResultsN[13]:PFlxElecSrc[1]    + RunResultsN[14]:PFlxElecSrc[1]     endif endif   }
	"Add in PV Src - TOTAL  - N-Total"	   Proj:RunResultsN[10]:PFlxSrc[1]  	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsN[10]:PFlxSrc[1]    + RunResultsN[14]:PFlxSrc[1]
                                                                                       else  RunResultsN[10]:PFlxSrc[1]    + RunResultsN[13]:PFlxSrc[1]    + RunResultsN[14]:PFlxSrc[1]     endif endif   }
END

;************************************************************************* SAC 11/27/23
RULELIST "CARes_PropFlexSrcEnergyResults_E" 1 0 0 1
;*************************************************************************
  ; Space Heating (& heating fan)
	"Calculate Src - Elec   - E-SpcHt"		Proj:RunResultsE[1]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsE[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - E-SpcHt"		Proj:RunResultsE[1]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsE[1]:PFlxNatGasEnergy[1]	) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - E-SpcHt"		Proj:RunResultsE[1]:PFlxOtherSrc			= {	if (LocalRef( RunResultsE[1]:PFlxOtherEnergy[1]		) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - E-SpcHt"		Proj:RunResultsE[1]:PFlxSrc[1]			= {	LocalRef( RunResultsE[1]:PFlxElecSrc[1] ) + LocalRef( RunResultsE[1]:PFlxNatGasSrc ) + LocalRef( RunResultsE[1]:PFlxOtherSrc )   }

  ; Space Cooling (& cooling fan)
	"Calculate Src - Elec   - E-SpcCl"		Proj:RunResultsE[2]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsE[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - E-SpcCl"		Proj:RunResultsE[2]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsE[2]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - E-SpcCl"		Proj:RunResultsE[2]:PFlxOtherSrc			= {	if (LocalRef( RunResultsE[2]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - E-SpcCl"		Proj:RunResultsE[2]:PFlxSrc[1]			= {	LocalRef( RunResultsE[2]:PFlxElecSrc[1] ) + LocalRef( RunResultsE[2]:PFlxNatGasSrc ) + LocalRef( RunResultsE[2]:PFlxOtherSrc )   }

  ; IAQ Ventilation Fans
	"Calculate Src - Elec   - E-IAQVent"	Proj:RunResultsE[3]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsE[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "FanV" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - E-IAQVent"	Proj:RunResultsE[3]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - E-IAQVent"	Proj:RunResultsE[3]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - E-IAQVent"	Proj:RunResultsE[3]:PFlxSrc[1]			= {	LocalRef( RunResultsE[3]:PFlxElecSrc[1] )   }

  ; Other HVAC (aux & misc fans)
	"Calculate Src - Elec   - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxElecSrc[1]		= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "User1" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxSrc[1]		   = {	RunResultsE[4]:PFlxElecSrc[1]  }

   ; SAC 1/27/19 - REDISTRIBUTE OthrHVAC E-PFlx Src use across SpcHt & SpcCl by fuel based on ratio of total Src (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - E-PFlxSrc"      Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsE[4]:PFlxSrc[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsE[1]:PFlxSrc[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsE[2]:PFlxSrc[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsE[1]:PFlxSrc[1], 0 ) / 
                                                                                 (ValidOr( RunResultsE[1]:PFlxSrc[1], 0 ) + ValidOr( RunResultsE[2]:PFlxSrc[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - E-SpcHt"		Proj:RunResultsE[1]:PFlxElecSrc[1]	= {   if (IfValidAnd( RunResultsE[4]:PFlxElecSrc[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsE[1]:PFlxElecSrc[1] + (RunResultsE[4]:PFlxElecSrc[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - E-SpcHt"		Proj:RunResultsE[1]:PFlxSrc[1]	   = {	LocalRef( RunResultsE[1]:PFlxElecSrc[1] ) + LocalRef( RunResultsE[1]:PFlxNatGasSrc[1] ) + LocalRef( RunResultsE[1]:PFlxOtherSrc[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - E-SpcCl"		Proj:RunResultsE[2]:PFlxElecSrc[1]	= {   if (IfValidAnd( RunResultsE[4]:PFlxElecSrc[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsE[2]:PFlxElecSrc[1] + (RunResultsE[4]:PFlxElecSrc[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - E-SpcCl"		Proj:RunResultsE[2]:PFlxSrc[1]	   = {	LocalRef( RunResultsE[2]:PFlxElecSrc[1] ) + LocalRef( RunResultsE[2]:PFlxNatGasSrc[1] ) + LocalRef( RunResultsE[2]:PFlxOtherSrc[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxElecSrc[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - E-OthrHVAC"	Proj:RunResultsE[4]:PFlxSrc[1]	      = {	0  }

  ; Water Heating
	"Calculate Src - Elec   - E-WtrHt"		Proj:RunResultsE[5]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsE[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea) + 0.5) / 100
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - E-WtrHt"		Proj:RunResultsE[5]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsE[5]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - E-WtrHt"		Proj:RunResultsE[5]:PFlxOtherSrc			= {	if (LocalRef( RunResultsE[5]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - E-WtrHt"		Proj:RunResultsE[5]:PFlxSrc[1]			= {	LocalRef( RunResultsE[5]:PFlxElecSrc[1] ) + LocalRef( RunResultsE[5]:PFlxNatGasSrc ) + LocalRef( RunResultsE[5]:PFlxOtherSrc )   }

  ; Inside Lighting
	"Calculate Src - Elec   - E-InsLtg"		Proj:RunResultsE[6]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsE[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - E-InsLtg"		Proj:RunResultsE[6]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsE[6]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - E-InsLtg"		Proj:RunResultsE[6]:PFlxOtherSrc			= {	if (LocalRef( RunResultsE[6]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - E-InsLtg"		Proj:RunResultsE[6]:PFlxSrc[1]			= {	LocalRef( RunResultsE[6]:PFlxElecSrc[1] ) + LocalRef( RunResultsE[6]:PFlxNatGasSrc ) + LocalRef( RunResultsE[6]:PFlxOtherSrc )   }

  ; Appliances & Cooking
	"Calculate Src - Elec   - E-AppCkg"		Proj:RunResultsE[7]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsE[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - E-AppCkg"		Proj:RunResultsE[7]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsE[7]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - E-AppCkg"		Proj:RunResultsE[7]:PFlxOtherSrc			= {	if (LocalRef( RunResultsE[7]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - E-AppCkg"		Proj:RunResultsE[7]:PFlxSrc[1]			= {	LocalRef( RunResultsE[7]:PFlxElecSrc[1] ) + LocalRef( RunResultsE[7]:PFlxNatGasSrc ) + LocalRef( RunResultsE[7]:PFlxOtherSrc )   }

  ; Plug Loads
	"Calculate Src - Elec   - E-Plugs"		Proj:RunResultsE[8]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsE[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - E-Plugs"		Proj:RunResultsE[8]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsE[8]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - E-Plugs"		Proj:RunResultsE[8]:PFlxOtherSrc			= {	if (LocalRef( RunResultsE[8]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - E-Plugs"		Proj:RunResultsE[8]:PFlxSrc[1]			= {	LocalRef( RunResultsE[8]:PFlxElecSrc[1] ) + LocalRef( RunResultsE[8]:PFlxNatGasSrc ) + LocalRef( RunResultsE[8]:PFlxOtherSrc )   }

  ; Exterior
	"Calculate Src - Elec   - E-Ext"			Proj:RunResultsE[9]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsE[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - E-Ext"			Proj:RunResultsE[9]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsE[9]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - E-Ext"			Proj:RunResultsE[9]:PFlxOtherSrc			= {	if (LocalRef( RunResultsE[9]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - E-Ext"			Proj:RunResultsE[9]:PFlxSrc[1]			= {	LocalRef( RunResultsE[9]:PFlxElecSrc[1] ) + LocalRef( RunResultsE[9]:PFlxNatGasSrc ) + LocalRef( RunResultsE[9]:PFlxOtherSrc )   }

  ; PV
	"Calculate Src - Elec   - E-PV"			Proj:RunResultsE[13]:PFlxElecSrc[1]		= {	if (LocalRef( RunResultsE[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringSrcAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsE[14]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "BT" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - E-PV"			Proj:RunResultsE[13]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - E-PV"			Proj:RunResultsE[13]:PFlxOtherSrc		= {	0  }
	"Calculate Src - TOTAL  - E-PV"			Proj:RunResultsE[13]:PFlxSrc[1]		= {	LocalRef( RunResultsE[13]:PFlxElecSrc[1] )   }

  ; Battery
	"Calculate Src - Elec   - E-Battery"	Proj:RunResultsE[14]:PFlxElecSrc[1]		= {	if (LocalRef( RunResultsE[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringSrcAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsE[13]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "PV" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - E-Battery"	Proj:RunResultsE[14]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - E-Battery"	Proj:RunResultsE[14]:PFlxOtherSrc		= {	0  }
	"Calculate Src - TOTAL  - E-Battery"	Proj:RunResultsE[14]:PFlxSrc[1]		= {	LocalRef( RunResultsE[14]:PFlxElecSrc[1] )   }

  ; Compliance Total
	"Calculate Src - Elec   - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxElecSrc[1]			= {	RunResultsE[1]:PFlxElecSrc[1]    + RunResultsE[2]:PFlxElecSrc[1]    + RunResultsE[3]:PFlxElecSrc[1]    + RunResultsE[4]:PFlxElecSrc[1]    + RunResultsE[5]:PFlxElecSrc[1]     }
	"Calculate Src - NatGas - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxNatGasSrc		= {	RunResultsE[1]:PFlxNatGasSrc  + RunResultsE[2]:PFlxNatGasSrc  + RunResultsE[3]:PFlxNatGasSrc  + RunResultsE[4]:PFlxNatGasSrc  + RunResultsE[5]:PFlxNatGasSrc   }
	"Calculate Src - Other  - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxOtherSrc		= {	RunResultsE[1]:PFlxOtherSrc   + RunResultsE[2]:PFlxOtherSrc   + RunResultsE[3]:PFlxOtherSrc   + RunResultsE[4]:PFlxOtherSrc   + RunResultsE[5]:PFlxOtherSrc    }
	"Calculate Src - TOTAL  - E-Comp Ttl"	Proj:RunResultsE[11]:PFlxSrc[1]			= {	RunResultsE[1]:PFlxSrc[1]    + RunResultsE[2]:PFlxSrc[1]    + RunResultsE[3]:PFlxSrc[1]    + RunResultsE[4]:PFlxSrc[1]    + RunResultsE[5]:PFlxSrc[1]     }

  ; Total
	"Calculate Src - Elec   - E-Total"		Proj:RunResultsE[10]:PFlxElecSrc[1]			= {	RunResultsE[11]:PFlxElecSrc[1]    + RunResultsE[6]:PFlxElecSrc[1]    + RunResultsE[7]:PFlxElecSrc[1]    + RunResultsE[8]:PFlxElecSrc[1]    + RunResultsE[9]:PFlxElecSrc[1]     }
	"Calculate Src - NatGas - E-Total"		Proj:RunResultsE[10]:PFlxNatGasSrc		= {	RunResultsE[11]:PFlxNatGasSrc  + RunResultsE[6]:PFlxNatGasSrc  + RunResultsE[7]:PFlxNatGasSrc  + RunResultsE[8]:PFlxNatGasSrc  + RunResultsE[9]:PFlxNatGasSrc   }
	"Calculate Src - Other  - E-Total"		Proj:RunResultsE[10]:PFlxOtherSrc		= {	RunResultsE[11]:PFlxOtherSrc   + RunResultsE[6]:PFlxOtherSrc   + RunResultsE[7]:PFlxOtherSrc   + RunResultsE[8]:PFlxOtherSrc   + RunResultsE[9]:PFlxOtherSrc    }
	"Calculate Src - TOTAL  - E-Total"		Proj:RunResultsE[10]:PFlxSrc[1]			= {	RunResultsE[11]:PFlxSrc[1]    + RunResultsE[6]:PFlxSrc[1]    + RunResultsE[7]:PFlxSrc[1]    + RunResultsE[8]:PFlxSrc[1]    + RunResultsE[9]:PFlxSrc[1]     }

	"Add in PV Src - Elec   - E-Total"	   Proj:RunResultsE[10]:PFlxElecSrc[1]	   = {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsE[10]:PFlxElecSrc[1]    + RunResultsE[14]:PFlxElecSrc[1]
                                                                                       else  RunResultsE[10]:PFlxElecSrc[1]    + RunResultsE[13]:PFlxElecSrc[1]    + RunResultsE[14]:PFlxElecSrc[1]     endif endif   }
	"Add in PV Src - TOTAL  - E-Total"	   Proj:RunResultsE[10]:PFlxSrc[1]  	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsE[10]:PFlxSrc[1]    + RunResultsE[14]:PFlxSrc[1]
                                                                                       else  RunResultsE[10]:PFlxSrc[1]    + RunResultsE[13]:PFlxSrc[1]    + RunResultsE[14]:PFlxSrc[1]     endif endif   }
END

;************************************************************************* SAC 11/27/23
RULELIST "CARes_PropFlexSrcEnergyResults_S" 1 0 0 1
;*************************************************************************
  ; Space Heating (& heating fan)
	"Calculate Src - Elec   - S-SpcHt"		Proj:RunResultsS[1]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsS[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - S-SpcHt"		Proj:RunResultsS[1]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsS[1]:PFlxNatGasEnergy[1]	) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - S-SpcHt"		Proj:RunResultsS[1]:PFlxOtherSrc			= {	if (LocalRef( RunResultsS[1]:PFlxOtherEnergy[1]		) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - S-SpcHt"		Proj:RunResultsS[1]:PFlxSrc[1]			= {	LocalRef( RunResultsS[1]:PFlxElecSrc[1] ) + LocalRef( RunResultsS[1]:PFlxNatGasSrc ) + LocalRef( RunResultsS[1]:PFlxOtherSrc )   }

  ; Space Cooling (& cooling fan)
	"Calculate Src - Elec   - S-SpcCl"		Proj:RunResultsS[2]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsS[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - S-SpcCl"		Proj:RunResultsS[2]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsS[2]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - S-SpcCl"		Proj:RunResultsS[2]:PFlxOtherSrc			= {	if (LocalRef( RunResultsS[2]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - S-SpcCl"		Proj:RunResultsS[2]:PFlxSrc[1]			= {	LocalRef( RunResultsS[2]:PFlxElecSrc[1] ) + LocalRef( RunResultsS[2]:PFlxNatGasSrc ) + LocalRef( RunResultsS[2]:PFlxOtherSrc )   }

  ; IAQ Ventilation Fans
	"Calculate Src - Elec   - S-IAQVent"	Proj:RunResultsS[3]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsS[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "FanV" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - S-IAQVent"	Proj:RunResultsS[3]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - S-IAQVent"	Proj:RunResultsS[3]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - S-IAQVent"	Proj:RunResultsS[3]:PFlxSrc[1]			= {	LocalRef( RunResultsS[3]:PFlxElecSrc[1] )   }

  ; Other HVAC (aux & misc fans)
	"Calculate Src - Elec   - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxElecSrc[1]		= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "User1" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxSrc[1]		   = {	RunResultsS[4]:PFlxElecSrc[1]  }

   ; SAC 1/27/19 - REDISTRIBUTE OthrHVAC S-PFlx Src use across SpcHt & SpcCl by fuel based on ratio of total Src (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - S-PFlxSrc"      Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsS[4]:PFlxSrc[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsS[1]:PFlxSrc[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsS[2]:PFlxSrc[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsS[1]:PFlxSrc[1], 0 ) / 
                                                                                 (ValidOr( RunResultsS[1]:PFlxSrc[1], 0 ) + ValidOr( RunResultsS[2]:PFlxSrc[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - S-SpcHt"		Proj:RunResultsS[1]:PFlxElecSrc[1]	= {   if (IfValidAnd( RunResultsS[4]:PFlxElecSrc[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsS[1]:PFlxElecSrc[1] + (RunResultsS[4]:PFlxElecSrc[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - S-SpcHt"		Proj:RunResultsS[1]:PFlxSrc[1]	   = {	LocalRef( RunResultsS[1]:PFlxElecSrc[1] ) + LocalRef( RunResultsS[1]:PFlxNatGasSrc[1] ) + LocalRef( RunResultsS[1]:PFlxOtherSrc[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - S-SpcCl"		Proj:RunResultsS[2]:PFlxElecSrc[1]	= {   if (IfValidAnd( RunResultsS[4]:PFlxElecSrc[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsS[2]:PFlxElecSrc[1] + (RunResultsS[4]:PFlxElecSrc[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - S-SpcCl"		Proj:RunResultsS[2]:PFlxSrc[1]	   = {	LocalRef( RunResultsS[2]:PFlxElecSrc[1] ) + LocalRef( RunResultsS[2]:PFlxNatGasSrc[1] ) + LocalRef( RunResultsS[2]:PFlxOtherSrc[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxElecSrc[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - S-OthrHVAC"	Proj:RunResultsS[4]:PFlxSrc[1]	      = {	0  }

  ; Water Heating
	"Calculate Src - Elec   - S-WtrHt"		Proj:RunResultsS[5]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsS[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea) + 0.5) / 100
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - S-WtrHt"		Proj:RunResultsS[5]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsS[5]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - S-WtrHt"		Proj:RunResultsS[5]:PFlxOtherSrc			= {	if (LocalRef( RunResultsS[5]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - S-WtrHt"		Proj:RunResultsS[5]:PFlxSrc[1]			= {	LocalRef( RunResultsS[5]:PFlxElecSrc[1] ) + LocalRef( RunResultsS[5]:PFlxNatGasSrc ) + LocalRef( RunResultsS[5]:PFlxOtherSrc )   }

  ; Inside Lighting
	"Calculate Src - Elec   - S-InsLtg"		Proj:RunResultsS[6]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsS[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - S-InsLtg"		Proj:RunResultsS[6]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsS[6]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - S-InsLtg"		Proj:RunResultsS[6]:PFlxOtherSrc			= {	if (LocalRef( RunResultsS[6]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - S-InsLtg"		Proj:RunResultsS[6]:PFlxSrc[1]			= {	LocalRef( RunResultsS[6]:PFlxElecSrc[1] ) + LocalRef( RunResultsS[6]:PFlxNatGasSrc ) + LocalRef( RunResultsS[6]:PFlxOtherSrc )   }

  ; Appliances & Cooking
	"Calculate Src - Elec   - S-AppCkg"		Proj:RunResultsS[7]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsS[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - S-AppCkg"		Proj:RunResultsS[7]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsS[7]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - S-AppCkg"		Proj:RunResultsS[7]:PFlxOtherSrc			= {	if (LocalRef( RunResultsS[7]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - S-AppCkg"		Proj:RunResultsS[7]:PFlxSrc[1]			= {	LocalRef( RunResultsS[7]:PFlxElecSrc[1] ) + LocalRef( RunResultsS[7]:PFlxNatGasSrc ) + LocalRef( RunResultsS[7]:PFlxOtherSrc )   }

  ; Plug Loads
	"Calculate Src - Elec   - S-Plugs"		Proj:RunResultsS[8]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsS[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - S-Plugs"		Proj:RunResultsS[8]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsS[8]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - S-Plugs"		Proj:RunResultsS[8]:PFlxOtherSrc			= {	if (LocalRef( RunResultsS[8]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - S-Plugs"		Proj:RunResultsS[8]:PFlxSrc[1]			= {	LocalRef( RunResultsS[8]:PFlxElecSrc[1] ) + LocalRef( RunResultsS[8]:PFlxNatGasSrc ) + LocalRef( RunResultsS[8]:PFlxOtherSrc )   }

  ; Exterior
	"Calculate Src - Elec   - S-Ext"			Proj:RunResultsS[9]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsS[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - S-Ext"			Proj:RunResultsS[9]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsS[9]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - S-Ext"			Proj:RunResultsS[9]:PFlxOtherSrc			= {	if (LocalRef( RunResultsS[9]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - S-Ext"			Proj:RunResultsS[9]:PFlxSrc[1]			= {	LocalRef( RunResultsS[9]:PFlxElecSrc[1] ) + LocalRef( RunResultsS[9]:PFlxNatGasSrc ) + LocalRef( RunResultsS[9]:PFlxOtherSrc )   }

  ; PV
	"Calculate Src - Elec   - S-PV"			Proj:RunResultsS[13]:PFlxElecSrc[1]		= {	if (LocalRef( RunResultsS[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringSrcAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsS[14]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "BT" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - S-PV"			Proj:RunResultsS[13]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - S-PV"			Proj:RunResultsS[13]:PFlxOtherSrc		= {	0  }
	"Calculate Src - TOTAL  - S-PV"			Proj:RunResultsS[13]:PFlxSrc[1]		= {	LocalRef( RunResultsS[13]:PFlxElecSrc[1] )   }

  ; Battery
	"Calculate Src - Elec   - S-Battery"	Proj:RunResultsS[14]:PFlxElecSrc[1]		= {	if (LocalRef( RunResultsS[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringSrcAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsS[13]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "PV" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - S-Battery"	Proj:RunResultsS[14]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - S-Battery"	Proj:RunResultsS[14]:PFlxOtherSrc		= {	0  }
	"Calculate Src - TOTAL  - S-Battery"	Proj:RunResultsS[14]:PFlxSrc[1]		= {	LocalRef( RunResultsS[14]:PFlxElecSrc[1] )   }

  ; Compliance Total
	"Calculate Src - Elec   - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxElecSrc[1]		= {	RunResultsS[1]:PFlxElecSrc[1]    + RunResultsS[2]:PFlxElecSrc[1]    + RunResultsS[3]:PFlxElecSrc[1]    + RunResultsS[4]:PFlxElecSrc[1]    + RunResultsS[5]:PFlxElecSrc[1]     }
	"Calculate Src - NatGas - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxNatGasSrc		= {	RunResultsS[1]:PFlxNatGasSrc  + RunResultsS[2]:PFlxNatGasSrc  + RunResultsS[3]:PFlxNatGasSrc  + RunResultsS[4]:PFlxNatGasSrc  + RunResultsS[5]:PFlxNatGasSrc   }
	"Calculate Src - Other  - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxOtherSrc		= {	RunResultsS[1]:PFlxOtherSrc   + RunResultsS[2]:PFlxOtherSrc   + RunResultsS[3]:PFlxOtherSrc   + RunResultsS[4]:PFlxOtherSrc   + RunResultsS[5]:PFlxOtherSrc    }
	"Calculate Src - TOTAL  - S-Comp Ttl"	Proj:RunResultsS[11]:PFlxSrc[1]		= {	RunResultsS[1]:PFlxSrc[1]    + RunResultsS[2]:PFlxSrc[1]    + RunResultsS[3]:PFlxSrc[1]    + RunResultsS[4]:PFlxSrc[1]    + RunResultsS[5]:PFlxSrc[1]     }

  ; Total
	"Calculate Src - Elec   - S-Total"		Proj:RunResultsS[10]:PFlxElecSrc[1]			= {	RunResultsS[11]:PFlxElecSrc[1]    + RunResultsS[6]:PFlxElecSrc[1]    + RunResultsS[7]:PFlxElecSrc[1]    + RunResultsS[8]:PFlxElecSrc[1]    + RunResultsS[9]:PFlxElecSrc[1]     }
	"Calculate Src - NatGas - S-Total"		Proj:RunResultsS[10]:PFlxNatGasSrc		= {	RunResultsS[11]:PFlxNatGasSrc  + RunResultsS[6]:PFlxNatGasSrc  + RunResultsS[7]:PFlxNatGasSrc  + RunResultsS[8]:PFlxNatGasSrc  + RunResultsS[9]:PFlxNatGasSrc   }
	"Calculate Src - Other  - S-Total"		Proj:RunResultsS[10]:PFlxOtherSrc		= {	RunResultsS[11]:PFlxOtherSrc   + RunResultsS[6]:PFlxOtherSrc   + RunResultsS[7]:PFlxOtherSrc   + RunResultsS[8]:PFlxOtherSrc   + RunResultsS[9]:PFlxOtherSrc    }
	"Calculate Src - TOTAL  - S-Total"		Proj:RunResultsS[10]:PFlxSrc[1]			= {	RunResultsS[11]:PFlxSrc[1]    + RunResultsS[6]:PFlxSrc[1]    + RunResultsS[7]:PFlxSrc[1]    + RunResultsS[8]:PFlxSrc[1]    + RunResultsS[9]:PFlxSrc[1]     }

	"Add in PV Src - Elec   - S-Total"	   Proj:RunResultsS[10]:PFlxElecSrc[1]	   = {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsS[10]:PFlxElecSrc[1]    + RunResultsS[14]:PFlxElecSrc[1]
                                                                                       else  RunResultsS[10]:PFlxElecSrc[1]    + RunResultsS[13]:PFlxElecSrc[1]    + RunResultsS[14]:PFlxElecSrc[1]     endif endif   }
	"Add in PV Src - TOTAL  - S-Total"	   Proj:RunResultsS[10]:PFlxSrc[1]  	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsS[10]:PFlxSrc[1]    + RunResultsS[14]:PFlxSrc[1]
                                                                                       else  RunResultsS[10]:PFlxSrc[1]    + RunResultsS[13]:PFlxSrc[1]    + RunResultsS[14]:PFlxSrc[1]     endif endif   }
END

;************************************************************************* SAC 11/27/23
RULELIST "CARes_PropFlexSrcEnergyResults_W" 1 0 0 1
;*************************************************************************
  ; Space Heating (& heating fan)
	"Calculate Src - Elec   - W-SpcHt"		Proj:RunResultsW[1]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsW[1]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Htg", "HPBU", "FanH", "Aux", "Fan" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - W-SpcHt"		Proj:RunResultsW[1]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsW[1]:PFlxNatGasEnergy[1]	) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - W-SpcHt"		Proj:RunResultsW[1]:PFlxOtherSrc			= {	if (LocalRef( RunResultsW[1]:PFlxOtherEnergy[1]		) < 0.0001) then  0                                                                                                     
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Htg", "HPBU", "Aux"                ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - W-SpcHt"		Proj:RunResultsW[1]:PFlxSrc[1]			= {	LocalRef( RunResultsW[1]:PFlxElecSrc[1] ) + LocalRef( RunResultsW[1]:PFlxNatGasSrc ) + LocalRef( RunResultsW[1]:PFlxOtherSrc )   }

  ; Space Cooling (& cooling fan)
	"Calculate Src - Elec   - W-SpcCl"		Proj:RunResultsW[2]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsW[2]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Clg", "FanC" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - W-SpcCl"		Proj:RunResultsW[2]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsW[2]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - W-SpcCl"		Proj:RunResultsW[2]:PFlxOtherSrc			= {	if (LocalRef( RunResultsW[2]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Clg"         ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - W-SpcCl"		Proj:RunResultsW[2]:PFlxSrc[1]			= {	LocalRef( RunResultsW[2]:PFlxElecSrc[1] ) + LocalRef( RunResultsW[2]:PFlxNatGasSrc ) + LocalRef( RunResultsW[2]:PFlxOtherSrc )   }

  ; IAQ Ventilation Fans
	"Calculate Src - Elec   - W-IAQVent"	Proj:RunResultsW[3]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsW[3]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "FanV" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - W-IAQVent"	Proj:RunResultsW[3]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - W-IAQVent"	Proj:RunResultsW[3]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - W-IAQVent"	Proj:RunResultsW[3]:PFlxSrc[1]			= {	LocalRef( RunResultsW[3]:PFlxElecSrc[1] )   }

  ; Other HVAC (aux & misc fans)
   ; SAC 1/27/19 - restored "Other HVAC" [4] to handle VCHP CFan via "User1" enduse
	"Calculate Src - Elec   - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxElecSrc[1]		= {	if (HourlyResultSum( RunID, "MtrElec", "User1" ) < 0.0001) then  0
			 			  																						   else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "User1" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxOtherSrc			= {	0  }
	"Calculate Src - TOTAL  - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxSrc[1]		   = {	RunResultsW[4]:PFlxElecSrc[1]  }

   ; SAC 1/27/19 - REDISTRIBUTE OthrHVAC W-PFlx Src use across SpcHt & SpcCl by fuel based on ratio of total Src (across all fuels) (tic #1053)
   "Set OthrHVAC_SpcHtFrac - W-PFlxSrc"      Proj:OthrHVAC_SpcHtFrac  = {  if (IfValidAnd( RunResultsW[4]:PFlxSrc[1] != 0 )==0) then  0
                                                                           else if (IfValidAnd( RunResultsW[1]:PFlxSrc[1] == 0 ) .AND.
                                                                                    IfValidAnd( RunResultsW[2]:PFlxSrc[1] == 0 )) then  0.5
                                                                           else   ValidOr( RunResultsW[1]:PFlxSrc[1], 0 ) / 
                                                                                 (ValidOr( RunResultsW[1]:PFlxSrc[1], 0 ) + ValidOr( RunResultsW[2]:PFlxSrc[1], 0 ))  endif endif  }
  ; Space Heating (& heating fan)
	"REALLOC OthrHVAC - Elec   - W-SpcHt"		Proj:RunResultsW[1]:PFlxElecSrc[1]	= {   if (IfValidAnd( RunResultsW[4]:PFlxElecSrc[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsW[1]:PFlxElecSrc[1] + (RunResultsW[4]:PFlxElecSrc[1]     * OthrHVAC_SpcHtFrac)  endif  }
	"REALLOC OthrHVAC - TOTAL  - W-SpcHt"		Proj:RunResultsW[1]:PFlxSrc[1]	   = {	LocalRef( RunResultsW[1]:PFlxElecSrc[1] ) + LocalRef( RunResultsW[1]:PFlxNatGasSrc[1] ) + LocalRef( RunResultsW[1]:PFlxOtherSrc[1] )   }
  ; Space Cooling (& cooling fan)
	"REALLOC OthrHVAC - Elec   - W-SpcCl"		Proj:RunResultsW[2]:PFlxElecSrc[1]	= {   if (IfValidAnd( RunResultsW[4]:PFlxElecSrc[1] != 0 )==0) then  UNCHANGED
                                                                                       else  RunResultsW[2]:PFlxElecSrc[1] + (RunResultsW[4]:PFlxElecSrc[1]     * (1-OthrHVAC_SpcHtFrac))  endif  }
	"REALLOC OthrHVAC - TOTAL  - W-SpcCl"		Proj:RunResultsW[2]:PFlxSrc[1]	   = {	LocalRef( RunResultsW[2]:PFlxElecSrc[1] ) + LocalRef( RunResultsW[2]:PFlxNatGasSrc[1] ) + LocalRef( RunResultsW[2]:PFlxOtherSrc[1] )   }
  ; Other HVAC (aux & misc fans)
	"ZERO-OUT         - Elec   - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxElecSrc[1]	   = {	0  }
	"ZERO-OUT         - TOTAL  - W-OthrHVAC"	Proj:RunResultsW[4]:PFlxSrc[1]	      = {	0  }

  ; Water Heating
	"Calculate Src - Elec   - W-WtrHt"		Proj:RunResultsW[5]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsW[5]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else if (CSEinclDHWMFL_EU)
			 			  																						   then  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2", "DhwMFL" ) / CondFloorArea) + 0.5) / 100
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Dhw", "DhwBU", "DHWPmp", "User2"           ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - W-WtrHt"		Proj:RunResultsW[5]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsW[5]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - W-WtrHt"		Proj:RunResultsW[5]:PFlxOtherSrc			= {	if (LocalRef( RunResultsW[5]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Dhw", "DhwBU" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - W-WtrHt"		Proj:RunResultsW[5]:PFlxSrc[1]			= {	LocalRef( RunResultsW[5]:PFlxElecSrc[1] ) + LocalRef( RunResultsW[5]:PFlxNatGasSrc ) + LocalRef( RunResultsW[5]:PFlxOtherSrc )   }

  ; Inside Lighting
	"Calculate Src - Elec   - W-InsLtg"		Proj:RunResultsW[6]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsW[6]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - W-InsLtg"		Proj:RunResultsW[6]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsW[6]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - W-InsLtg"		Proj:RunResultsW[6]:PFlxOtherSrc			= {	if (LocalRef( RunResultsW[6]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Lit" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - W-InsLtg"		Proj:RunResultsW[6]:PFlxSrc[1]			= {	LocalRef( RunResultsW[6]:PFlxElecSrc[1] ) + LocalRef( RunResultsW[6]:PFlxNatGasSrc ) + LocalRef( RunResultsW[6]:PFlxOtherSrc )   }

  ; Appliances & Cooking
	"Calculate Src - Elec   - W-AppCkg"		Proj:RunResultsW[7]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsW[7]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - W-AppCkg"		Proj:RunResultsW[7]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsW[7]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - W-AppCkg"		Proj:RunResultsW[7]:PFlxOtherSrc			= {	if (LocalRef( RunResultsW[7]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Refr", "Dish", "Dry", "Wash", "Cook" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - W-AppCkg"		Proj:RunResultsW[7]:PFlxSrc[1]			= {	LocalRef( RunResultsW[7]:PFlxElecSrc[1] ) + LocalRef( RunResultsW[7]:PFlxNatGasSrc ) + LocalRef( RunResultsW[7]:PFlxOtherSrc )   }

  ; Plug Loads
	"Calculate Src - Elec   - W-Plugs"		Proj:RunResultsW[8]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsW[8]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - W-Plugs"		Proj:RunResultsW[8]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsW[8]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - W-Plugs"		Proj:RunResultsW[8]:PFlxOtherSrc			= {	if (LocalRef( RunResultsW[8]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Rcp" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - W-Plugs"		Proj:RunResultsW[8]:PFlxSrc[1]			= {	LocalRef( RunResultsW[8]:PFlxElecSrc[1] ) + LocalRef( RunResultsW[8]:PFlxNatGasSrc ) + LocalRef( RunResultsW[8]:PFlxOtherSrc )   }

  ; Exterior
	"Calculate Src - Elec   - W-Ext"			Proj:RunResultsW[9]:PFlxElecSrc[1]			= {	if (LocalRef( RunResultsW[9]:PFlxElecEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec",   "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - NatGas - W-Ext"			Proj:RunResultsW[9]:PFlxNatGasSrc		= {	if (LocalRef( RunResultsW[9]:PFlxNatGasEnergy[1]	) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 2, SrcMult_Fuel, SrcSecTbl_NGas, ClimateZone, SrcSecMult_Fuel, RunID, "MtrNatGas", "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - Other  - W-Ext"			Proj:RunResultsW[9]:PFlxOtherSrc			= {	if (LocalRef( RunResultsW[9]:PFlxOtherEnergy[1]		) < 0.0001) then  0
			 			  																							else  int( (100 * ApplyHourlyResultMultipliers( "none", EDR1TableName, ((ClimateZone-1) * 3) + 3, SrcMult_Fuel, SrcSecTbl_Othr, ClimateZone, SrcSecMult_Fuel, RunID, "MtrOther",  "Ext" ) / CondFloorArea) + 0.5) / 100  endif  }
	"Calculate Src - TOTAL  - W-Ext"			Proj:RunResultsW[9]:PFlxSrc[1]			= {	LocalRef( RunResultsW[9]:PFlxElecSrc[1] ) + LocalRef( RunResultsW[9]:PFlxNatGasSrc ) + LocalRef( RunResultsW[9]:PFlxOtherSrc )   }

  ; PV
	"Calculate Src - Elec   - W-PV"			Proj:RunResultsW[13]:PFlxElecSrc[1]		= {	if (LocalRef( RunResultsW[13]:PFlxElecEnergy[1]		) > -0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringSrcAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsW[14]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "BT" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "PV" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - W-PV"			Proj:RunResultsW[13]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - W-PV"			Proj:RunResultsW[13]:PFlxOtherSrc		= {	0  }
	"Calculate Src - TOTAL  - W-PV"			Proj:RunResultsW[13]:PFlxSrc[1]		= {	LocalRef( RunResultsW[13]:PFlxElecSrc[1] )   }

  ; Battery
	"Calculate Src - Elec   - W-Battery"	Proj:RunResultsW[14]:PFlxElecSrc[1]		= {	if (LocalRef( RunResultsW[14]:PFlxElecEnergy[1]		) < 0.0001) then  0
		else if (IfValidAnd( NetEnergyMeteringSrcAdj != 0) .OR. IfValidAnd( HrlyNEMTableCol > 0 ))
      then  if (LocalRef( RunResultsW[13]:PFlxElecEnergy[1] ) = 0)
            then  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor          ) / CondFloorArea) + 0.5) / 100
            else  int( (100 * ApplyHourlyResultMultipliers_NEM( "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT", "Tot", NetEnergyMeteringSrcAdj, HrlyNEMTableName, HrlyNEMTableCol, NEMGrossUpFactor, 1, "PV" ) / CondFloorArea) + 0.5) / 100  endif
      else        int( (100 * ApplyHourlyResultMultipliers(     "none", EDR1TableName, ((ClimateZone-1) * 3) + 1, SrcMult_Elec, SrcSecTbl_Elec, ClimateZone, SrcSecMult_Elec, RunID, "MtrElec", "BT" ) / CondFloorArea) + 0.5) / 100  endif endif  }
	"Calculate Src - NatGas - W-Battery"	Proj:RunResultsW[14]:PFlxNatGasSrc		= {	0  }
	"Calculate Src - Other  - W-Battery"	Proj:RunResultsW[14]:PFlxOtherSrc		= {	0  }
	"Calculate Src - TOTAL  - W-Battery"	Proj:RunResultsW[14]:PFlxSrc[1]		= {	LocalRef( RunResultsW[14]:PFlxElecSrc[1] )   }

  ; Compliance Total
	"Calculate Src - Elec   - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxElecSrc[1]			= {	RunResultsW[1]:PFlxElecSrc[1]    + RunResultsW[2]:PFlxElecSrc[1]    + RunResultsW[3]:PFlxElecSrc[1]    + RunResultsW[4]:PFlxElecSrc[1]    + RunResultsW[5]:PFlxElecSrc[1]     }
	"Calculate Src - NatGas - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxNatGasSrc		= {	RunResultsW[1]:PFlxNatGasSrc  + RunResultsW[2]:PFlxNatGasSrc  + RunResultsW[3]:PFlxNatGasSrc  + RunResultsW[4]:PFlxNatGasSrc  + RunResultsW[5]:PFlxNatGasSrc   }
	"Calculate Src - Other  - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxOtherSrc		= {	RunResultsW[1]:PFlxOtherSrc   + RunResultsW[2]:PFlxOtherSrc   + RunResultsW[3]:PFlxOtherSrc   + RunResultsW[4]:PFlxOtherSrc   + RunResultsW[5]:PFlxOtherSrc    }
	"Calculate Src - TOTAL  - W-Comp Ttl"	Proj:RunResultsW[11]:PFlxSrc[1]			= {	RunResultsW[1]:PFlxSrc[1]    + RunResultsW[2]:PFlxSrc[1]    + RunResultsW[3]:PFlxSrc[1]    + RunResultsW[4]:PFlxSrc[1]    + RunResultsW[5]:PFlxSrc[1]     }

  ; Total
	"Calculate Src - Elec   - W-Total"		Proj:RunResultsW[10]:PFlxElecSrc[1]			= {	RunResultsW[11]:PFlxElecSrc[1]    + RunResultsW[6]:PFlxElecSrc[1]    + RunResultsW[7]:PFlxElecSrc[1]    + RunResultsW[8]:PFlxElecSrc[1]    + RunResultsW[9]:PFlxElecSrc[1]     }
	"Calculate Src - NatGas - W-Total"		Proj:RunResultsW[10]:PFlxNatGasSrc		= {	RunResultsW[11]:PFlxNatGasSrc  + RunResultsW[6]:PFlxNatGasSrc  + RunResultsW[7]:PFlxNatGasSrc  + RunResultsW[8]:PFlxNatGasSrc  + RunResultsW[9]:PFlxNatGasSrc   }
	"Calculate Src - Other  - W-Total"		Proj:RunResultsW[10]:PFlxOtherSrc		= {	RunResultsW[11]:PFlxOtherSrc   + RunResultsW[6]:PFlxOtherSrc   + RunResultsW[7]:PFlxOtherSrc   + RunResultsW[8]:PFlxOtherSrc   + RunResultsW[9]:PFlxOtherSrc    }
	"Calculate Src - TOTAL  - W-Total"		Proj:RunResultsW[10]:PFlxSrc[1]			= {	RunResultsW[11]:PFlxSrc[1]    + RunResultsW[6]:PFlxSrc[1]    + RunResultsW[7]:PFlxSrc[1]    + RunResultsW[8]:PFlxSrc[1]    + RunResultsW[9]:PFlxSrc[1]     }

	"Add in PV Src - Elec   - W-Total"	   Proj:RunResultsW[10]:PFlxElecSrc[1]	   = {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsW[10]:PFlxElecSrc[1]    + RunResultsW[14]:PFlxElecSrc[1]
                                                                                       else  RunResultsW[10]:PFlxElecSrc[1]    + RunResultsW[13]:PFlxElecSrc[1]    + RunResultsW[14]:PFlxElecSrc[1]     endif endif   }
	"Add in PV Src - TOTAL  - W-Total"	   Proj:RunResultsW[10]:PFlxSrc[1]  	= {	if (EnergyCodeYearNum < 2016) then  UNCHANGED
                                                                                       else if (EnergyCodeYearNum < 2019) 
                                                                                       then  RunResultsW[10]:PFlxSrc[1]    + RunResultsW[14]:PFlxSrc[1]
                                                                                       else  RunResultsW[10]:PFlxSrc[1]    + RunResultsW[13]:PFlxSrc[1]    + RunResultsW[14]:PFlxSrc[1]     endif endif   }
END
;*************************************************************************


;*************************************************************************
RULELIST "CARes_PropFlexSummary" 1 0 1 1
;*************************************************************************

;"debugging"  Proj:Action = {
;      if (LocalStatus( TargetDesignRtg ) > 0)
;      then  PostMessageToLog( "   Testing for need to scale PV:  ScalePropPVResults = %g / MaxPropPVRatio = %g / PVResults:PFlxElecEnergy[1] = %g / TotResults:PFlxElecEnergy[1] = %g / TargetDesignRtg = %g", 
;                     ValidOr( ScalePropPVResults, -99 ), ValidOr( MaxPropPVRatio, -99 ), ValidOr( RunResults[13]:PFlxElecEnergy[1], -99 ), ValidOr( RunResults[10]:PFlxElecEnergy[1], -99 ), TargetDesignRtg )
;      else  PostMessageToLog( "   Testing for need to scale PV:  ScalePropPVResults = %g / MaxPropPVRatio = %g / PVResults:PFlxElecEnergy[1] = %g / TotResults:PFlxElecEnergy[1] = %g / TargetDesignRtg = (undefined) /  %g > %g?", 
;                     ValidOr( ScalePropPVResults, -99 ), ValidOr( MaxPropPVRatio, -99 ), ValidOr( RunResults[13]:PFlxElecEnergy[1], -99 ), ValidOr( RunResults[10]:PFlxElecEnergy[1], -99 ),
;                     (MaxPropPVRatio * (RunResults[10]:PFlxElecEnergy[1] - RunResults[13]:PFlxElecEnergy[1])), (-1 * RunResults[13]:PFlxElecEnergy[1]) )
;      endif  }
;"debugging - store BEMProc details"		Proj:Action = {  StoreBEMProc( "B4ScalePropTDV", 0 )  }


;"debugging"  Proj:Action = {  PostMessageToLog( "      ScalePropPVResults: %g", ValidOr( ScalePropPVResults, -999 ) )  }
;"debugging"  Proj:Action = {  PostMessageToLog( "      MaxPropPVRatio:     %g", ValidOr( MaxPropPVRatio, -999 ) )  }
;"debugging"  Proj:Action = {  PostMessageToLog( "      RunResults[13]:PFlxElecEnergy[1]: %g", ValidOr( RunResults[13]:PFlxElecEnergy[1], -999 ) )  }
;"debugging"  Proj:Action = {  PostMessageToLog( "      RunResults[10]:PFlxElecEnergy[1]: %g", ValidOr( RunResults[10]:PFlxElecEnergy[1], -999 ) )  }

   "set Flexibility summary results for 2025+ codes (w/o EDR)"  Proj:Action =    ; added for 2025+ - SAC 11/27/23
      {  if (CompCodeBase < 2022) then  UNCHANGED
         else  EvalRulelist( "CARes_FlexibilitySummary_SingleOrientation" )  endif  }

   "Set Proj:ResultSummary[1]:UnscaledPFlxPVRatio"   Proj:ResultSummary[1]:UnscaledPFlxPVRatio  = {
         if (IfValidAnd( ScalePropPVResults > 0.5 )==0 .OR.
             IfValidAnd( MaxPropPVRatio >= 0 )==0 .OR.
             IfValidAnd( RunResults[13]:PFlxElecEnergy[1] < 0 )==0 .OR.
             LocalStatus( RunResults[10]:PFlxElecEnergy[1] ) < 1) then  UNDEFINED
         else if (CompCodeBase == 2016)
         then  (-1 * RunResults[13]:PFlxElecEnergy[1] / min( 1, ValidOr( PVWDCSizeMultiplier[1], 1 ) )) /
                RunResults[10]:PFlxElecEnergy[1]
         else if (CompCodeBase >= 2019)
         then  (-1 * RunResults[13]:PFlxElecEnergy[1] / min( 1, ValidOr( PVWDCSizeMultiplier[1], 1 ) )) /
               (RunResults[10]:PFlxElecEnergy[1] - RunResults[13]:PFlxElecEnergy[1])
         else  UNDEFINED  endif endif endif  }

;"debugging"  Proj:Action = {  PostMessageToLog( "      UnscaledPFlxPVRatio: %g", ValidOr( ResultSummary[1]:UnscaledPFlxPVRatio, -999 ) )  }
;"debugging"  Proj:Action = {  PostMessageToLog( "      ValidOr( UnscaledPFlxPVRatio, 0 ): %g", ValidOr( ValidOr( ResultSummary[1]:UnscaledPFlxPVRatio, 0 ), -999 ) )  }
;"debugging"  Proj:Action = {  PostMessageToLog( "      ValidOr( MaxPropPVRatio,      1 ): %g", ValidOr( ValidOr( MaxPropPVRatio, 1 ), -999 ) )  }

;"Debug log msg"   Proj:Action  = {
;   if (IfValidAnd( ScalePropPVResults > 0.5 )==0 .OR. IfValidAnd( MaxPropPVRatio >= 0 )==0 .OR. IfValidAnd( RunResults[13]:PFlxElecEnergy[1] < 0 )==0) then  UNCHANGED
;   else if (CompCodeBase == 2016)
;   then  if (IfValidAnd( RunResults[10]:PFlxElecEnergy[1] != 0 )==0)
;         then  PostMessageToLog( "   Scale PV check:   currentPVRatio = <infinite>  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                                                                                 ResultSummary[1]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;         else  PostMessageToLog( "   Scale PV check:   currentPVRatio = %.3f  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                     (-1 * RunResults[13]:PFlxElecEnergy[1]) / RunResults[10]:PFlxElecEnergy[1], ResultSummary[1]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;         endif
;   else if (CompCodeBase >= 2019)
;   then  if (ValidOr( RunResults[10]:PFlxElecEnergy[1], -999 ) == ValidOr( RunResults[13]:PFlxElecEnergy[1], 999 ))
;         then  PostMessageToLog( "   Scale PV check:   currentPVRatio = <infinite>  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                                                                                 ResultSummary[1]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;         else  PostMessageToLog( "   Scale PV check:   currentPVRatio = %.3f  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                     (-1 * RunResults[13]:PFlxElecEnergy[1]) / (RunResults[10]:PFlxElecEnergy[1] - RunResults[13]:PFlxElecEnergy[1]), ResultSummary[1]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;         endif
;   else  UNCHANGED  endif endif endif  }

   "Init PFlxPVScaleFactor"   Proj:ResultSummary[1]:PFlxPVScaleFactor  = {  UNDEFINED  }
   ; SAC 4/17/17 - added logic to prevent scaling PropFlex PV here if Target EDR processing is activated
   ; SAC 4/27/17 - added 2016 logic (PV not added into Total @ this point)
   "Scale PropFlex PV & Battery if necessary"      Proj:Action  = {
         if (ValidOr( ResultSummary[1]:UnscaledPFlxPVRatio, -999 ) <= ValidOr( MaxPropPVRatio, 1 )) then  UNCHANGED
         else if (CompCodeBase >= 2019)
         then  if (LocalStatus( TargetDesignRtg ) > 0)
               then  UNCHANGED
               else  EvalRulelist( "CARes_PropFlexSummary_ScalePV" )  endif
         else  UNCHANGED  endif endif  }

  ; SAC 10/2/17 - added rules to calc carbon emissions by enduse
   "Call rulelist to calculate PropFlex run carbon emissions"   Proj:Action    = {
         if (EnergyCodeYearNum < 2019) then  UNCHANGED
         else  EvalRulelist( "CARes_PropFlexResults_Carbon" )  endif  }

;	"Call subordinate rulelist to set all EUseSummary data"		Proj:Action = {	EvalRulelist( "CARes_PropFlexSummary_Main" )  }
END


;************************************************************************* - SAC 4/10/17
RULELIST "CARes_PropFlexSummary_ScalePV" 1 0 1 1
;*************************************************************************
   "Set PFlxPVScaleFactor"    Proj:ResultSummary[1]:PFlxPVScaleFactor  = {
         (MaxPropPVRatio * (RunResults[10]:PFlxElecEnergy[1] - RunResults[13]:PFlxElecEnergy[1]))
         / (-1 * RunResults[13]:PFlxElecEnergy[1])  }
;"debugging"  Proj:Action = {  PostMessageToLog( "   Scaling PV: %g", ResultSummary[1]:PFlxPVScaleFactor )  }

   ; SAC 4/30/17 - added NetSurpPFlxPVProduction to implement net surplus compensation
   "Set Proj:ResultSummary[1]:NetSurpPFlxPVProduction"   Proj:ResultSummary[1]:NetSurpPFlxPVProduction  = {
         (-1 * RunResults[13]:PFlxElecEnergy[1] * ValidOr( CondFloorArea, 0 ) / 3.412) * (1 - ResultSummary[1]:PFlxPVScaleFactor)  }

;   ; first STORE PV, Battery and Totals BEFORE scaling
;	"Store pre-scaled PV EnergyUse:PFlxTDV[4]"		Proj:RunResults[13]:PFlxTDV[4]	= {	RunResults[13]:PFlxTDV[1]  }
;	"Store pre-scaled Batt EnergyUse:PFlxTDV[4]"	Proj:RunResults[14]:PFlxTDV[4]	= {	RunResults[14]:PFlxTDV[1]  }
;	"Store pre-scaled Total EnergyUse:PFlxTDV[4]"	Proj:RunResults[10]:PFlxTDV[4]	= {	RunResults[10]:PFlxTDV[1]  }

   ; then REMOVE effect of PV on Totals
   "Subtrct PV frm Elec   - Total"   Proj:RunResults[10]:PFlxElecEnergy[1]   = {  RunResults[10]:PFlxElecEnergy[1]  - RunResults[13]:PFlxElecEnergy[1]   }  ; - RunResults[14]:PFlxElecEnergy[1]   }
   "Subtrct PV frm TOTAL  - Total"   Proj:RunResults[10]:PFlxTotalEnergy[1]  = {  RunResults[10]:PFlxTotalEnergy[1] - RunResults[13]:PFlxTotalEnergy[1]  }  ; - RunResults[14]:PFlxTotalEnergy[1]  }
   "Subtrct PV frm Elec   - Total"   Proj:RunResults[10]:PFlxElecTDV[1]      = {  RunResults[10]:PFlxElecTDV[1]     - RunResults[13]:PFlxElecTDV[1]      }  ; - RunResults[14]:PFlxElecTDV[1]      }
   "Subtrct PV frm TOTAL  - Total"   Proj:RunResults[10]:PFlxTDV[1]          = {  RunResults[10]:PFlxTDV[1]         - RunResults[13]:PFlxTDV[1]          }  ; - RunResults[14]:PFlxTDV[1]      }
   "Subtrct PV frm TOTAL  - Src  "   Proj:RunResults[10]:PFlxSrc[1]          = {  RunResults[10]:PFlxSrc[1]         - RunResults[13]:PFlxSrc[1]          }  ; - RunResults[14]:PFlxSrc[1]      }
   "Subtrct PV frm Elec Demand"      Proj:RunResults[10]:PFlxElecDemand[1]   = {  RunResults[10]:PFlxElecDemand[1]  - RunResults[13]:PFlxElecDemand[1]   }  ; - RunResults[14]:PFlxElecDemand[1]   }

   ; apply PV scaling factor
   "Scale energy use - Elec   - PV"       Proj:RunResults[13]:PFlxElecEnergy[1]   = {  ResultSummary[1]:PFlxPVScaleFactor * RunResults[13]:PFlxElecEnergy[1]   }
   "Scale energy use - TOTAL  - PV"       Proj:RunResults[13]:PFlxTotalEnergy[1]  = {  ResultSummary[1]:PFlxPVScaleFactor * RunResults[13]:PFlxTotalEnergy[1]  }
;   "Scale energy use - Elec   - Battery"  Proj:RunResults[14]:PFlxElecEnergy[1]   = {  ResultSummary[1]:PFlxPVScaleFactor * RunResults[14]:PFlxElecEnergy[1]   }
;   "Scale energy use - TOTAL  - Battery"  Proj:RunResults[14]:PFlxTotalEnergy[1]  = {  ResultSummary[1]:PFlxPVScaleFactor * RunResults[14]:PFlxTotalEnergy[1]  }
   "Scale TDV - Elec   - PV"              Proj:RunResults[13]:PFlxElecTDV[1]      = {  ResultSummary[1]:PFlxPVScaleFactor * RunResults[13]:PFlxElecTDV[1]      }
   "Scale TDV - TOTAL  - PV"              Proj:RunResults[13]:PFlxTDV[1]          = {  ResultSummary[1]:PFlxPVScaleFactor * RunResults[13]:PFlxTDV[1]          }
   "Scale Src - TOTAL  - PV"              Proj:RunResults[13]:PFlxSrc[1]          = {  ResultSummary[1]:PFlxPVScaleFactor * RunResults[13]:PFlxSrc[1]          }
   "Scale Elec Demand  - PV"              Proj:RunResults[13]:PFlxElecDemand[1]   = {  ResultSummary[1]:PFlxPVScaleFactor * RunResults[13]:PFlxElecDemand[1]   }
;   "Scale TDV - Elec   - Battery"         Proj:RunResults[14]:PFlxElecTDV[1]      = {  ResultSummary[1]:PFlxPVScaleFactor * RunResults[14]:PFlxElecTDV[1]      }
;   "Scale TDV - TOTAL  - Battery"         Proj:RunResults[14]:PFlxTDV[1]      = {  ResultSummary[1]:PFlxPVScaleFactor * RunResults[14]:PFlxTDV[1]      }
;   "Scale Elec Demand  - Battery"         Proj:RunResults[14]:PFlxElecDemand[1]   = {  ResultSummary[1]:PFlxPVScaleFactor * RunResults[14]:PFlxElecDemand[1]   }

   ; apply Net Surplus Compensation to PV TDV results
;"debugging"  Proj:Action = {  if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR. IfValidAnd( ResultSummary[1]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
;                              else  PostMessageToLog( "   NSC adjustment of %g (%g * %g) to scaled PV TDV of %g", ResultSummary[1]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj, ResultSummary[1]:NetSurpPFlxPVProduction, NetEnergyMeteringNSCAdj, (RunResults[13]:PFlxElecTDV[1] * CondFloorArea) )  endif  }
   "Add NSC to TDV - Elec   - PV"   Proj:RunResults[13]:PFlxElecTDV[1]  = {
         if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR.
             IfValidAnd( ResultSummary[1]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
         else  RunResults[13]:PFlxElecTDV[1] - (ResultSummary[1]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj / CondFloorArea)  endif  }
   "Add NSC to TDV - TOTAL  - PV"   Proj:RunResults[13]:PFlxTDV[1]  = {
         if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR.
             IfValidAnd( ResultSummary[1]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
         else  RunResults[13]:PFlxTDV[1] - (ResultSummary[1]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj / CondFloorArea)  endif  }

   ; RE-apply PV to Totals
   "Restore PV to Elec   - Total"    Proj:RunResults[10]:PFlxElecEnergy[1]   = {  RunResults[10]:PFlxElecEnergy[1]  + RunResults[13]:PFlxElecEnergy[1]   }  ; + RunResults[14]:PFlxElecEnergy[1]   }
   "Restore PV to TOTAL  - Total"    Proj:RunResults[10]:PFlxTotalEnergy[1]  = {  RunResults[10]:PFlxTotalEnergy[1] + RunResults[13]:PFlxTotalEnergy[1]  }  ; + RunResults[14]:PFlxTotalEnergy[1]  }
   "Restore PV to Elec   - Total"    Proj:RunResults[10]:PFlxElecTDV[1]      = {  RunResults[10]:PFlxElecTDV[1]     + RunResults[13]:PFlxElecTDV[1]      }  ; + RunResults[14]:PFlxElecTDV[1]      }
   "Restore PV to TOTAL  - Total"    Proj:RunResults[10]:PFlxTDV[1]          = {  RunResults[10]:PFlxTDV[1]         + RunResults[13]:PFlxTDV[1]          }  ; + RunResults[14]:PFlxTDV[1]      }
   "Restore PV to TOTAL  - Src  "    Proj:RunResults[10]:PFlxSrc[1]          = {  RunResults[10]:PFlxSrc[1]         + RunResults[13]:PFlxSrc[1]          }  ; + RunResults[14]:PFlxSrc[1]      }
   "Restore PV to Elec Demand"       Proj:RunResults[10]:PFlxElecDemand[1]   = {  RunResults[10]:PFlxElecDemand[1]  + RunResults[13]:PFlxElecDemand[1]   }  ; + RunResults[14]:PFlxElecDemand[1]   }
END



;*************************************************************************   - SAC 6/25/13
RULELIST "CARes_PropFlexSummary_N" 1 0 1 1
;*************************************************************************

   ; SAC 6/13/17 - port PV scaling logic from 'CARes_PropFlexSummary' rulelist
;            "debugging"  Proj:Action = {  PostMessageToLog( "      ScalePropPVResults: %g", ValidOr( ScalePropPVResults, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      MaxPropPVRatio:     %g", ValidOr( MaxPropPVRatio, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      N: RunResultsN[13]:PFlxElecEnergy[1]: %g", ValidOr( RunResultsN[13]:PFlxElecEnergy[1], -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      N: RunResultsN[10]:PFlxElecEnergy[1]: %g", ValidOr( RunResultsN[10]:PFlxElecEnergy[1], -999 ) )  }

   "set Flexibility summary results for 2025+ codes (w/o EDR)"  Proj:Action =    ; added for 2025+ - SAC 11/27/23
      {  if (CompCodeBase < 2022) then  UNCHANGED
         else  EvalRulelist( "CARes_FlexibilitySummary_North" )  endif  }

   "Set Proj:ResultSummary[2]:UnscaledPFlxPVRatio"   Proj:ResultSummary[2]:UnscaledPFlxPVRatio  = {
         if (IfValidAnd( ScalePropPVResults > 0.5 )==0 .OR.
             IfValidAnd( MaxPropPVRatio >= 0 )==0 .OR.
             IfValidAnd( RunResultsN[13]:PFlxElecEnergy[1] < 0 )==0 .OR.
             LocalStatus( RunResultsN[10]:PFlxElecEnergy[1] ) < 1) then  UNDEFINED
         else if (CompCodeBase == 2016)
         then  (-1 * RunResultsN[13]:PFlxElecEnergy[1] / min( 1, ValidOr( PVWDCSizeMultiplier[1], 1 ) )) /
                RunResultsN[10]:PFlxElecEnergy[1]
         else if (CompCodeBase >= 2019)
         then  (-1 * RunResultsN[13]:PFlxElecEnergy[1] / min( 1, ValidOr( PVWDCSizeMultiplier[1], 1 ) )) /
               (RunResultsN[10]:PFlxElecEnergy[1] - RunResultsN[13]:PFlxElecEnergy[1])
         else  UNDEFINED  endif endif endif  }

;            "debugging"  Proj:Action = {  PostMessageToLog( "      N: UnscaledPFlxPVRatio: %g", ValidOr( ResultSummary[2]:UnscaledPFlxPVRatio, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      N: ValidOr( UnscaledPFlxPVRatio, 0 ): %g", ValidOr( ValidOr( ResultSummary[2]:UnscaledPFlxPVRatio, 0 ), -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      N: ValidOr( MaxPropPVRatio,      1 ): %g", ValidOr( ValidOr( MaxPropPVRatio, 1 ), -999 ) )  }

;            "Debug log msg"   Proj:Action  = {
;               if (IfValidAnd( ScalePropPVResults > 0.5 )==0 .OR. IfValidAnd( MaxPropPVRatio >= 0 )==0 .OR. IfValidAnd( RunResultsN[13]:PFlxElecEnergy[1] < 0 )==0) then  UNCHANGED
;               else if (CompCodeBase == 2016)
;               then  if (IfValidAnd( RunResultsN[10]:PFlxElecEnergy[1] != 0 )==0)
;                     then  PostMessageToLog( "   N: Scale PV check:   currentPVRatio = <infinite>  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                                                                                             ResultSummary[2]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     else  PostMessageToLog( "   N: Scale PV check:   currentPVRatio = %.3f  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                 (-1 * RunResultsN[13]:PFlxElecEnergy[1]) / RunResultsN[10]:PFlxElecEnergy[1], ResultSummary[2]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     endif
;               else if (CompCodeBase >= 2019)
;               then  if (ValidOr( RunResultsN[10]:PFlxElecEnergy[1], -999 ) == ValidOr( RunResultsN[13]:PFlxElecEnergy[1], 999 ))
;                     then  PostMessageToLog( "   N: Scale PV check:   currentPVRatio = <infinite>  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                                                                                             ResultSummary[2]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     else  PostMessageToLog( "   N: Scale PV check:   currentPVRatio = %.3f  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                 (-1 * RunResultsN[13]:PFlxElecEnergy[1]) / (RunResultsN[10]:PFlxElecEnergy[1] - RunResultsN[13]:PFlxElecEnergy[1]), ResultSummary[2]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     endif
;               else  UNCHANGED  endif endif endif  }

   "Init PFlxPVScaleFactor"   Proj:ResultSummary[2]:PFlxPVScaleFactor  = {  UNDEFINED  }
   ; SAC 4/17/17 - added logic to prevent scaling PropFlex PV here if Target EDR processing is activated
   ; SAC 4/27/17 - added 2016 logic (PV not added into Total @ this point
   "Scale PropFlex PV & Battery if necessary"      Proj:Action  = {
         if (ValidOr( ResultSummary[2]:UnscaledPFlxPVRatio, -999 ) <= ValidOr( MaxPropPVRatio, 1 )) then  UNCHANGED
         else if (CompCodeBase >= 2019)
         then  if (LocalStatus( TargetDesignRtg ) > 0)
               then  UNCHANGED
            ;   then  if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0) then  UNCHANGED   - removed NSC adjustment during TEDR processing since final run ultimately will be clipped @ the max PV size
            ;         else  EvalRulelist( "CARes_PropFlexSummary_TargetEDR_NetSurpComp" )  endif
               else  EvalRulelist( "CARes_PropFlexSummary_N_ScalePV" )  endif
         else  UNCHANGED  endif endif  }
   ; SAC 6/13/17 - END OF - port PV scaling logic from 'CARes_PropFlexSummary' rulelist

  ; SAC 10/2/17 - added rules to calc carbon emissions by enduse
   "Call rulelist to calculate PropFlex-N run carbon emissions"   Proj:Action    = {
         if (EnergyCodeYearNum < 2019) then  UNCHANGED
         else  EvalRulelist( "CARes_PropFlexResults_Carbon_N" )  endif  }
END

;*************************************************************************   - SAC 6/25/13
RULELIST "CARes_PropFlexSummary_E" 1 0 1 1
;*************************************************************************

   ; SAC 6/13/17 - port PV scaling logic from 'CARes_PropFlexSummary' rulelist
;            "debugging"  Proj:Action = {  PostMessageToLog( "      ScalePropPVResults: %g", ValidOr( ScalePropPVResults, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      MaxPropPVRatio:     %g", ValidOr( MaxPropPVRatio, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      E: RunResultsE[13]:PFlxElecEnergy[1]: %g", ValidOr( RunResultsE[13]:PFlxElecEnergy[1], -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      E: RunResultsE[10]:PFlxElecEnergy[1]: %g", ValidOr( RunResultsE[10]:PFlxElecEnergy[1], -999 ) )  }

   "set Flexibility summary results for 2025+ codes (w/o EDR)"  Proj:Action =    ; added for 2025+ - SAC 11/27/23
      {  if (CompCodeBase < 2022) then  UNCHANGED
         else  EvalRulelist( "CARes_FlexibilitySummary_East" )  endif  }

   "Set Proj:ResultSummary[3]:UnscaledPFlxPVRatio"   Proj:ResultSummary[3]:UnscaledPFlxPVRatio  = {
         if (IfValidAnd( ScalePropPVResults > 0.5 )==0 .OR.
             IfValidAnd( MaxPropPVRatio >= 0 )==0 .OR.
             IfValidAnd( RunResultsE[13]:PFlxElecEnergy[1] < 0 )==0 .OR.
             LocalStatus( RunResultsE[10]:PFlxElecEnergy[1] ) < 1) then  UNDEFINED
         else if (CompCodeBase == 2016)
         then  (-1 * RunResultsE[13]:PFlxElecEnergy[1] / min( 1, ValidOr( PVWDCSizeMultiplier[1], 1 ) )) /
                RunResultsE[10]:PFlxElecEnergy[1]
         else if (CompCodeBase >= 2019)
         then  (-1 * RunResultsE[13]:PFlxElecEnergy[1] / min( 1, ValidOr( PVWDCSizeMultiplier[1], 1 ) )) /
               (RunResultsE[10]:PFlxElecEnergy[1] - RunResultsE[13]:PFlxElecEnergy[1])
         else  UNDEFINED  endif endif endif  }

;            "debugging"  Proj:Action = {  PostMessageToLog( "      E: UnscaledPFlxPVRatio: %g", ValidOr( ResultSummary[3]:UnscaledPFlxPVRatio, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      E: ValidOr( UnscaledPFlxPVRatio, 0 ): %g", ValidOr( ValidOr( ResultSummary[3]:UnscaledPFlxPVRatio, 0 ), -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      E: ValidOr( MaxPropPVRatio,      1 ): %g", ValidOr( ValidOr( MaxPropPVRatio, 1 ), -999 ) )  }

;            "Debug log msg"   Proj:Action  = {
;               if (IfValidAnd( ScalePropPVResults > 0.5 )==0 .OR. IfValidAnd( MaxPropPVRatio >= 0 )==0 .OR. IfValidAnd( RunResultsE[13]:PFlxElecEnergy[1] < 0 )==0) then  UNCHANGED
;               else if (CompCodeBase == 2016)
;               then  if (IfValidAnd( RunResultsE[10]:PFlxElecEnergy[1] != 0 )==0)
;                     then  PostMessageToLog( "   E: Scale PV check:   currentPVRatio = <infinite>  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                                                                                             ResultSummary[3]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     else  PostMessageToLog( "   E: Scale PV check:   currentPVRatio = %.3f  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                 (-1 * RunResultsE[13]:PFlxElecEnergy[1]) / RunResultsE[10]:PFlxElecEnergy[1], ResultSummary[3]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     endif
;               else if (CompCodeBase >= 2019)
;               then  if (ValidOr( RunResultsE[10]:PFlxElecEnergy[1], -999 ) == ValidOr( RunResultsE[13]:PFlxElecEnergy[1], 999 ))
;                     then  PostMessageToLog( "   E: Scale PV check:   currentPVRatio = <infinite>  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                                                                                             ResultSummary[3]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     else  PostMessageToLog( "   E: Scale PV check:   currentPVRatio = %.3f  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                 (-1 * RunResultsE[13]:PFlxElecEnergy[1]) / (RunResultsE[10]:PFlxElecEnergy[1] - RunResultsE[13]:PFlxElecEnergy[1]), ResultSummary[3]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     endif
;               else  UNCHANGED  endif endif endif  }

   "Init PFlxPVScaleFactor"   Proj:ResultSummary[3]:PFlxPVScaleFactor  = {  UNDEFINED  }
   ; SAC 4/17/17 - added logic to prevent scaling PropFlex PV here if Target EDR processing is activated
   ; SAC 4/27/17 - added 2016 logic (PV not added into Total @ this point
   "Scale PropFlex PV & Battery if necessary"      Proj:Action  = {
         if (ValidOr( ResultSummary[3]:UnscaledPFlxPVRatio, -999 ) <= ValidOr( MaxPropPVRatio, 1 )) then  UNCHANGED
         else if (CompCodeBase >= 2019)
         then  if (LocalStatus( TargetDesignRtg ) > 0)
               then  UNCHANGED
            ;   then  if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0) then  UNCHANGED   - removed NSC adjustment during TEDR processing since final run ultimately will be clipped @ the max PV size
            ;         else  EvalRulelist( "CARes_PropFlexSummary_TargetEDR_NetSurpComp" )  endif
               else  EvalRulelist( "CARes_PropFlexSummary_E_ScalePV" )  endif
         else  UNCHANGED  endif endif  }
   ; SAC 6/13/17 - END OF - port PV scaling logic from 'CARes_PropFlexSummary' rulelist

  ; SAC 10/2/17 - added rules to calc carbon emissions by enduse
   "Call rulelist to calculate PropFlex-E run carbon emissions"   Proj:Action    = {
         if (EnergyCodeYearNum < 2019) then  UNCHANGED
         else  EvalRulelist( "CARes_PropFlexResults_Carbon_E" )  endif  }
END

;*************************************************************************   - SAC 6/25/13
RULELIST "CARes_PropFlexSummary_S" 1 0 1 1
;*************************************************************************

   ; SAC 6/13/17 - port PV scaling logic from 'CARes_PropFlexSummary' rulelist
;            "debugging"  Proj:Action = {  PostMessageToLog( "      ScalePropPVResults: %g", ValidOr( ScalePropPVResults, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      MaxPropPVRatio:     %g", ValidOr( MaxPropPVRatio, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      S: RunResultsS[13]:PFlxElecEnergy[1]: %g", ValidOr( RunResultsS[13]:PFlxElecEnergy[1], -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      S: RunResultsS[10]:PFlxElecEnergy[1]: %g", ValidOr( RunResultsS[10]:PFlxElecEnergy[1], -999 ) )  }

   "set Flexibility summary results for 2025+ codes (w/o EDR)"  Proj:Action =    ; added for 2025+ - SAC 11/27/23
      {  if (CompCodeBase < 2022) then  UNCHANGED
         else  EvalRulelist( "CARes_FlexibilitySummary_South" )  endif  }

   "Set Proj:ResultSummary[4]:UnscaledPFlxPVRatio"   Proj:ResultSummary[4]:UnscaledPFlxPVRatio  = {
         if (IfValidAnd( ScalePropPVResults > 0.5 )==0 .OR.
             IfValidAnd( MaxPropPVRatio >= 0 )==0 .OR.
             IfValidAnd( RunResultsS[13]:PFlxElecEnergy[1] < 0 )==0 .OR.
             LocalStatus( RunResultsS[10]:PFlxElecEnergy[1] ) < 1) then  UNDEFINED
         else if (CompCodeBase == 2016)
         then  (-1 * RunResultsS[13]:PFlxElecEnergy[1] / min( 1, ValidOr( PVWDCSizeMultiplier[1], 1 ) )) /
                RunResultsS[10]:PFlxElecEnergy[1]
         else if (CompCodeBase >= 2019)
         then  (-1 * RunResultsS[13]:PFlxElecEnergy[1] / min( 1, ValidOr( PVWDCSizeMultiplier[1], 1 ) )) /
               (RunResultsS[10]:PFlxElecEnergy[1] - RunResultsS[13]:PFlxElecEnergy[1])
         else  UNDEFINED  endif endif endif  }

;            "debugging"  Proj:Action = {  PostMessageToLog( "      S: UnscaledPFlxPVRatio: %g", ValidOr( ResultSummary[4]:UnscaledPFlxPVRatio, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      S: ValidOr( UnscaledPFlxPVRatio, 0 ): %g", ValidOr( ValidOr( ResultSummary[4]:UnscaledPFlxPVRatio, 0 ), -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      S: ValidOr( MaxPropPVRatio,      1 ): %g", ValidOr( ValidOr( MaxPropPVRatio, 1 ), -999 ) )  }

;            "Debug log msg"   Proj:Action  = {
;               if (IfValidAnd( ScalePropPVResults > 0.5 )==0 .OR. IfValidAnd( MaxPropPVRatio >= 0 )==0 .OR. IfValidAnd( RunResultsS[13]:PFlxElecEnergy[1] < 0 )==0) then  UNCHANGED
;               else if (CompCodeBase == 2016)
;               then  if (IfValidAnd( RunResultsS[10]:PFlxElecEnergy[1] != 0 )==0)
;                     then  PostMessageToLog( "   S: Scale PV check:   currentPVRatio = <infinite>  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                                                                                             ResultSummary[4]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     else  PostMessageToLog( "   S: Scale PV check:   currentPVRatio = %.3f  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                 (-1 * RunResultsS[13]:PFlxElecEnergy[1]) / RunResultsS[10]:PFlxElecEnergy[1], ResultSummary[4]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     endif
;               else if (CompCodeBase >= 2019)
;               then  if (ValidOr( RunResultsS[10]:PFlxElecEnergy[1], -999 ) == ValidOr( RunResultsS[13]:PFlxElecEnergy[1], 999 ))
;                     then  PostMessageToLog( "   S: Scale PV check:   currentPVRatio = <infinite>  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                                                                                             ResultSummary[4]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     else  PostMessageToLog( "   S: Scale PV check:   currentPVRatio = %.3f  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                 (-1 * RunResultsS[13]:PFlxElecEnergy[1]) / (RunResultsS[10]:PFlxElecEnergy[1] - RunResultsS[13]:PFlxElecEnergy[1]), ResultSummary[4]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     endif
;               else  UNCHANGED  endif endif endif  }

   "Init PFlxPVScaleFactor"   Proj:ResultSummary[4]:PFlxPVScaleFactor  = {  UNDEFINED  }
   ; SAC 4/17/17 - added logic to prevent scaling PropFlex PV here if Target EDR processing is activated
   ; SAC 4/27/17 - added 2016 logic (PV not added into Total @ this point
   "Scale PropFlex PV & Battery if necessary"      Proj:Action  = {
         if (ValidOr( ResultSummary[4]:UnscaledPFlxPVRatio, -999 ) <= ValidOr( MaxPropPVRatio, 1 )) then  UNCHANGED
         else if (CompCodeBase >= 2019)
         then  if (LocalStatus( TargetDesignRtg ) > 0)
               then  UNCHANGED
            ;   then  if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0) then  UNCHANGED   - removed NSC adjustment during TEDR processing since final run ultimately will be clipped @ the max PV size
            ;         else  EvalRulelist( "CARes_PropFlexSummary_TargetEDR_NetSurpComp" )  endif
               else  EvalRulelist( "CARes_PropFlexSummary_S_ScalePV" )  endif
         else  UNCHANGED  endif endif  }
   ; SAC 6/13/17 - END OF - port PV scaling logic from 'CARes_PropFlexSummary' rulelist

  ; SAC 10/2/17 - added rules to calc carbon emissions by enduse
   "Call rulelist to calculate PropFlex-S run carbon emissions"   Proj:Action    = {
         if (EnergyCodeYearNum < 2019) then  UNCHANGED
         else  EvalRulelist( "CARes_PropFlexResults_Carbon_S" )  endif  }
END

;*************************************************************************   - SAC 6/25/13
RULELIST "CARes_PropFlexSummary_W" 1 0 1 1
;*************************************************************************

   ; SAC 6/13/17 - port PV scaling logic from 'CARes_PropFlexSummary' rulelist
;            "debugging"  Proj:Action = {  PostMessageToLog( "      ScalePropPVResults: %g", ValidOr( ScalePropPVResults, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      MaxPropPVRatio:     %g", ValidOr( MaxPropPVRatio, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      W: RunResultsW[13]:PFlxElecEnergy[1]: %g", ValidOr( RunResultsW[13]:PFlxElecEnergy[1], -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      W: RunResultsW[10]:PFlxElecEnergy[1]: %g", ValidOr( RunResultsW[10]:PFlxElecEnergy[1], -999 ) )  }

   "set Flexibility summary results for 2025+ codes (w/o EDR)"  Proj:Action =    ; added for 2025+ - SAC 11/27/23
      {  if (CompCodeBase < 2022) then  UNCHANGED
         else  EvalRulelist( "CARes_FlexibilitySummary_West" )  endif  }

   "Set Proj:ResultSummary[5]:UnscaledPFlxPVRatio"   Proj:ResultSummary[5]:UnscaledPFlxPVRatio  = {
         if (IfValidAnd( ScalePropPVResults > 0.5 )==0 .OR.
             IfValidAnd( MaxPropPVRatio >= 0 )==0 .OR.
             IfValidAnd( RunResultsW[13]:PFlxElecEnergy[1] < 0 )==0 .OR.
             LocalStatus( RunResultsW[10]:PFlxElecEnergy[1] ) < 1) then  UNDEFINED
         else if (CompCodeBase == 2016)
         then  (-1 * RunResultsW[13]:PFlxElecEnergy[1] / min( 1, ValidOr( PVWDCSizeMultiplier[1], 1 ) )) /
                RunResultsW[10]:PFlxElecEnergy[1]
         else if (CompCodeBase >= 2019)
         then  (-1 * RunResultsW[13]:PFlxElecEnergy[1] / min( 1, ValidOr( PVWDCSizeMultiplier[1], 1 ) )) /
               (RunResultsW[10]:PFlxElecEnergy[1] - RunResultsW[13]:PFlxElecEnergy[1])
         else  UNDEFINED  endif endif endif  }

;            "debugging"  Proj:Action = {  PostMessageToLog( "      W: UnscaledPFlxPVRatio: %g", ValidOr( ResultSummary[5]:UnscaledPFlxPVRatio, -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      W: ValidOr( UnscaledPFlxPVRatio, 0 ): %g", ValidOr( ValidOr( ResultSummary[5]:UnscaledPFlxPVRatio, 0 ), -999 ) )  }
;            "debugging"  Proj:Action = {  PostMessageToLog( "      W: ValidOr( MaxPropPVRatio,      1 ): %g", ValidOr( ValidOr( MaxPropPVRatio, 1 ), -999 ) )  }

;            "Debug log msg"   Proj:Action  = {
;               if (IfValidAnd( ScalePropPVResults > 0.5 )==0 .OR. IfValidAnd( MaxPropPVRatio >= 0 )==0 .OR. IfValidAnd( RunResultsW[13]:PFlxElecEnergy[1] < 0 )==0) then  UNCHANGED
;               else if (CompCodeBase == 2016)
;               then  if (IfValidAnd( RunResultsW[10]:PFlxElecEnergy[1] != 0 )==0)
;                     then  PostMessageToLog( "   W: Scale PV check:   currentPVRatio = <infinite>  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                                                                                             ResultSummary[5]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     else  PostMessageToLog( "   W: Scale PV check:   currentPVRatio = %.3f  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                 (-1 * RunResultsW[13]:PFlxElecEnergy[1]) / RunResultsW[10]:PFlxElecEnergy[1], ResultSummary[5]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     endif
;               else if (CompCodeBase >= 2019)
;               then  if (ValidOr( RunResultsW[10]:PFlxElecEnergy[1], -999 ) == ValidOr( RunResultsW[13]:PFlxElecEnergy[1], 999 ))
;                     then  PostMessageToLog( "   W: Scale PV check:   currentPVRatio = <infinite>  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                                                                                             ResultSummary[5]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     else  PostMessageToLog( "   W: Scale PV check:   currentPVRatio = %.3f  |  Unscld = %.3f  |  Max = %.2f  |  TargetDRtgIterNum = %.0f of Max %.0f  |  PVWDCSizeMultiplier[1] = %.3f",
;                                 (-1 * RunResultsW[13]:PFlxElecEnergy[1]) / (RunResultsW[10]:PFlxElecEnergy[1] - RunResultsW[13]:PFlxElecEnergy[1]), ResultSummary[5]:UnscaledPFlxPVRatio, MaxPropPVRatio, TargetDRtgIterNum, TargetDRtgMaxIter, ValidOr( PVWDCSizeMultiplier[1], -1 ), ValidOr( PVWDCSizeMultiplier[2], -1 ) )
;                     endif
;               else  UNCHANGED  endif endif endif  }

   "Init PFlxPVScaleFactor"   Proj:ResultSummary[5]:PFlxPVScaleFactor  = {  UNDEFINED  }
   ; SAC 4/17/17 - added logic to prevent scaling PropFlex PV here if Target EDR processing is activated
   ; SAC 4/27/17 - added 2016 logic (PV not added into Total @ this point
   "Scale PropFlex PV & Battery if necessary"      Proj:Action  = {
         if (ValidOr( ResultSummary[5]:UnscaledPFlxPVRatio, -999 ) <= ValidOr( MaxPropPVRatio, 1 )) then  UNCHANGED
         else if (CompCodeBase >= 2019)
         then  if (LocalStatus( TargetDesignRtg ) > 0)
               then  UNCHANGED
            ;   then  if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0) then  UNCHANGED   - removed NSC adjustment during TEDR processing since final run ultimately will be clipped @ the max PV size
            ;         else  EvalRulelist( "CARes_PropFlexSummary_TargetEDR_NetSurpComp" )  endif
               else  EvalRulelist( "CARes_PropFlexSummary_W_ScalePV" )  endif
         else  UNCHANGED  endif endif  }
   ; SAC 6/13/17 - END OF - port PV scaling logic from 'CARes_PropFlexSummary' rulelist

  ; SAC 10/2/17 - added rules to calc carbon emissions by enduse
   "Call rulelist to calculate PropFlex-W run carbon emissions"   Proj:Action    = {
         if (EnergyCodeYearNum < 2019) then  UNCHANGED
         else  EvalRulelist( "CARes_PropFlexResults_Carbon_W" )  endif  }
END


;************************************************************************* - SAC 6/13/17 - based on 'CARes_PropFlexSummary_ScalePV'
RULELIST "CARes_PropFlexSummary_N_ScalePV" 1 0 1 1
;*************************************************************************
   "Set PFlxPVScaleFactor (N)"    Proj:ResultSummary[2]:PFlxPVScaleFactor  = {
         (MaxPropPVRatio * (RunResultsN[10]:PFlxElecEnergy[1] - RunResultsN[13]:PFlxElecEnergy[1]))
         / (-1 * RunResultsN[13]:PFlxElecEnergy[1])  }
;"debugging"  Proj:Action = {  PostMessageToLog( "   N: Scaling PV: %g", ResultSummary[2]:PFlxPVScaleFactor )  }

   ; SAC 4/30/17 - added NetSurpPFlxPVProduction to implement net surplus compensation
   "Set Proj:ResultSummary[2]:NetSurpPFlxPVProduction (N)"   Proj:ResultSummary[2]:NetSurpPFlxPVProduction  = {
         (-1 * RunResultsN[13]:PFlxElecEnergy[1] * ValidOr( CondFloorArea, 0 ) / 3.412) * (1 - ResultSummary[2]:PFlxPVScaleFactor)  }

;   ; first STORE PV, Battery and Totals BEFORE scaling
;	"Store pre-scaled PV EnergyUse:PFlxTDV[4]"		Proj:RunResultsN[13]:PFlxTDV[4]	= {	RunResultsN[13]:PFlxTDV[1]  }
;	"Store pre-scaled Batt EnergyUse:PFlxTDV[4]"	Proj:RunResultsN[14]:PFlxTDV[4]	= {	RunResultsN[14]:PFlxTDV[1]  }
;	"Store pre-scaled Total EnergyUse:PFlxTDV[4]"	Proj:RunResultsN[10]:PFlxTDV[4]	= {	RunResultsN[10]:PFlxTDV[1]  }

   ; then REMOVE effect of PV on Totals
   "Subtrct PV frm Elec   - Total (N)"   Proj:RunResultsN[10]:PFlxElecEnergy[1]   = {  RunResultsN[10]:PFlxElecEnergy[1]  - RunResultsN[13]:PFlxElecEnergy[1]   }  ; - RunResultsN[14]:PFlxElecEnergy[1]   }
   "Subtrct PV frm TOTAL  - Total (N)"   Proj:RunResultsN[10]:PFlxTotalEnergy[1]  = {  RunResultsN[10]:PFlxTotalEnergy[1] - RunResultsN[13]:PFlxTotalEnergy[1]  }  ; - RunResultsN[14]:PFlxTotalEnergy[1]  }
   "Subtrct PV frm Elec   - Total (N)"   Proj:RunResultsN[10]:PFlxElecTDV[1]      = {  RunResultsN[10]:PFlxElecTDV[1]     - RunResultsN[13]:PFlxElecTDV[1]      }  ; - RunResultsN[14]:PFlxElecTDV[1]      }
   "Subtrct PV frm TOTAL  - Total (N)"   Proj:RunResultsN[10]:PFlxTDV[1]      = {  RunResultsN[10]:PFlxTDV[1]     - RunResultsN[13]:PFlxTDV[1]      }  ; - RunResultsN[14]:PFlxTDV[1]      }
   "Subtrct PV frm TOTAL  - Src   (N)"   Proj:RunResultsN[10]:PFlxSrc[1]      = {  RunResultsN[10]:PFlxSrc[1]     - RunResultsN[13]:PFlxSrc[1]      }  ; - RunResultsN[14]:PFlxSrc[1]      }
   "Subtrct PV frm Elec Demand (N)"      Proj:RunResultsN[10]:PFlxElecDemand[1]   = {  RunResultsN[10]:PFlxElecDemand[1]  - RunResultsN[13]:PFlxElecDemand[1]   }  ; - RunResultsN[14]:PFlxElecDemand[1]   }

   ; apply PV scaling factor
   "Scale energy use - Elec   - PV (N)"       Proj:RunResultsN[13]:PFlxElecEnergy[1]   = {  ResultSummary[2]:PFlxPVScaleFactor * RunResultsN[13]:PFlxElecEnergy[1]   }
   "Scale energy use - TOTAL  - PV (N)"       Proj:RunResultsN[13]:PFlxTotalEnergy[1]  = {  ResultSummary[2]:PFlxPVScaleFactor * RunResultsN[13]:PFlxTotalEnergy[1]  }
;   "Scale energy use - Elec   - Battery (N)"  Proj:RunResultsN[14]:PFlxElecEnergy[1]   = {  ResultSummary[2]:PFlxPVScaleFactor * RunResultsN[14]:PFlxElecEnergy[1]   }
;   "Scale energy use - TOTAL  - Battery (N)"  Proj:RunResultsN[14]:PFlxTotalEnergy[1]  = {  ResultSummary[2]:PFlxPVScaleFactor * RunResultsN[14]:PFlxTotalEnergy[1]  }
   "Scale TDV - Elec   - PV (N)"              Proj:RunResultsN[13]:PFlxElecTDV[1]      = {  ResultSummary[2]:PFlxPVScaleFactor * RunResultsN[13]:PFlxElecTDV[1]      }
   "Scale TDV - TOTAL  - PV (N)"              Proj:RunResultsN[13]:PFlxTDV[1]      = {  ResultSummary[2]:PFlxPVScaleFactor * RunResultsN[13]:PFlxTDV[1]      }
   "Scale Src - TOTAL  - PV (N)"              Proj:RunResultsN[13]:PFlxSrc[1]      = {  ResultSummary[2]:PFlxPVScaleFactor * RunResultsN[13]:PFlxSrc[1]      }
   "Scale Elec Demand  - PV (N)"              Proj:RunResultsN[13]:PFlxElecDemand[1]   = {  ResultSummary[2]:PFlxPVScaleFactor * RunResultsN[13]:PFlxElecDemand[1]   }
;   "Scale TDV - Elec   - Battery (N)"         Proj:RunResultsN[14]:PFlxElecTDV[1]      = {  ResultSummary[2]:PFlxPVScaleFactor * RunResultsN[14]:PFlxElecTDV[1]      }
;   "Scale TDV - TOTAL  - Battery (N)"         Proj:RunResultsN[14]:PFlxTDV[1]      = {  ResultSummary[2]:PFlxPVScaleFactor * RunResultsN[14]:PFlxTDV[1]      }
;   "Scale Elec Demand  - Battery (N)"         Proj:RunResultsN[14]:PFlxElecDemand[1]   = {  ResultSummary[2]:PFlxPVScaleFactor * RunResultsN[14]:PFlxElecDemand[1]   }

   ; apply Net Surplus Compensation to PV TDV results
;"debugging"  Proj:Action = {  if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR. IfValidAnd( ResultSummary[2]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
;                              else  PostMessageToLog( "   N: NSC adjustment of %g (%g * %g) to scaled PV TDV of %g", ResultSummary[2]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj, ResultSummary[2]:NetSurpPFlxPVProduction, NetEnergyMeteringNSCAdj, (RunResultsN[13]:PFlxElecTDV[1] * CondFloorArea) )  endif  }
   "Add NSC to TDV - Elec   - PV (N)"   Proj:RunResultsN[13]:PFlxElecTDV[1]  = {
         if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR.
             IfValidAnd( ResultSummary[2]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
         else  RunResultsN[13]:PFlxElecTDV[1] - (ResultSummary[2]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj / CondFloorArea)  endif  }
   "Add NSC to TDV - TOTAL  - PV (N)"   Proj:RunResultsN[13]:PFlxTDV[1]  = {
         if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR.
             IfValidAnd( ResultSummary[2]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
         else  RunResultsN[13]:PFlxTDV[1] - (ResultSummary[2]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj / CondFloorArea)  endif  }

   ; RE-apply PV to Totals
   "Restore PV to Elec   - Total (N)"    Proj:RunResultsN[10]:PFlxElecEnergy[1]   = {  RunResultsN[10]:PFlxElecEnergy[1]  + RunResultsN[13]:PFlxElecEnergy[1]   }  ; + RunResultsN[14]:PFlxElecEnergy[1]   }
   "Restore PV to TOTAL  - Total (N)"    Proj:RunResultsN[10]:PFlxTotalEnergy[1]  = {  RunResultsN[10]:PFlxTotalEnergy[1] + RunResultsN[13]:PFlxTotalEnergy[1]  }  ; + RunResultsN[14]:PFlxTotalEnergy[1]  }
   "Restore PV to Elec   - Total (N)"    Proj:RunResultsN[10]:PFlxElecTDV[1]      = {  RunResultsN[10]:PFlxElecTDV[1]     + RunResultsN[13]:PFlxElecTDV[1]      }  ; + RunResultsN[14]:PFlxElecTDV[1]      }
   "Restore PV to TOTAL  - Total (N)"    Proj:RunResultsN[10]:PFlxTDV[1]      = {  RunResultsN[10]:PFlxTDV[1]     + RunResultsN[13]:PFlxTDV[1]      }  ; + RunResultsN[14]:PFlxTDV[1]      }
   "Restore PV to TOTAL  - Src   (N)"    Proj:RunResultsN[10]:PFlxSrc[1]      = {  RunResultsN[10]:PFlxSrc[1]     + RunResultsN[13]:PFlxSrc[1]      }  ; + RunResultsN[14]:PFlxSrc[1]      }
   "Restore PV to Elec Demand (N)"       Proj:RunResultsN[10]:PFlxElecDemand[1]   = {  RunResultsN[10]:PFlxElecDemand[1]  + RunResultsN[13]:PFlxElecDemand[1]   }  ; + RunResultsN[14]:PFlxElecDemand[1]   }
END

;************************************************************************* - SAC 6/13/17 - based on 'CARes_PropFlexSummary_ScalePV'
RULELIST "CARes_PropFlexSummary_E_ScalePV" 1 0 1 1
;*************************************************************************
   "Set PFlxPVScaleFactor (E)"    Proj:ResultSummary[3]:PFlxPVScaleFactor  = {
         (MaxPropPVRatio * (RunResultsE[10]:PFlxElecEnergy[1] - RunResultsE[13]:PFlxElecEnergy[1]))
         / (-1 * RunResultsE[13]:PFlxElecEnergy[1])  }
;"debugging"  Proj:Action = {  PostMessageToLog( "   E: Scaling PV: %g", ResultSummary[3]:PFlxPVScaleFactor )  }

   ; SAC 4/30/17 - added NetSurpPFlxPVProduction to implement net surplus compensation
   "Set Proj:ResultSummary[3]:NetSurpPFlxPVProduction (E)"   Proj:ResultSummary[3]:NetSurpPFlxPVProduction  = {
         (-1 * RunResultsE[13]:PFlxElecEnergy[1] * ValidOr( CondFloorArea, 0 ) / 3.412) * (1 - ResultSummary[3]:PFlxPVScaleFactor)  }

;   ; first STORE PV, Battery and Totals BEFORE scaling
;	"Store pre-scaled PV EnergyUse:PFlxTDV[4]"		Proj:RunResultsE[13]:PFlxTDV[4]	= {	RunResultsE[13]:PFlxTDV[1]  }
;	"Store pre-scaled Batt EnergyUse:PFlxTDV[4]"	Proj:RunResultsE[14]:PFlxTDV[4]	= {	RunResultsE[14]:PFlxTDV[1]  }
;	"Store pre-scaled Total EnergyUse:PFlxTDV[4]"	Proj:RunResultsE[10]:PFlxTDV[4]	= {	RunResultsE[10]:PFlxTDV[1]  }

   ; then REMOVE effect of PV on Totals
   "Subtrct PV frm Elec   - Total (E)"   Proj:RunResultsE[10]:PFlxElecEnergy[1]   = {  RunResultsE[10]:PFlxElecEnergy[1]  - RunResultsE[13]:PFlxElecEnergy[1]   }  ; - RunResultsE[14]:PFlxElecEnergy[1]   }
   "Subtrct PV frm TOTAL  - Total (E)"   Proj:RunResultsE[10]:PFlxTotalEnergy[1]  = {  RunResultsE[10]:PFlxTotalEnergy[1] - RunResultsE[13]:PFlxTotalEnergy[1]  }  ; - RunResultsE[14]:PFlxTotalEnergy[1]  }
   "Subtrct PV frm Elec   - Total (E)"   Proj:RunResultsE[10]:PFlxElecTDV[1]      = {  RunResultsE[10]:PFlxElecTDV[1]     - RunResultsE[13]:PFlxElecTDV[1]      }  ; - RunResultsE[14]:PFlxElecTDV[1]      }
   "Subtrct PV frm TOTAL  - Total (E)"   Proj:RunResultsE[10]:PFlxTDV[1]      = {  RunResultsE[10]:PFlxTDV[1]     - RunResultsE[13]:PFlxTDV[1]      }  ; - RunResultsE[14]:PFlxTDV[1]      }
   "Subtrct PV frm TOTAL  - Src   (E)"   Proj:RunResultsE[10]:PFlxSrc[1]      = {  RunResultsE[10]:PFlxSrc[1]     - RunResultsE[13]:PFlxSrc[1]      }  ; - RunResultsE[14]:PFlxSrc[1]      }
   "Subtrct PV frm Elec Demand (E)"      Proj:RunResultsE[10]:PFlxElecDemand[1]   = {  RunResultsE[10]:PFlxElecDemand[1]  - RunResultsE[13]:PFlxElecDemand[1]   }  ; - RunResultsE[14]:PFlxElecDemand[1]   }

   ; apply PV scaling factor
   "Scale energy use - Elec   - PV (E)"       Proj:RunResultsE[13]:PFlxElecEnergy[1]   = {  ResultSummary[3]:PFlxPVScaleFactor * RunResultsE[13]:PFlxElecEnergy[1]   }
   "Scale energy use - TOTAL  - PV (E)"       Proj:RunResultsE[13]:PFlxTotalEnergy[1]  = {  ResultSummary[3]:PFlxPVScaleFactor * RunResultsE[13]:PFlxTotalEnergy[1]  }
;   "Scale energy use - Elec   - Battery (E)"  Proj:RunResultsE[14]:PFlxElecEnergy[1]   = {  ResultSummary[3]:PFlxPVScaleFactor * RunResultsE[14]:PFlxElecEnergy[1]   }
;   "Scale energy use - TOTAL  - Battery (E)"  Proj:RunResultsE[14]:PFlxTotalEnergy[1]  = {  ResultSummary[3]:PFlxPVScaleFactor * RunResultsE[14]:PFlxTotalEnergy[1]  }
   "Scale TDV - Elec   - PV (E)"              Proj:RunResultsE[13]:PFlxElecTDV[1]      = {  ResultSummary[3]:PFlxPVScaleFactor * RunResultsE[13]:PFlxElecTDV[1]      }
   "Scale TDV - TOTAL  - PV (E)"              Proj:RunResultsE[13]:PFlxTDV[1]      = {  ResultSummary[3]:PFlxPVScaleFactor * RunResultsE[13]:PFlxTDV[1]      }
   "Scale Src - TOTAL  - PV (E)"              Proj:RunResultsE[13]:PFlxSrc[1]      = {  ResultSummary[3]:PFlxPVScaleFactor * RunResultsE[13]:PFlxSrc[1]      }
   "Scale Elec Demand  - PV (E)"              Proj:RunResultsE[13]:PFlxElecDemand[1]   = {  ResultSummary[3]:PFlxPVScaleFactor * RunResultsE[13]:PFlxElecDemand[1]   }
;   "Scale TDV - Elec   - Battery (E)"         Proj:RunResultsE[14]:PFlxElecTDV[1]      = {  ResultSummary[3]:PFlxPVScaleFactor * RunResultsE[14]:PFlxElecTDV[1]      }
;   "Scale TDV - TOTAL  - Battery (E)"         Proj:RunResultsE[14]:PFlxTDV[1]      = {  ResultSummary[3]:PFlxPVScaleFactor * RunResultsE[14]:PFlxTDV[1]      }
;   "Scale Elec Demand  - Battery (E)"         Proj:RunResultsE[14]:PFlxElecDemand[1]   = {  ResultSummary[3]:PFlxPVScaleFactor * RunResultsE[14]:PFlxElecDemand[1]   }

   ; apply Net Surplus Compensation to PV TDV results
;"debugging"  Proj:Action = {  if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR. IfValidAnd( ResultSummary[3]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
;                              else  PostMessageToLog( "   E: NSC adjustment of %g (%g * %g) to scaled PV TDV of %g", ResultSummary[3]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj, ResultSummary[3]:NetSurpPFlxPVProduction, NetEnergyMeteringNSCAdj, (RunResultsE[13]:PFlxElecTDV[1] * CondFloorArea) )  endif  }
   "Add NSC to TDV - Elec   - PV (E)"   Proj:RunResultsE[13]:PFlxElecTDV[1]  = {
         if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR.
             IfValidAnd( ResultSummary[3]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
         else  RunResultsE[13]:PFlxElecTDV[1] - (ResultSummary[3]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj / CondFloorArea)  endif  }
   "Add NSC to TDV - TOTAL  - PV (E)"   Proj:RunResultsE[13]:PFlxTDV[1]  = {
         if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR.
             IfValidAnd( ResultSummary[3]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
         else  RunResultsE[13]:PFlxTDV[1] - (ResultSummary[3]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj / CondFloorArea)  endif  }

   ; RE-apply PV to Totals
   "Restore PV to Elec   - Total (E)"    Proj:RunResultsE[10]:PFlxElecEnergy[1]   = {  RunResultsE[10]:PFlxElecEnergy[1]  + RunResultsE[13]:PFlxElecEnergy[1]   }  ; + RunResultsE[14]:PFlxElecEnergy[1]   }
   "Restore PV to TOTAL  - Total (E)"    Proj:RunResultsE[10]:PFlxTotalEnergy[1]  = {  RunResultsE[10]:PFlxTotalEnergy[1] + RunResultsE[13]:PFlxTotalEnergy[1]  }  ; + RunResultsE[14]:PFlxTotalEnergy[1]  }
   "Restore PV to Elec   - Total (E)"    Proj:RunResultsE[10]:PFlxElecTDV[1]      = {  RunResultsE[10]:PFlxElecTDV[1]     + RunResultsE[13]:PFlxElecTDV[1]      }  ; + RunResultsE[14]:PFlxElecTDV[1]      }
   "Restore PV to TOTAL  - Total (E)"    Proj:RunResultsE[10]:PFlxTDV[1]      = {  RunResultsE[10]:PFlxTDV[1]     + RunResultsE[13]:PFlxTDV[1]      }  ; + RunResultsE[14]:PFlxTDV[1]      }
   "Restore PV to TOTAL  - Src   (E)"    Proj:RunResultsE[10]:PFlxSrc[1]      = {  RunResultsE[10]:PFlxSrc[1]     + RunResultsE[13]:PFlxSrc[1]      }  ; + RunResultsE[14]:PFlxSrc[1]      }
   "Restore PV to Elec Demand (E)"       Proj:RunResultsE[10]:PFlxElecDemand[1]   = {  RunResultsE[10]:PFlxElecDemand[1]  + RunResultsE[13]:PFlxElecDemand[1]   }  ; + RunResultsE[14]:PFlxElecDemand[1]   }
END

;************************************************************************* - SAC 6/13/17 - based on 'CARes_PropFlexSummary_ScalePV'
RULELIST "CARes_PropFlexSummary_S_ScalePV" 1 0 1 1
;*************************************************************************
   "Set PFlxPVScaleFactor (S)"    Proj:ResultSummary[4]:PFlxPVScaleFactor  = {
         (MaxPropPVRatio * (RunResultsS[10]:PFlxElecEnergy[1] - RunResultsS[13]:PFlxElecEnergy[1]))
         / (-1 * RunResultsS[13]:PFlxElecEnergy[1])  }
;"debugging"  Proj:Action = {  PostMessageToLog( "   S: Scaling PV: %g", ResultSummary[4]:PFlxPVScaleFactor )  }

   ; SAC 4/30/17 - added NetSurpPFlxPVProduction to implement net surplus compensation
   "Set Proj:ResultSummary[4]:NetSurpPFlxPVProduction (S)"   Proj:ResultSummary[4]:NetSurpPFlxPVProduction  = {
         (-1 * RunResultsS[13]:PFlxElecEnergy[1] * ValidOr( CondFloorArea, 0 ) / 3.412) * (1 - ResultSummary[4]:PFlxPVScaleFactor)  }

;   ; first STORE PV, Battery and Totals BEFORE scaling
;	"Store pre-scaled PV EnergyUse:PFlxTDV[4]"		Proj:RunResultsS[13]:PFlxTDV[4]	= {	RunResultsS[13]:PFlxTDV[1]  }
;	"Store pre-scaled Batt EnergyUse:PFlxTDV[4]"	Proj:RunResultsS[14]:PFlxTDV[4]	= {	RunResultsS[14]:PFlxTDV[1]  }
;	"Store pre-scaled Total EnergyUse:PFlxTDV[4]"	Proj:RunResultsS[10]:PFlxTDV[4]	= {	RunResultsS[10]:PFlxTDV[1]  }

   ; then REMOVE effect of PV on Totals
   "Subtrct PV frm Elec   - Total (S)"   Proj:RunResultsS[10]:PFlxElecEnergy[1]   = {  RunResultsS[10]:PFlxElecEnergy[1]  - RunResultsS[13]:PFlxElecEnergy[1]   }  ; - RunResultsS[14]:PFlxElecEnergy[1]   }
   "Subtrct PV frm TOTAL  - Total (S)"   Proj:RunResultsS[10]:PFlxTotalEnergy[1]  = {  RunResultsS[10]:PFlxTotalEnergy[1] - RunResultsS[13]:PFlxTotalEnergy[1]  }  ; - RunResultsS[14]:PFlxTotalEnergy[1]  }
   "Subtrct PV frm Elec   - Total (S)"   Proj:RunResultsS[10]:PFlxElecTDV[1]      = {  RunResultsS[10]:PFlxElecTDV[1]     - RunResultsS[13]:PFlxElecTDV[1]      }  ; - RunResultsS[14]:PFlxElecTDV[1]      }
   "Subtrct PV frm TOTAL  - Total (S)"   Proj:RunResultsS[10]:PFlxTDV[1]      = {  RunResultsS[10]:PFlxTDV[1]     - RunResultsS[13]:PFlxTDV[1]      }  ; - RunResultsS[14]:PFlxTDV[1]      }
   "Subtrct PV frm TOTAL  - Src   (S)"   Proj:RunResultsS[10]:PFlxSrc[1]      = {  RunResultsS[10]:PFlxSrc[1]     - RunResultsS[13]:PFlxSrc[1]      }  ; - RunResultsS[14]:PFlxSrc[1]      }
   "Subtrct PV frm Elec Demand (S)"      Proj:RunResultsS[10]:PFlxElecDemand[1]   = {  RunResultsS[10]:PFlxElecDemand[1]  - RunResultsS[13]:PFlxElecDemand[1]   }  ; - RunResultsS[14]:PFlxElecDemand[1]   }

   ; apply PV scaling factor
   "Scale energy use - Elec   - PV (S)"       Proj:RunResultsS[13]:PFlxElecEnergy[1]   = {  ResultSummary[4]:PFlxPVScaleFactor * RunResultsS[13]:PFlxElecEnergy[1]   }
   "Scale energy use - TOTAL  - PV (S)"       Proj:RunResultsS[13]:PFlxTotalEnergy[1]  = {  ResultSummary[4]:PFlxPVScaleFactor * RunResultsS[13]:PFlxTotalEnergy[1]  }
;   "Scale energy use - Elec   - Battery (S)"  Proj:RunResultsS[14]:PFlxElecEnergy[1]   = {  ResultSummary[4]:PFlxPVScaleFactor * RunResultsS[14]:PFlxElecEnergy[1]   }
;   "Scale energy use - TOTAL  - Battery (S)"  Proj:RunResultsS[14]:PFlxTotalEnergy[1]  = {  ResultSummary[4]:PFlxPVScaleFactor * RunResultsS[14]:PFlxTotalEnergy[1]  }
   "Scale TDV - Elec   - PV (S)"              Proj:RunResultsS[13]:PFlxElecTDV[1]      = {  ResultSummary[4]:PFlxPVScaleFactor * RunResultsS[13]:PFlxElecTDV[1]      }
   "Scale TDV - TOTAL  - PV (S)"              Proj:RunResultsS[13]:PFlxTDV[1]      = {  ResultSummary[4]:PFlxPVScaleFactor * RunResultsS[13]:PFlxTDV[1]      }
   "Scale Src - TOTAL  - PV (S)"              Proj:RunResultsS[13]:PFlxSrc[1]      = {  ResultSummary[4]:PFlxPVScaleFactor * RunResultsS[13]:PFlxSrc[1]      }
   "Scale Elec Demand  - PV (S)"              Proj:RunResultsS[13]:PFlxElecDemand[1]   = {  ResultSummary[4]:PFlxPVScaleFactor * RunResultsS[13]:PFlxElecDemand[1]   }
;   "Scale TDV - Elec   - Battery (S)"         Proj:RunResultsS[14]:PFlxElecTDV[1]      = {  ResultSummary[4]:PFlxPVScaleFactor * RunResultsS[14]:PFlxElecTDV[1]      }
;   "Scale TDV - TOTAL  - Battery (S)"         Proj:RunResultsS[14]:PFlxTDV[1]      = {  ResultSummary[4]:PFlxPVScaleFactor * RunResultsS[14]:PFlxTDV[1]      }
;   "Scale Elec Demand  - Battery (S)"         Proj:RunResultsS[14]:PFlxElecDemand[1]   = {  ResultSummary[4]:PFlxPVScaleFactor * RunResultsS[14]:PFlxElecDemand[1]   }

   ; apply Net Surplus Compensation to PV TDV results
;"debugging"  Proj:Action = {  if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR. IfValidAnd( ResultSummary[4]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
;                              else  PostMessageToLog( "   S: NSC adjustment of %g (%g * %g) to scaled PV TDV of %g", ResultSummary[4]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj, ResultSummary[4]:NetSurpPFlxPVProduction, NetEnergyMeteringNSCAdj, (RunResultsS[13]:PFlxElecTDV[1] * CondFloorArea) )  endif  }
   "Add NSC to TDV - Elec   - PV (S)"   Proj:RunResultsS[13]:PFlxElecTDV[1]  = {
         if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR.
             IfValidAnd( ResultSummary[4]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
         else  RunResultsS[13]:PFlxElecTDV[1] - (ResultSummary[4]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj / CondFloorArea)  endif  }
   "Add NSC to TDV - TOTAL  - PV (S)"   Proj:RunResultsS[13]:PFlxTDV[1]  = {
         if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR.
             IfValidAnd( ResultSummary[4]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
         else  RunResultsS[13]:PFlxTDV[1] - (ResultSummary[4]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj / CondFloorArea)  endif  }

   ; RE-apply PV to Totals
   "Restore PV to Elec   - Total (S)"    Proj:RunResultsS[10]:PFlxElecEnergy[1]   = {  RunResultsS[10]:PFlxElecEnergy[1]  + RunResultsS[13]:PFlxElecEnergy[1]   }  ; + RunResultsS[14]:PFlxElecEnergy[1]   }
   "Restore PV to TOTAL  - Total (S)"    Proj:RunResultsS[10]:PFlxTotalEnergy[1]  = {  RunResultsS[10]:PFlxTotalEnergy[1] + RunResultsS[13]:PFlxTotalEnergy[1]  }  ; + RunResultsS[14]:PFlxTotalEnergy[1]  }
   "Restore PV to Elec   - Total (S)"    Proj:RunResultsS[10]:PFlxElecTDV[1]      = {  RunResultsS[10]:PFlxElecTDV[1]     + RunResultsS[13]:PFlxElecTDV[1]      }  ; + RunResultsS[14]:PFlxElecTDV[1]      }
   "Restore PV to TOTAL  - Total (S)"    Proj:RunResultsS[10]:PFlxTDV[1]      = {  RunResultsS[10]:PFlxTDV[1]     + RunResultsS[13]:PFlxTDV[1]      }  ; + RunResultsS[14]:PFlxTDV[1]      }
   "Restore PV to TOTAL  - Src   (S)"    Proj:RunResultsS[10]:PFlxSrc[1]      = {  RunResultsS[10]:PFlxSrc[1]     + RunResultsS[13]:PFlxSrc[1]      }  ; + RunResultsS[14]:PFlxSrc[1]      }
   "Restore PV to Elec Demand (S)"       Proj:RunResultsS[10]:PFlxElecDemand[1]   = {  RunResultsS[10]:PFlxElecDemand[1]  + RunResultsS[13]:PFlxElecDemand[1]   }  ; + RunResultsS[14]:PFlxElecDemand[1]   }
END

;************************************************************************* - SAC 6/13/17 - based on 'CARes_PropFlexSummary_ScalePV'
RULELIST "CARes_PropFlexSummary_W_ScalePV" 1 0 1 1
;*************************************************************************
   "Set PFlxPVScaleFactor (W)"    Proj:ResultSummary[5]:PFlxPVScaleFactor  = {
         (MaxPropPVRatio * (RunResultsW[10]:PFlxElecEnergy[1] - RunResultsW[13]:PFlxElecEnergy[1]))
         / (-1 * RunResultsW[13]:PFlxElecEnergy[1])  }
;"debugging"  Proj:Action = {  PostMessageToLog( "   W: Scaling PV: %g", ResultSummary[5]:PFlxPVScaleFactor )  }

   ; SAC 4/30/17 - added NetSurpPFlxPVProduction to implement net surplus compensation
   "Set Proj:ResultSummary[5]:NetSurpPFlxPVProduction (W)"   Proj:ResultSummary[5]:NetSurpPFlxPVProduction  = {
         (-1 * RunResultsW[13]:PFlxElecEnergy[1] * ValidOr( CondFloorArea, 0 ) / 3.412) * (1 - ResultSummary[5]:PFlxPVScaleFactor)  }

;   ; first STORE PV, Battery and Totals BEFORE scaling
;	"Store pre-scaled PV EnergyUse:PFlxTDV[4]"		Proj:RunResultsW[13]:PFlxTDV[4]	= {	RunResultsW[13]:PFlxTDV[1]  }
;	"Store pre-scaled Batt EnergyUse:PFlxTDV[4]"	Proj:RunResultsW[14]:PFlxTDV[4]	= {	RunResultsW[14]:PFlxTDV[1]  }
;	"Store pre-scaled Total EnergyUse:PFlxTDV[4]"	Proj:RunResultsW[10]:PFlxTDV[4]	= {	RunResultsW[10]:PFlxTDV[1]  }

   ; then REMOVE effect of PV on Totals
   "Subtrct PV frm Elec   - Total (W)"   Proj:RunResultsW[10]:PFlxElecEnergy[1]   = {  RunResultsW[10]:PFlxElecEnergy[1]  - RunResultsW[13]:PFlxElecEnergy[1]   }  ; - RunResultsW[14]:PFlxElecEnergy[1]   }
   "Subtrct PV frm TOTAL  - Total (W)"   Proj:RunResultsW[10]:PFlxTotalEnergy[1]  = {  RunResultsW[10]:PFlxTotalEnergy[1] - RunResultsW[13]:PFlxTotalEnergy[1]  }  ; - RunResultsW[14]:PFlxTotalEnergy[1]  }
   "Subtrct PV frm Elec   - Total (W)"   Proj:RunResultsW[10]:PFlxElecTDV[1]      = {  RunResultsW[10]:PFlxElecTDV[1]     - RunResultsW[13]:PFlxElecTDV[1]      }  ; - RunResultsW[14]:PFlxElecTDV[1]      }
   "Subtrct PV frm TOTAL  - Total (W)"   Proj:RunResultsW[10]:PFlxTDV[1]      = {  RunResultsW[10]:PFlxTDV[1]     - RunResultsW[13]:PFlxTDV[1]      }  ; - RunResultsW[14]:PFlxTDV[1]      }
   "Subtrct PV frm TOTAL  - Src   (W)"   Proj:RunResultsW[10]:PFlxSrc[1]      = {  RunResultsW[10]:PFlxSrc[1]     - RunResultsW[13]:PFlxSrc[1]      }  ; - RunResultsW[14]:PFlxSrc[1]      }
   "Subtrct PV frm Elec Demand (W)"      Proj:RunResultsW[10]:PFlxElecDemand[1]   = {  RunResultsW[10]:PFlxElecDemand[1]  - RunResultsW[13]:PFlxElecDemand[1]   }  ; - RunResultsW[14]:PFlxElecDemand[1]   }

   ; apply PV scaling factor
   "Scale energy use - Elec   - PV (W)"       Proj:RunResultsW[13]:PFlxElecEnergy[1]   = {  ResultSummary[5]:PFlxPVScaleFactor * RunResultsW[13]:PFlxElecEnergy[1]   }
   "Scale energy use - TOTAL  - PV (W)"       Proj:RunResultsW[13]:PFlxTotalEnergy[1]  = {  ResultSummary[5]:PFlxPVScaleFactor * RunResultsW[13]:PFlxTotalEnergy[1]  }
;   "Scale energy use - Elec   - Battery (W)"  Proj:RunResultsW[14]:PFlxElecEnergy[1]   = {  ResultSummary[5]:PFlxPVScaleFactor * RunResultsW[14]:PFlxElecEnergy[1]   }
;   "Scale energy use - TOTAL  - Battery (W)"  Proj:RunResultsW[14]:PFlxTotalEnergy[1]  = {  ResultSummary[5]:PFlxPVScaleFactor * RunResultsW[14]:PFlxTotalEnergy[1]  }
   "Scale TDV - Elec   - PV (W)"              Proj:RunResultsW[13]:PFlxElecTDV[1]      = {  ResultSummary[5]:PFlxPVScaleFactor * RunResultsW[13]:PFlxElecTDV[1]      }
   "Scale TDV - TOTAL  - PV (W)"              Proj:RunResultsW[13]:PFlxTDV[1]      = {  ResultSummary[5]:PFlxPVScaleFactor * RunResultsW[13]:PFlxTDV[1]      }
   "Scale Src - TOTAL  - PV (W)"              Proj:RunResultsW[13]:PFlxSrc[1]      = {  ResultSummary[5]:PFlxPVScaleFactor * RunResultsW[13]:PFlxSrc[1]      }
   "Scale Elec Demand  - PV (W)"              Proj:RunResultsW[13]:PFlxElecDemand[1]   = {  ResultSummary[5]:PFlxPVScaleFactor * RunResultsW[13]:PFlxElecDemand[1]   }
;   "Scale TDV - Elec   - Battery (W)"         Proj:RunResultsW[14]:PFlxElecTDV[1]      = {  ResultSummary[5]:PFlxPVScaleFactor * RunResultsW[14]:PFlxElecTDV[1]      }
;   "Scale TDV - TOTAL  - Battery (W)"         Proj:RunResultsW[14]:PFlxTDV[1]      = {  ResultSummary[5]:PFlxPVScaleFactor * RunResultsW[14]:PFlxTDV[1]      }
;   "Scale Elec Demand  - Battery (W)"         Proj:RunResultsW[14]:PFlxElecDemand[1]   = {  ResultSummary[5]:PFlxPVScaleFactor * RunResultsW[14]:PFlxElecDemand[1]   }

   ; apply Net Surplus Compensation to PV TDV results
;"debugging"  Proj:Action = {  if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR. IfValidAnd( ResultSummary[5]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
;                              else  PostMessageToLog( "   W: NSC adjustment of %g (%g * %g) to scaled PV TDV of %g", ResultSummary[5]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj, ResultSummary[5]:NetSurpPFlxPVProduction, NetEnergyMeteringNSCAdj, (RunResultsW[13]:PFlxElecTDV[1] * CondFloorArea) )  endif  }
   "Add NSC to TDV - Elec   - PV (W)"   Proj:RunResultsW[13]:PFlxElecTDV[1]  = {
         if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR.
             IfValidAnd( ResultSummary[5]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
         else  RunResultsW[13]:PFlxElecTDV[1] - (ResultSummary[5]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj / CondFloorArea)  endif  }
   "Add NSC to TDV - TOTAL  - PV (W)"   Proj:RunResultsW[13]:PFlxTDV[1]  = {
         if (IfValidAnd( NetEnergyMeteringNSCAdj > 0 )==0 .OR.
             IfValidAnd( ResultSummary[5]:NetSurpPFlxPVProduction > 0 )==0) then  UNCHANGED
         else  RunResultsW[13]:PFlxTDV[1] - (ResultSummary[5]:NetSurpPFlxPVProduction * NetEnergyMeteringNSCAdj / CondFloorArea)  endif  }

   ; RE-apply PV to Totals
   "Restore PV to Elec   - Total (W)"    Proj:RunResultsW[10]:PFlxElecEnergy[1]   = {  RunResultsW[10]:PFlxElecEnergy[1]  + RunResultsW[13]:PFlxElecEnergy[1]   }  ; + RunResultsW[14]:PFlxElecEnergy[1]   }
   "Restore PV to TOTAL  - Total (W)"    Proj:RunResultsW[10]:PFlxTotalEnergy[1]  = {  RunResultsW[10]:PFlxTotalEnergy[1] + RunResultsW[13]:PFlxTotalEnergy[1]  }  ; + RunResultsW[14]:PFlxTotalEnergy[1]  }
   "Restore PV to Elec   - Total (W)"    Proj:RunResultsW[10]:PFlxElecTDV[1]      = {  RunResultsW[10]:PFlxElecTDV[1]     + RunResultsW[13]:PFlxElecTDV[1]      }  ; + RunResultsW[14]:PFlxElecTDV[1]      }
   "Restore PV to TOTAL  - Total (W)"    Proj:RunResultsW[10]:PFlxTDV[1]      = {  RunResultsW[10]:PFlxTDV[1]     + RunResultsW[13]:PFlxTDV[1]      }  ; + RunResultsW[14]:PFlxTDV[1]      }
   "Restore PV to TOTAL  - Src   (W)"    Proj:RunResultsW[10]:PFlxSrc[1]      = {  RunResultsW[10]:PFlxSrc[1]     + RunResultsW[13]:PFlxSrc[1]      }  ; + RunResultsW[14]:PFlxSrc[1]      }
   "Restore PV to Elec Demand (W)"       Proj:RunResultsW[10]:PFlxElecDemand[1]   = {  RunResultsW[10]:PFlxElecDemand[1]  + RunResultsW[13]:PFlxElecDemand[1]   }  ; + RunResultsW[14]:PFlxElecDemand[1]   }
END
;*************************************************************************



;*************************************************************************
;*************************************************************************

ENDFILE

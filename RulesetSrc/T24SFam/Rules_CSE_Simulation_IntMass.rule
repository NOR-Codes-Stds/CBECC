; -------------------------------------------------------------------------
; Rules pertaining to:   Setup Interior Mass Surface objects for CSE Energy Simulation
; CEC Title-24 Residential Energy Code
; -------------------------------------------------------------------------
; Copyright (c) 2012-2014, California Energy Commission
; Copyright (c) 2012-2014, Wrightsoft Corporation
; All rights reserved.
; Redistribution and use in source and binary forms, with or without modification,
; are permitted provided that the following conditions are met:
; - Redistributions of source code must retain the above copyright notice, this
;   list of conditions and the following disclaimer.
; - Redistributions in binary form must reproduce the above copyright notice, this
;   list of conditions, the following disclaimer in the documentation and/or other
;   materials provided with the distribution.
; - Neither the name of the California Energy Commission nor the names of its
;   contributors may be used to endorse or promote products derived from this
;   software without specific prior written permission.
; DISCLAIMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
; THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
; NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION,
; WRIGHTSOFT CORPORATION, ITRON, INC. OR ANY OTHER AUTHOR OR COPYRIGHT HOLDER OF
; THIS SOFTWARE (COLLECTIVELY, THE "AUTHORS") BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
; OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
; OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
; ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  EACH LICENSEE AND SUBLICENSEE OF THE
; SOFTWARE AGREES NOT TO ASSERT ANY CLAIM AGAINST ANY OF THE AUTHORS RELATING TO
; THIS SOFTWARE, WHETHER DUE TO PERFORMANCE ISSUES, TITLE OR INFRINGEMENT ISSUES,
; STRICT LIABILITY OR OTHERWISE.
; -------------------------------------------------------------------------


;*************************************************************************
RULELIST "CSE_SimulationPrep_IntMass" 1 0 0 1
;*************************************************************************
 ; Internal Mass calcs/elements
   ; SAC 8/25/14 - excluded InteriorFloor area from ExtFlrArea value - and then RE-ADDED IT - this property should represent ALL IntFlr surfaces modeled - to identify any missing flr area modeled as imass floor...
   "Set Zone:IMassExtFlrArea"         Zone:IMassExtFlrArea         =
      {        SumChildren( SlabFloor:Area ) + SumChildren( ExteriorFloor:Area ) + SumChildren( FloorOverCrawl:Area ) +
               SumChildren( InteriorFloor:Area ) + SumChildren( UndFloor:Area )  }
   ; SAC 6/7/20 - revisd to handle uncond same as cond re: flr areas (MFamProto)
   ;   {  if (Type > 9) then  0      ; uncond
   ;      else  SumChildren( SlabFloor:Area ) + SumChildren( ExteriorFloor:Area ) + SumChildren( FloorOverCrawl:Area ) +
   ;            SumChildren( InteriorFloor:Area ) + SumChildren( UndFloor:Area )  endif  }
   "Set Zone:IMassIntFlrArea"         Zone:IMassIntFlrArea         = {   max( 0, FloorArea - IMassExtFlrArea )  }

   "Set OtherZone:IMassExtFlrArea"   OtherZone:IMassExtFlrArea   =
      {        SumChildren( SlabFloor:Area ) + SumChildren( ExteriorFloor:Area ) + SumChildren( FloorOverCrawl:Area ) +
               SumChildren( InteriorFloor:Area ) + SumChildren( UndFloor:Area )  }
   ; SAC 6/7/20 - revisd to handle uncond same as cond re: flr areas (MFamProto)
   ;   {  if (Type > 9) then  0      ; uncond
   ;      else  SumChildren( SlabFloor:Area ) + SumChildren( ExteriorFloor:Area ) + SumChildren( FloorOverCrawl:Area ) +
   ;            SumChildren( InteriorFloor:Area ) + SumChildren( UndFloor:Area )  endif  }
   "Set OtherZone:IMassIntFlrArea"   OtherZone:IMassIntFlrArea   = {   max( 0, Area - IMassExtFlrArea )  }

   ; SAC 9/18/19 - handle OtherZone same as Zone (MFamProto)
   ; revisions to ensure that IntWalls between zones & Garages are handled the same regardless of IntWall parent - SAC 11/24/20 (tic #1253)
   "Set IntWall:IMassIZWallArea"      IntWall:IMassIZWallArea      =
      {  if (Proj:AnalysisVersion >= 190200)
         then  if ( ( ParentComponentType() = "Garage" .AND.
                      (LocalCompAssigned( Outside ) == ComponentType( "Zone" ) .OR. LocalCompAssigned( Outside ) == ComponentType( "OtherZone" )) ) .OR.
                    ( (ParentComponentType() == "Zone" .OR. ParentComponentType() == "OtherZone") .AND.
                      LocalCompAssigned( Outside ) == ComponentType( "Garage" ) ) )
               then  Area / 2
               else if (LocalCompAssigned( Outside ) == ComponentType( "Zone" ) .OR. LocalCompAssigned( Outside ) == ComponentType( "OtherZone" ))
               then  if (Outside:Name == Parent( name ))
                     then   Area
                     else   Area / 2  endif   ; prevents double counting int wall area already setup inside THIS zone
               else  0  endif endif
         else  if (LocalCompAssigned( Outside ) == ComponentType( "Zone" ) .OR. LocalCompAssigned( Outside ) == ComponentType( "OtherZone" ))
               then  if (Outside:Name == Parent( name ))
                     then   Area
                     else   Area / 2  endif   ; prevents double counting int wall area already setup inside THIS zone
               else  0  endif endif  }
   ; SAC 6/7/20 - revisd to handle uncond same as cond (MFamProto)
   ;   {  if (LocalCompAssigned( Outside ) == ComponentType( "Zone" ) .OR. LocalCompAssigned( Outside ) == ComponentType( "OtherZone" ))
   ;      then  if (Outside:Type < 10)
   ;            then  if (Outside:Name == Parent( name ))
   ;                  then   Area
   ;                  else   Area / 2  endif   ; prevents double counting int wall area already setup inside THIS zone
   ;            else  0  endif
   ;      else  0  endif  }
   "Set Zone:IMassIZWallArea"         Zone:IMassIZWallArea         =
      {  SumChildren( IntWall:IMassIZWallArea ) + SumRevRef( IntWall:Outside, IntWall:IMassIZWallArea )  }
   ; SAC 6/7/20 - revisd to handle uncond same as cond (MFamProto)
   ;   {  if (Type > 9) then  0      ; uncond
   ;      else  SumChildren( IntWall:IMassIZWallArea ) + SumRevRef( IntWall:Outside, IntWall:IMassIZWallArea )
   ;      endif  }
   "Set Zone:IMassIntWallArea"      Zone:IMassIntWallArea      = {   max( 0, FloorArea - (0.5 * IMassIZWallArea) )  }
   "Set OtherZone:IMassIZWallArea"      OtherZone:IMassIZWallArea   =
      {  SumChildren( IntWall:IMassIZWallArea ) + SumRevRef( IntWall:Outside, IntWall:IMassIZWallArea )  }
   ; SAC 6/7/20 - revisd to handle uncond same as cond (MFamProto)
   ;   {  if (Type > 9) then  0      ; uncond
   ;      else  SumChildren( IntWall:IMassIZWallArea ) + SumRevRef( IntWall:Outside, IntWall:IMassIZWallArea )
   ;      endif  }
   "Set OtherZone:IMassIntWallArea"      OtherZone:IMassIntWallArea   = {   max( 0, Area - (0.5 * IMassIZWallArea) )  }

   ; SAC 11/28/17 - added rounding to ensure adequate area to simulate (tic #933)
   "Zero out nearly-zero Zone:IMassExtFlrArea"     Zone:IMassExtFlrArea    = {  if (IMassExtFlrArea  > 0.08) then  UNCHANGED  else  0  endif  }
   "Zero out nearly-zero Zone:IMassIntFlrArea"     Zone:IMassIntFlrArea    = {  if (IMassIntFlrArea  > 0.08) then  UNCHANGED  else  0  endif  }
   "Zero out nearly-zero Zone:IMassIZWallArea"     Zone:IMassIZWallArea    = {  if (IMassIZWallArea  > 0.08) then  UNCHANGED  else  0  endif  }
   "Zero out nearly-zero Zone:IMassIntWallArea"    Zone:IMassIntWallArea   = {  if (IMassIntWallArea > 0.08) then  UNCHANGED  else  0  endif  }
   "Zero out nearly-zero OtherZone:IMassExtFlrArea"     OtherZone:IMassExtFlrArea    = {  if (IMassExtFlrArea  > 0.08) then  UNCHANGED  else  0  endif  }
   "Zero out nearly-zero OtherZone:IMassIntFlrArea"     OtherZone:IMassIntFlrArea    = {  if (IMassIntFlrArea  > 0.08) then  UNCHANGED  else  0  endif  }
   "Zero out nearly-zero OtherZone:IMassIZWallArea"     OtherZone:IMassIZWallArea    = {  if (IMassIZWallArea  > 0.08) then  UNCHANGED  else  0  endif  }
   "Zero out nearly-zero OtherZone:IMassIntWallArea"    OtherZone:IMassIntWallArea   = {  if (IMassIntWallArea > 0.08) then  UNCHANGED  else  0  endif  }

      ; (#4 in write-up) create and assign FurnCon  (as "IntMassFurnCon")
   ; setup furniture internal mass construction
   "Set up furniture internal mass CSE CONSTRUCTIONs"   Proj:Action   = { EvalRulelist( "Setup_CSE_CONSTRUCTION_Furniture_internal_mass" )   }
   "Set up furniture internal mass CSE SURFACEs"      Zone:Action =
      ; SAC 6/7/20 - revisd to handle uncond same as cond (MFamProto)
      ;{  if (Local( CondFloorArea ) > 0.5)
      {  if (Local( FloorArea ) > 0.5)
         then EvalRulelist( "Setup_CSE_SURFACE_Furniture_internal_mass", 1 )
         else  UNCHANGED  endif    }
   "Set up furniture internal mass CSE SURFACEs (OtherZone)"   OtherZone:Action =
      ; SAC 6/7/20 - revisd to handle uncond same as cond (MFamProto)
      ;{  if (Local( CondFloorArea ) > 0.5)
      {  if (Local( Area ) > 0.5)
         then EvalRulelist( "Setup_CSE_SURFACE_Furniture_internal_mass_OtherZone", 1 )
         else  UNCHANGED  endif    }     ; SAC 9/20/19 - OtherZone (MFamProto)
      ; (#4 & 3d in Internal Mass write-up) iff SumAll( Zone:IMassIntFlrArea ) > 0, then create and assign IntFFrm(Cav)2x10  (as "IntMassFlrFrm(Cav)2x10Con")
   "Set up internal floor CSE CONSTRUCTIONs"         Proj:Action   = { if (SumAll( Zone:IMassIntFlrArea ) > 0)
                                                            then  EvalRulelist( "Setup_CSE_CONSTRUCTION_internal_floor" )
                                                            else  UNCHANGED  endif   }
   "Set up internal floor CSE SURFACEs"            Zone:Action = { if (IMassIntFlrArea > 0)
                                                            then EvalRulelist( "Setup_CSE_SURFACE_internal_floor", 1 )
                                                            else UNCHANGED endif   }
   "Set up internal floor CSE SURFACEs (OtherZone)"   OtherZone:Action = { if (IMassIntFlrArea > 0)
                                                            then EvalRulelist( "Setup_CSE_SURFACE_internal_floor_OtherZone", 1 )
                                                            else UNCHANGED endif   }     ; SAC 9/20/19 - OtherZone (MFamProto)

      ; (#4 & 3b in Internal Mass write-up) iff SumAll( Zone:IMassIntWallArea ) > 0, then create and assign IntwallFrm(Cav)  (as "IntMassWallFrm(Cav)Con")
   "Set up internal wall CSE CONSTRUCTIONs"         Proj:Action   = { if (SumAll( Zone:IMassIntWallArea ) > 0 )
                                                            then EvalRulelist( "Setup_CSE_CONSTRUCTION_internal_wall" )
                                                            else UNCHANGEd endif   }
   "Set up internal wall CSE SURFACEs"               Zone:Action = { if (IMassIntWallArea > 0 )
                                                            then EvalRulelist( "Setup_CSE_SURFACE_internal_wall", 1 )
                                                            else UNCHANGED endif   }
   "Set up internal wall CSE SURFACEs (OtherZone)"      OtherZone:Action = { if (IMassIntWallArea > 0 )
                                                            then EvalRulelist( "Setup_CSE_SURFACE_internal_wall_OtherZone", 1 )
                                                            else UNCHANGED endif   }     ; SAC 9/20/19 - OtherZone (MFamProto)
END
;*************************************************************************


;*************************************************************************
RULELIST "Setup_CSE_CONSTRUCTION_Furniture_internal_mass" 1 0 0 1
;
;*************************************************************************
	"Create furniture internal mass cons"			Proj:IntMassFurnCon					= { CreateComp( cseCONSTRUCTION, "con-FurnIMass" )	}			
	"Create furniture internal mass layer"			Proj:IntMassFurnConLAYERs[1]		= {	CreateComp( cseLAYER, "cl1-FurnIMass" )	}
	"Set furniture internal mass layer Parent"		Proj:IntMassFurnConLAYERs[1]:Parent	= {	Local( IntMassFurnCon )  }
	"Set furniture internal mass layer Material"	Proj:IntMassFurnConLAYERs[1]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-SoftWood" )  }
	"Set furniture internal mass layer Thickness"	Proj:IntMassFurnConLAYERs[1]:lrThk	= {	2.5/12.	}
END

;*************************************************************************
RULELIST "Setup_CSE_SURFACE_Furniture_internal_mass" 1 0 0 1
;
;*************************************************************************
;"Create Zone:IMassFurnitureSurf"		Zone:IMassFurnitureSurf			=	{	if (LocalCompAssigned( IMassFurniture ) < 0.5)
;																				then UNDEFINED
;																				else  CreateComp( cseSURFACE, "Furniture-imass" )
;																				endif
;																			}
	"Create Zone:IMassFurnitureSurf"		Zone:IMassFurnitureSurf			=	{	CreateComp( cseSURFACE, "Furniture-imass" )	}
	"Set Zone:IMassFurnitureSurf:Parent"	Zone:IMassFurnitureSurf:Parent = {	Local(CSE_ZONE) } 
	"Set Zone:IMassFurnitureSurf:sfType"	Zone:IMassFurnitureSurf:sfType	= {	"wall" } 
	"Set Zone:IMassFurnitureSurf:sfArea"	Zone:IMassFurnitureSurf:sfArea	= {	Local(FloorArea) * 2. }       ; SAC 6/7/20 - CondFloorArea -> FloorArea
	"Set Zone:IMassFurnitureSurf:sfCon"		Zone:IMassFurnitureSurf:sfCon	= {	Global( Proj:IntMassFurnCon ) } 
	"Set Zone:IMassFurnitureSurf:sfAZM"		Zone:IMassFurnitureSurf:sfAZM	= {	0 } 
	"Set Zone:IMassFurnitureSurf:sfExCnd"	Zone:IMassFurnitureSurf:sfExCnd = {"ADJZN" } 
	"Set Zone:IMassFurnitureSurf:sfAdjZn"	Zone:IMassFurnitureSurf:sfAdjZn = {	Local(CSE_ZONE) } 
	"Set Zone:IMassFurnitureSurf:sfModel"	Zone:IMassFurnitureSurf:sfModel = {	"Forward_Difference" }
END
;*************************************************************************
RULELIST "Setup_CSE_SURFACE_Furniture_internal_mass_OtherZone" 1 0 0 1
;
;*************************************************************************
;"Create OtherZone:IMassFurnitureSurf"		OtherZone:IMassFurnitureSurf			=	{	if (LocalCompAssigned( IMassFurniture ) < 0.5)
;																				then UNDEFINED
;																				else  CreateComp( cseSURFACE, "Furniture-imass" )
;																				endif
;																			}
	"Create OtherZone:IMassFurnitureSurf"		OtherZone:IMassFurnitureSurf			=	{	CreateComp( cseSURFACE, "Furniture-imass" )	}
	"Set OtherZone:IMassFurnitureSurf:Parent"	OtherZone:IMassFurnitureSurf:Parent = {	Local(CSE_ZONE) } 
	"Set OtherZone:IMassFurnitureSurf:sfType"	OtherZone:IMassFurnitureSurf:sfType	= {	"wall" } 
	"Set OtherZone:IMassFurnitureSurf:sfArea"	OtherZone:IMassFurnitureSurf:sfArea	= {	Local(Area) * 2. }      ; SAC 6/7/20 - CondFloorArea -> Area
	"Set OtherZone:IMassFurnitureSurf:sfCon"		OtherZone:IMassFurnitureSurf:sfCon	= {	Global( Proj:IntMassFurnCon ) } 
	"Set OtherZone:IMassFurnitureSurf:sfAZM"		OtherZone:IMassFurnitureSurf:sfAZM	= {	0 } 
	"Set OtherZone:IMassFurnitureSurf:sfExCnd"	OtherZone:IMassFurnitureSurf:sfExCnd = {"ADJZN" } 
	"Set OtherZone:IMassFurnitureSurf:sfAdjZn"	OtherZone:IMassFurnitureSurf:sfAdjZn = {	Local(CSE_ZONE) } 
	"Set OtherZone:IMassFurnitureSurf:sfModel"	OtherZone:IMassFurnitureSurf:sfModel = {	"Forward_Difference" }
END

;*************************************************************************
RULELIST "Setup_CSE_CONSTRUCTION_internal_wall" 1 0 0 1
;
;*************************************************************************
	;	Frame
	"Create internal wall frame cons"				Proj:IntMassWallFrmCon					= { CreateComp( cseCONSTRUCTION, "con-WallFrmIMass" )	}			
	"Create internal wall frame layer 1"			Proj:IntMassWallFrmConLAYERs[1]			= {	CreateComp( cseLAYER, "cl1-WallFrmIMass" )	}
	"Set internal wall frame layer 1 Parent"		Proj:IntMassWallFrmConLAYERs[1]:Parent	= {	Local( IntMassWallFrmCon )  }
	"Set internal wall frame layer 1 Material"		Proj:IntMassWallFrmConLAYERs[1]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-Gypsum" )  }
	"Set internal wall frame layer 1 Thickness"		Proj:IntMassWallFrmConLAYERs[1]:lrThk	= {	0.5/12.	}

	"Create internal wall frame 2 layer"			Proj:IntMassWallFrmConLAYERs[2]			= {	CreateComp( cseLAYER, "cl2-WallFrmIMass" )	}
	"Set internal wall frame layer 2 Parent"		Proj:IntMassWallFrmConLAYERs[2]:Parent	= {	Local( IntMassWallFrmCon )  }
	"Set internal wall frame layer 2 Material"		Proj:IntMassWallFrmConLAYERs[2]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-SoftWood" )  }
	"Set internal wall frame layer 2 Thickness"		Proj:IntMassWallFrmConLAYERs[2]:lrThk	= {	3.5/12.	}

	"Create internal wall frame layer 3"			Proj:IntMassWallFrmConLAYERs[3]			= {	CreateComp( cseLAYER, "cl3-WallFrmIMass" )	}
	"Set internal wall frame layer 3 Parent"		Proj:IntMassWallFrmConLAYERs[3]:Parent	= {	Local( IntMassWallFrmCon )  }
	"Set internal wall frame layer 3 Material"		Proj:IntMassWallFrmConLAYERs[3]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-Gypsum" )  }
	"Set internal wall frame layer 3 Thickness"		Proj:IntMassWallFrmConLAYERs[3]:lrThk	= {	0.5/12.	}

	;	Cavity
	"Create internal wall cavity cons"				Proj:IntMassWallCavCon					= { CreateComp( cseCONSTRUCTION, "con-WallCavIMass" )	}			
	"Create internal wall cavity layer 1"			Proj:IntMassWallCavConLAYERs[1]			= {	CreateComp( cseLAYER, "cl1-WallCavIMass" )	}
	"Set internal wall cavity layer 1 Parent"		Proj:IntMassWallCavConLAYERs[1]:Parent	= {	Local( IntMassWallCavCon )  }
	"Set internal wall cavity layer 1 Material"		Proj:IntMassWallCavConLAYERs[1]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-Gypsum" )  }
	"Set internal wall cavity layer 1 Thickness"	Proj:IntMassWallCavConLAYERs[1]:lrThk	= {	0.5/12.	}

	"Create internal wall cavity layer 2"			Proj:IntMassWallCavConLAYERs[2]			= {	CreateComp( cseLAYER, "cl2-WallCavIMass" )	}
	"Set internal wall cavity layer 2 Parent"		Proj:IntMassWallCavConLAYERs[2]:Parent	= {	Local( IntMassWallCavCon )  }
	"Set internal wall cavity layer 2 Material"		Proj:IntMassWallCavConLAYERs[2]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-Gypsum" )  }
	"Set internal wall cavity layer 2 Thickness"	Proj:IntMassWallCavConLAYERs[2]:lrThk	= {	0.5/12.	}
END

;*************************************************************************
RULELIST "Setup_CSE_SURFACE_internal_wall" 1 0 0 1
;
;*************************************************************************
	"Create Zone:IMassWallFrmSurf"		Zone:IMassWallFrmSurf			= {	CreateComp( cseSURFACE, "WallFrm-imass" )	}
	"Set Zone:IMassWallFrmSurf:Parent"	Zone:IMassWallFrmSurf:Parent	= {	Local(CSE_ZONE) } 
	"Set Zone:IMassWallFrmSurf:sfType"	Zone:IMassWallFrmSurf:sfType	= {	"Wall" } 
	"Set Zone:IMassWallFrmSurf:sfArea"	Zone:IMassWallFrmSurf:sfArea	= {	Local(IMassIntWallArea) * 0.25 } 
	"Set Zone:IMassWallFrmSurf:sfCon"	Zone:IMassWallFrmSurf:sfCon		= {	Global( Proj:IntMassWallFrmCon ) } 
	"Set Zone:IMassWallFrmSurf:sfAZM"	Zone:IMassWallFrmSurf:sfAZM		= {	0 } 
	"Set Zone:IMassWallFrmSurf:sfExCnd"	Zone:IMassWallFrmSurf:sfExCnd	= {"ADJZN" } 
	"Set Zone:IMassWallFrmSurf:sfAdjZn"	Zone:IMassWallFrmSurf:sfAdjZn	= {	Local(CSE_ZONE) } 
	"Set Zone:IMassWallFrmSurf:sfModel"	Zone:IMassWallFrmSurf:sfModel	= {	"Forward_Difference" }

	"Create Zone:IMassWallCavSurf"		Zone:IMassWallCavSurf			= {	CreateComp( cseSURFACE, "WallCav-imass" )	}
	"Set Zone:IMassWallCavSurf:Parent"	Zone:IMassWallCavSurf:Parent	= {	Local(CSE_ZONE) } 
	"Set Zone:IMassWallCavSurf:sfType"	Zone:IMassWallCavSurf:sfType	= {	"Wall" } 
	"Set Zone:IMassWallCavSurf:sfArea"	Zone:IMassWallCavSurf:sfArea	= {	Local(IMassIntWallArea) * 0.75 } 
	"Set Zone:IMassWallCavSurf:sfCon"	Zone:IMassWallCavSurf:sfCon		= {	Global( Proj:IntMassWallCavCon ) } 
	"Set Zone:IMassWallCavSurf:sfAZM"	Zone:IMassWallCavSurf:sfAZM		= {	0 } 
	"Set Zone:IMassWallCavSurf:sfExCnd"	Zone:IMassWallCavSurf:sfExCnd	= {"ADJZN" } 
	"Set Zone:IMassWallCavSurf:sfAdjZn"	Zone:IMassWallCavSurf:sfAdjZn	= {	Local(CSE_ZONE) } 
	"Set Zone:IMassWallCavSurf:sfModel"	Zone:IMassWallCavSurf:sfModel	= {	"Forward_Difference" }
END
;*************************************************************************
RULELIST "Setup_CSE_SURFACE_internal_wall_OtherZone" 1 0 0 1
;
;*************************************************************************
	"Create OtherZone:IMassWallFrmSurf"		OtherZone:IMassWallFrmSurf			= {	CreateComp( cseSURFACE, "WallFrm-imass" )	}
	"Set OtherZone:IMassWallFrmSurf:Parent"	OtherZone:IMassWallFrmSurf:Parent	= {	Local(CSE_ZONE) } 
	"Set OtherZone:IMassWallFrmSurf:sfType"	OtherZone:IMassWallFrmSurf:sfType	= {	"Wall" } 
	"Set OtherZone:IMassWallFrmSurf:sfArea"	OtherZone:IMassWallFrmSurf:sfArea	= {	Local(IMassIntWallArea) * 0.25 } 
	"Set OtherZone:IMassWallFrmSurf:sfCon"	OtherZone:IMassWallFrmSurf:sfCon		= {	Global( Proj:IntMassWallFrmCon ) } 
	"Set OtherZone:IMassWallFrmSurf:sfAZM"	OtherZone:IMassWallFrmSurf:sfAZM		= {	0 } 
	"Set OtherZone:IMassWallFrmSurf:sfExCnd"	OtherZone:IMassWallFrmSurf:sfExCnd	= {"ADJZN" } 
	"Set OtherZone:IMassWallFrmSurf:sfAdjZn"	OtherZone:IMassWallFrmSurf:sfAdjZn	= {	Local(CSE_ZONE) } 
	"Set OtherZone:IMassWallFrmSurf:sfModel"	OtherZone:IMassWallFrmSurf:sfModel	= {	"Forward_Difference" }

	"Create OtherZone:IMassWallCavSurf"		OtherZone:IMassWallCavSurf			= {	CreateComp( cseSURFACE, "WallCav-imass" )	}
	"Set OtherZone:IMassWallCavSurf:Parent"	OtherZone:IMassWallCavSurf:Parent	= {	Local(CSE_ZONE) } 
	"Set OtherZone:IMassWallCavSurf:sfType"	OtherZone:IMassWallCavSurf:sfType	= {	"Wall" } 
	"Set OtherZone:IMassWallCavSurf:sfArea"	OtherZone:IMassWallCavSurf:sfArea	= {	Local(IMassIntWallArea) * 0.75 } 
	"Set OtherZone:IMassWallCavSurf:sfCon"	OtherZone:IMassWallCavSurf:sfCon		= {	Global( Proj:IntMassWallCavCon ) } 
	"Set OtherZone:IMassWallCavSurf:sfAZM"	OtherZone:IMassWallCavSurf:sfAZM		= {	0 } 
	"Set OtherZone:IMassWallCavSurf:sfExCnd"	OtherZone:IMassWallCavSurf:sfExCnd	= {"ADJZN" } 
	"Set OtherZone:IMassWallCavSurf:sfAdjZn"	OtherZone:IMassWallCavSurf:sfAdjZn	= {	Local(CSE_ZONE) } 
	"Set OtherZone:IMassWallCavSurf:sfModel"	OtherZone:IMassWallCavSurf:sfModel	= {	"Forward_Difference" }
END

;*************************************************************************
RULELIST "Setup_CSE_CONSTRUCTION_internal_floor" 1 0 0 1
;
;*************************************************************************
	;	Frame
	"Create internal floor frame cons"				Proj:IntMassFlrFrm2x10Con					= { CreateComp( cseCONSTRUCTION, "con-FloorFrmIMass" )	}			
	"Create internal floor frame layer 1"			Proj:IntMassFlrFrm2x10ConLAYERs[1]			= {	CreateComp( cseLAYER, "cl1-FloorFrmIMass" )	}
	"Set internal floor frame layer 1 Parent"		Proj:IntMassFlrFrm2x10ConLAYERs[1]:Parent	= {	Local( IntMassFlrFrm2x10Con )  }
	"Set internal floor frame layer 1 Material"		Proj:IntMassFlrFrm2x10ConLAYERs[1]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-Carpet" )  }
	"Set internal floor frame layer 1 Thickness"	Proj:IntMassFlrFrm2x10ConLAYERs[1]:lrThk	= {	0.5/12.	}

	"Create internal floor frame 2 layer"			Proj:IntMassFlrFrm2x10ConLAYERs[2]			= {	CreateComp( cseLAYER, "cl2-FloorFrmIMass" )	}
	"Set internal floor frame layer 2 Parent"		Proj:IntMassFlrFrm2x10ConLAYERs[2]:Parent	= {	Local( IntMassFlrFrm2x10Con )  }
	"Set internal floor frame layer 2 Material"		Proj:IntMassFlrFrm2x10ConLAYERs[2]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-WoodLayer" )  }
	"Set internal floor frame layer 2 Thickness"	Proj:IntMassFlrFrm2x10ConLAYERs[2]:lrThk	= {	0.5/12.	}

	"Create internal floor frame layer 3"			Proj:IntMassFlrFrm2x10ConLAYERs[3]			= {	CreateComp( cseLAYER, "cl3-FloorFrmIMass" )	}
	"Set internal floor frame layer 3 Parent"		Proj:IntMassFlrFrm2x10ConLAYERs[3]:Parent	= {	Local( IntMassFlrFrm2x10Con )  }
	"Set internal floor frame layer 3 Material"		Proj:IntMassFlrFrm2x10ConLAYERs[3]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-SoftWood" )  }
	"Set internal floor frame layer 3 Thickness"	Proj:IntMassFlrFrm2x10ConLAYERs[3]:lrThk	= {	9.25/12.	}

	"Create internal floor frame layer 4"			Proj:IntMassFlrFrm2x10ConLAYERs[4]			= {	CreateComp( cseLAYER, "cl4-FloorFrmIMass" )	}
	"Set internal floor frame layer 4 Parent"		Proj:IntMassFlrFrm2x10ConLAYERs[4]:Parent	= {	Local( IntMassFlrFrm2x10Con )  }
	"Set internal floor frame layer 4 Material"		Proj:IntMassFlrFrm2x10ConLAYERs[4]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-Gypsum" )  }
	"Set internal floor frame layer 4 Thickness"	Proj:IntMassFlrFrm2x10ConLAYERs[4]:lrThk	= {	0.5/12.	}

	;	Cavity
	"Create internal floor cavity cons"				Proj:IntMassFlrCav2x10Con					= { CreateComp( cseCONSTRUCTION, "con-FloorCavIMass" )	}			
	"Create internal floor cavity layer 1"			Proj:IntMassFlrCav2x10ConLAYERs[1]			= {	CreateComp( cseLAYER, "cl1-FloorCavIMass" )	}
	"Set internal floor cavity layer 1 Parent"		Proj:IntMassFlrCav2x10ConLAYERs[1]:Parent	= {	Local( IntMassFlrCav2x10Con )  }
	"Set internal floor cavity layer 1 Material"	Proj:IntMassFlrCav2x10ConLAYERs[1]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-Carpet" )  }
	"Set internal floor cavity layer 1 Thickness"	Proj:IntMassFlrCav2x10ConLAYERs[1]:lrThk	= {	0.5/12.	}

	"Create internal floor cavity layer 2"			Proj:IntMassFlrCav2x10ConLAYERs[2]			= {	CreateComp( cseLAYER, "cl2-FloorCavIMass" )	}
	"Set internal floor cavity layer 2 Parent"		Proj:IntMassFlrCav2x10ConLAYERs[2]:Parent	= {	Local( IntMassFlrCav2x10Con )  }
	"Set internal floor cavity layer 2 Material"	Proj:IntMassFlrCav2x10ConLAYERs[2]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-WoodLayer" )  }
	"Set internal floor cavity layer 2 Thickness"	Proj:IntMassFlrCav2x10ConLAYERs[2]:lrThk	= {	0.5/12.	}

	"Create internal floor cavity layer 3"			Proj:IntMassFlrCav2x10ConLAYERs[3]			= {	CreateComp( cseLAYER, "cl3-FloorCavIMass" )	}
	"Set internal floor cavity layer 3 Parent"		Proj:IntMassFlrCav2x10ConLAYERs[3]:Parent	= {	Local( IntMassFlrCav2x10Con )  }
	"Set internal floor cavity layer 3 Material"	Proj:IntMassFlrCav2x10ConLAYERs[3]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-Carpet" )  }
	"Set internal floor cavity layer 3 Thickness"	Proj:IntMassFlrCav2x10ConLAYERs[3]:lrThk	= {	1./12.	}

	"Create internal floor cavity layer 4"			Proj:IntMassFlrCav2x10ConLAYERs[4]			= {	CreateComp( cseLAYER, "cl4-FloorCavIMass" )	}
	"Set internal floor cavity layer 4 Parent"		Proj:IntMassFlrCav2x10ConLAYERs[4]:Parent	= {	Local( IntMassFlrCav2x10Con )  }
	"Set internal floor cavity layer 4 Material"	Proj:IntMassFlrCav2x10ConLAYERs[4]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-Carpet" )  }
	"Set internal floor cavity layer 4 Thickness"	Proj:IntMassFlrCav2x10ConLAYERs[4]:lrThk	= {	1./12.	}

	"Create internal floor cavity layer 5"			Proj:IntMassFlrCav2x10ConLAYERs[5]			= {	CreateComp( cseLAYER, "cl5-FloorCavIMass" )	}
	"Set internal floor cavity layer 5 Parent"		Proj:IntMassFlrCav2x10ConLAYERs[5]:Parent	= {	Local( IntMassFlrCav2x10Con )  }
	"Set internal floor cavity layer 5 Material"	Proj:IntMassFlrCav2x10ConLAYERs[5]:lrMat	= {	RuleLibrary( cseMATERIAL, "IntMassMat-Gypsum" )  }
	"Set internal floor cavity layer 5 Thickness"	Proj:IntMassFlrCav2x10ConLAYERs[5]:lrThk	= {	0.5/12.	}
END

;*************************************************************************
RULELIST "Setup_CSE_SURFACE_internal_floor" 1 0 0 1
;
;*************************************************************************
	"Create Zone:IMassFloorFrmSurf"			Zone:IMassFloorFrmSurf			= {	CreateComp( cseSURFACE, "FloorFrm-imass" )	}
	"Set Zone:IMassFloorFrmSurf:Parent"		Zone:IMassFloorFrmSurf:Parent	= {	Local(CSE_ZONE) } 
	"Set Zone:IMassFloorFrmSurf:sfType"		Zone:IMassFloorFrmSurf:sfType	= {	"Floor" } 
	"Set Zone:IMassFloorFrmSurf:sfArea"		Zone:IMassFloorFrmSurf:sfArea	= {	Local(IMassIntFlrArea) * 0.1 } 
	"Set Zone:IMassFloorFrmSurf:sfCon"		Zone:IMassFloorFrmSurf:sfCon	= {	Global( Proj:IntMassFlrFrm2x10Con ) } 
	"Set Zone:IMassFloorFrmSurf:sfExCnd"	Zone:IMassFloorFrmSurf:sfExCnd	= {"ADJZN" } 
	"Set Zone:IMassFloorFrmSurf:sfAdjZn"	Zone:IMassFloorFrmSurf:sfAdjZn	= {	Local(CSE_ZONE) } 
	"Set Zone:IMassFloorFrmSurf:sfModel"	Zone:IMassFloorFrmSurf:sfModel	= {	"Forward_Difference" }

	"Create Zone:IMassFloorCavSurf"			Zone:IMassFloorCavSurf			= {	CreateComp( cseSURFACE, "FloorCav-imass" )	}
	"Set Zone:IMassFloorCavSurf:Parent"		Zone:IMassFloorCavSurf:Parent	= {	Local(CSE_ZONE) } 
	"Set Zone:IMassFloorCavSurf:sfType"		Zone:IMassFloorCavSurf:sfType	= {	"Floor" } 
	"Set Zone:IMassFloorCavSurf:sfArea"		Zone:IMassFloorCavSurf:sfArea	= {	Local(IMassIntFlrArea) * 0.9 } 
	"Set Zone:IMassFloorCavSurf:sfCon"		Zone:IMassFloorCavSurf:sfCon	= {	Global( Proj:IntMassFlrCav2x10Con ) } 
	"Set Zone:IMassFloorCavSurf:sfExCnd"	Zone:IMassFloorCavSurf:sfExCnd	= {"ADJZN" } 
	"Set Zone:IMassFloorCavSurf:sfAdjZn"	Zone:IMassFloorCavSurf:sfAdjZn	= {	Local(CSE_ZONE) } 
	"Set Zone:IMassFloorCavSurf:sfModel"	Zone:IMassFloorCavSurf:sfModel	= {	"Forward_Difference" }
END
;*************************************************************************

;*************************************************************************
RULELIST "Setup_CSE_SURFACE_internal_floor_OtherZone" 1 0 0 1
;
;*************************************************************************
	"Create OtherZone:IMassFloorFrmSurf"			OtherZone:IMassFloorFrmSurf			= {	CreateComp( cseSURFACE, "FloorFrm-imass" )	}
	"Set OtherZone:IMassFloorFrmSurf:Parent"		OtherZone:IMassFloorFrmSurf:Parent	= {	Local(CSE_ZONE) } 
	"Set OtherZone:IMassFloorFrmSurf:sfType"		OtherZone:IMassFloorFrmSurf:sfType	= {	"Floor" } 
	"Set OtherZone:IMassFloorFrmSurf:sfArea"		OtherZone:IMassFloorFrmSurf:sfArea	= {	Local(IMassIntFlrArea) * 0.1 } 
	"Set OtherZone:IMassFloorFrmSurf:sfCon"		OtherZone:IMassFloorFrmSurf:sfCon	= {	Global( Proj:IntMassFlrFrm2x10Con ) } 
	"Set OtherZone:IMassFloorFrmSurf:sfExCnd"	OtherZone:IMassFloorFrmSurf:sfExCnd	= {"ADJZN" } 
	"Set OtherZone:IMassFloorFrmSurf:sfAdjZn"	OtherZone:IMassFloorFrmSurf:sfAdjZn	= {	Local(CSE_ZONE) } 
	"Set OtherZone:IMassFloorFrmSurf:sfModel"	OtherZone:IMassFloorFrmSurf:sfModel	= {	"Forward_Difference" }

	"Create OtherZone:IMassFloorCavSurf"			OtherZone:IMassFloorCavSurf			= {	CreateComp( cseSURFACE, "FloorCav-imass" )	}
	"Set OtherZone:IMassFloorCavSurf:Parent"		OtherZone:IMassFloorCavSurf:Parent	= {	Local(CSE_ZONE) } 
	"Set OtherZone:IMassFloorCavSurf:sfType"		OtherZone:IMassFloorCavSurf:sfType	= {	"Floor" } 
	"Set OtherZone:IMassFloorCavSurf:sfArea"		OtherZone:IMassFloorCavSurf:sfArea	= {	Local(IMassIntFlrArea) * 0.9 } 
	"Set OtherZone:IMassFloorCavSurf:sfCon"		OtherZone:IMassFloorCavSurf:sfCon	= {	Global( Proj:IntMassFlrCav2x10Con ) } 
	"Set OtherZone:IMassFloorCavSurf:sfExCnd"	OtherZone:IMassFloorCavSurf:sfExCnd	= {"ADJZN" } 
	"Set OtherZone:IMassFloorCavSurf:sfAdjZn"	OtherZone:IMassFloorCavSurf:sfAdjZn	= {	Local(CSE_ZONE) } 
	"Set OtherZone:IMassFloorCavSurf:sfModel"	OtherZone:IMassFloorCavSurf:sfModel	= {	"Forward_Difference" }
END
;*************************************************************************


;*************************************************************************
;*************************************************************************

ENDFILE

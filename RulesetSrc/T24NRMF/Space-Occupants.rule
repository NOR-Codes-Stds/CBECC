// Space Use - Occupants
//
// -------------------------------------------------------------------------
//  Copyright (c) 2012-2017, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//  
//
// According to 5.4.2 ACM Draft April 24 2012, items:  
//     Number of Occupants
//     Occupant Heat Rate
//     Occupant Schedule
//
// External References:
//     NACMSpaceTypeData table defined in file 'App5-4A_SpaceUseData.csv'
// 
// The main objects in the SDD are:
//     Project:Building:BuildingStory:Space
//     SpaceFunctionDefaults

// -------------- Minimum # Occupants / Density -------------------------------
// Minimum for egress/DCV design purposes
// The DCV requirement is deteremined based on the minimum or the designe which is greater
RULE NEW Spc:MinOccNum
  DATATYPE
    Float
  LONGFORM
    MinimumOccupancyNumber
  DESCRIPTION
    "The minimum number of occupants in the Space for egress/DCV design purposes."
  INPUTCLASS
    NotInput
  UNITS 
    people
  DEFAULT : T24N_2022
    if( HasNoInternalLds )
    then 0 // Is Unoccupied, Attic/Crawlspace, or Plenum space
    else if( IsHighRiseRes )
    then // Is high-rise res or hotel/motel
         2 * ValidOr( DwellingUnitTypeCnt[1], 0 ) +
         2 * ValidOr( DwellingUnitTypeCnt[2], 0 ) +
         3 * ValidOr( DwellingUnitTypeCnt[3], 0 ) +
         4 * ValidOr( DwellingUnitTypeCnt[4], 0 ) +
         5 * ValidOr( DwellingUnitTypeCnt[5], 0 ) +
         6 * ValidOr( DwellingUnitTypeCnt[6], 0 )  
    else if( IfValidAnd( DsgnOcc > 0 ) .AND. IfValidAnd( DsgnOccEligible > 0 ) )
    then // Fixed seating can be used
         ValidOr( DsgnOccNum, 0 )
    else if( LocalStatus( SpcFunc ) > 0 .AND. IfValidAnd( Area > 0 ) )
    then // Calculated using OccDens
         SpaceFunctionData:OccDens( "FuncType", SpcFunc ) * Area / 1000
    else 0
    endif endif endif endif
  DEFAULT
    if( HasNoInternalLds )
    then 0 // Is Unoccupied, Attic/Crawlspace, or Plenum space
    else if( IsHighRiseRes )
    then // Is high-rise res or hotel/motel
         2 * ValidOr( DwellingUnitTypeCnt[1], 0 ) +
         2 * ValidOr( DwellingUnitTypeCnt[2], 0 ) +
         3 * ValidOr( DwellingUnitTypeCnt[3], 0 ) +
         4 * ValidOr( DwellingUnitTypeCnt[4], 0 ) +
         5 * ValidOr( DwellingUnitTypeCnt[5], 0 ) +
         6 * ValidOr( DwellingUnitTypeCnt[6], 0 )  
    else if( IfValidAnd( FxdSeat > 0 ) .AND. IfValidAnd( FxdSeatEligible > 0 ) )
    then ValidOr( OccNumFxdSeat, 0 ) // Fixed seating can be used
    else if( LocalStatus( VentSpcFunc ) > 0 .AND. IfValidAnd( Area > 0 ) )
    then // Calculated using OccDens
         if( find( VentSpcFunc, "Exhaust" ) .AND. LocalStatus( SpcFunc ) > 0 )
         then // Not defined in Table 120.1-A. Therefore, define based on space function from App5-4A
              SpaceFunctionData:OccDens( "FuncType", SpcFunc ) * Area / 1000
         else if( find( VentSpcFunc, "Retail" ) )
         then // The densities for reatil listed in Table 120.1-A is close to the load for egress purposes in CBC
              VentilationSpaceFunctionData:MinOccDens( "VentFuncType", VentSpcFunc ) * Area / 1000
         else // Times 2 because the densities listed in Table 120.1-A are half of the load for egress purposes in CBC
              2 * VentilationSpaceFunctionData:MinOccDens( "VentFuncType", VentSpcFunc ) * Area / 1000
         endif endif
    else 0
    endif endif endif endif
ENDRULE
RULE NEW Spc:MinOccDens
  DATATYPE
    Float
  LONGFORM
    MinimumOccupantDensity
  DESCRIPTION
    "The minimum density of occupants in the Space for egress/DCV design purposes."
  INPUTCLASS
    NotInput
  UNITS 
    people/1000ft2
  DEFAULT
    if( IfValidAnd( Area > 0 ) )
    then MinOccNum / Area * 1000
    else 0
    endif
ENDRULE
RULE NEW ThrmlZn:MinOccDens
  DATATYPE
    Float
  LONGFORM
    MinimumOccupancyDensity
  DESCRIPTION
    "The minimum number of occupants in the ThermalZone for egress/DCV
     design purposes."
  INPUTCLASS
    NotInput
  UNITS 
    people/1000ft2
  DEFAULT
    if( IfValidAnd( FlrArea > 0 ) )
    then SumRevRef( Spc:ThrmlZnRef, Spc:MinOccNum ) / FlrArea * 1000
    else 0
    endif
ENDRULE

// For simulation/ventilation calculation purposes
// For simulation if is residential or with fixed seating
// Ventilation rate is determined based on the minimum or the designe which is greater
// See RULE NEW Spc:CodeVentPerPersonFlow
RULE NEW Spc:MinOccNumSim
  DATATYPE
    Float
  LONGFORM
    MinimumOccupantNumberSimulated
  DESCRIPTION
    "The minimum number of people of a Space for simulation."
  INPUTCLASS
    NotInput
  UNITS 
    people
  DEFAULT : T24N_2022
    if( HasNoInternalLds )
    then 0 // Is Unoccupied, Attic/Crawlspace, or Plenum space
    else if( IsHighRiseRes )
    then MinOccNum
    else if( IfValidAnd( DsgnOcc > 0 ) .AND. IfValidAnd( DsgnOccEligible > 0 ) )
    then MinOccNum
    else MinOccNum * 0.5 // 50% of egress density
    endif endif endif
  DEFAULT : T24N
    if( HasNoInternalLds ) // Is Unoccupied, Attic/Crawlspace, or Plenum space
    then 0
    else if( IsHighRiseRes )
    then MinOccNum
    else if( IfValidAnd( FxdSeat > 0 ) .AND. IfValidAnd( FxdSeatEligible > 0 ) )
    then ValidOr( OccNumFxdSeat, 0 )
    else if( find( VentSpcFunc, "Retail" ) )
    then MinOccNum // 100% of egress for Retail spaces
    else MinOccNum * 0.5 // 50% of egress density
    endif endif endif endif
  DEFAULT : S901G
    MinOccNum * 0.5
ENDRULE
RULE NEW Spc:MinOccDensSim
  DATATYPE
    Float
  LONGFORM
    MinimumOccupantDensitySimulated
  DESCRIPTION
    "The minimum density of people of a Space for simulation."
  INPUTCLASS
    NotInput
  UNITS 
    people/1000ft2
  DEFAULT
    if( IfValidAnd( Area > 0 ) )
    then MinOccNumSim / Area * 1000
    else 0
    endif
ENDRULE


// -------------- Occupancy Fraction ------------------------------------------
RULE Spc:OccFrac
  DESCRIPTION : S901G T24N_2022
    "The expected fraction of the existing density of people in a Space, based 
     on SpaceFunction, which will determine the design occupancy."  
  DESCRIPTION : T24N
    "The expected fraction of the existing density of people in a Space, based 
     on VentilationSpaceFunction, which will determine the design occupancy."
  INPUTCLASS : T24N_2022
    NotInput IgnoreUserInput "Spc:OccFrac no longer an allowed input as of version 2022.3.0, select Designed Occupancy if the space has expected number of occupants"
  INPUTCLASS
    Default
  MINIMUM
    0.5
  COMMONMAXIMUM
    1.0
  MAXIMUM
    5.0
  DEFAULT : T24N_2022
    if( HasNoInternalLds )
    then UNDEFINED
    else if( LocalCompAssigned( SpcFuncDefaultsRef ) .AND. LocalStatus( SpcFunc ) < 5 )
    then SpcFuncDefaultsRef:OccFrac
    else Proj:OccFrac
    endif endif
  DEFAULT : T24N 
    if( HasNoInternalLds )
    then UNDEFINED
    else if( LocalCompAssigned( SpcFuncDefaultsRef ) .AND. LocalStatus( SpcFunc ) < 5 )
    then SpcFuncDefaultsRef:OccFrac
    else if( find( VentSpcFunc, "Retail" ) )
    then 1 // special case for Retail spaces
    else Proj:OccFrac
    endif endif endif
ENDRULE

// -------------- Designed Occupancy ------------------------------------------
RULE NEW Spc:DsgnOccEligible
  RULESETS
    T24N_2022
  DATATYPE
    Integer
  LONGFORM
    DesignedOccupancyEligible
  PREVIOUSNAMES
    FxdSeatEligible FixedSeatingEligible
  DESCRIPTION
    "A flag that indicates that the space is eligible for using the designed occupancy
     method for determining space ventilation requirements."
  HELP
    "Space meets the requirements for Exception 1 to Section 120.1(c)3."
  INPUTCLASS
    NotInput
  DEFAULT
    if( HasNoInternalLds > 0 .OR. IsRes > 0 .OR. SpcFunc = "Unleased Tenant Area" )
    then 0
    else 1
    endif
ENDRULE
RULE Spc:DsgnOcc
  RULESETS
    T24N_2022
  DESCRIPTION
    "A flag that indicates that the space uses the expected number of 
     occupants or fixed seating criteria for determining space ventilation 
     requirements."
  PREVIOUSNAMES
    FxdSeat
  HELP
    "Space must meet the requirements for Exception 1 to Section 120.1(c)3. If selected
     an exceptional reporting condition will be triggered."
  INPUTCLASS
    Default
  DEFAULT
    0
  SIZING 
    if( DsgnOccEligible > 0 )
    then DsgnOcc
    else 0
    endif
ENDRULE
RULE Spc:DsgnOccNum
  RULESETS
    T24N_2022
  DESCRIPTION
    "A number of occupants in the space for simulation and ventilation calculations
     if Designed Occupancy is selected and is a valid choice."
  PREVIOUSNAMES
    OccNumFxdSeat
  INPUTCLASS
    Default
  UNITS
    people
  DEFAULT
    MinOccNumSim
  CHECKCODE
    if( DsgnOccNum > 0 .AND. DsgnOcc > 0 .AND. DsgnOccEligible = 0 )
    then PostWarning( "For Space '%s', DesignedOccupantNumber is not valid. This
                       input will be ignored, and default occupancy will be used.", Name )
    else UNCHANGED
    endif
  SIZING
    if( DsgnOcc =  0 )
    then 0 
    else DsgnOccNum
    endif
ENDRULE
// -------------- Fixed Seating ------------------------------------------
// Reverse back to 2019 rule - JP 25/01/03
RULE NEW Spc:FxdSeatEligible
  RULESETS
     S901G T24N_2025 T24N_2028
  DATATYPE
    Integer
  LONGFORM
    FixedSeatingEligible
  PREVIOUSNAMES
    DsgnOccEligible DesignedOccupancyEligible
  DESCRIPTION
    "A flag that indicates that the space is eligible for using fixed seeting
     for determining space ventilation requirements."
  INPUTCLASS
    NotInput
  DEFAULT
    if( HasNoInternalLds > 0 .OR. IsRes > 0 .OR. SpcFunc = "Unleased Tenant Area" )
    then 0
    else 1
    endif
ENDRULE
RULE Spc:FxdSeat
  RULESETS
     S901G T24N_2025 T24N_2028
  DESCRIPTION
    "A flag that indicates that the space has fixed seating and the space 
     occupancy will be entered as a number of occupants."
  PREVIOUSNAMES
    DsgnOcc
  INPUTCLASS
    Default
  DEFAULT
    0
  SIZING 
    if( HasNoInternalLds .OR. IsRes .OR. SpcFunc = "Unleased Tenant Area" )
    then 0
    else FxdSeat
    endif
ENDRULE
RULE Spc:OccNumFxdSeat
  RULESETS
     S901G T24N_2025 T24N_2028
  DESCRIPTION
    "A number of occupants in the space for simulation and ventilation calculations
     if FixedSeating is selected and is a valid choice."
  PREVIOUSNAMES
    DsgnOccNum
  INPUTCLASS
    Default
  UNITS
    people
  DEFAULT
    if( LocalStatus( VentSpcFunc ) > 0 .AND. IfValidAnd( Area > 0 ) ) // Calculated using OccDens
    then // Times 2 because the densities listed in Table 120.1-A are half of the load for egress purposes in CBC
         2 * VentilationSpaceFunctionData:MinOccDens( "VentFuncType", VentSpcFunc ) * Area / 1000
    else 0
    endif
  CHECKCODE
    if( OccNumFxdSeat > 0 .AND. FxdSeat > 0 .AND.
        ( HasNoInternalLds > 0 .OR. 
          IsRes > 0 .OR. 
          SpcFunc = "Unleased Tenant Area" ) )
    then PostWarning( "For Space '%s', OccupantNumberFixedSeating is not valid. This
                      input will be ignored, and default occupancy will be used.", Name )
    else UNCHANGED
    endif
  SIZING
    if( FxdSeat =  0 )
    then 0 
    else OccNumFxdSeat
    endif
ENDRULE

// -------------- # Occupants / Density ---------------------------------------
// Occupant number / density
RULE NEW Spc:OccNum
  DATATYPE
    Float
  LONGFORM
    OccupancyNumber
  DESCRIPTION
    "The number of occupants in the Space for egress/DCV design purposes."
  INPUTCLASS
    NotInput
  UNITS 
    people
  REPORTPRECISION
    0
  DEFAULT
    MinOccNum
ENDRULE
RULE Spc:OccDens
  DESCRIPTION
    "The density of occupants in the Space for egress/DCV design purposes."  
  INPUTCLASS : T24N
    NotInput  IgnoreUserInput  "Spc:OccDens no longer an allowed input as of version 2016.1.0 / 2013 v3d"
  INPUTCLASS : S901G
    Default
  MINIMUM 
    0
  COMMONMINIMUM
    1
  COMMONMAXIMUM
    70
  MAXIMUM 
    200
  UNITS 
    people/1000ft2
  DEFAULT : T24N
    if( IfValidAnd( Area > 0 ) )
    then OccNum / Area * 1000
    else 0
    endif
  DEFAULT : S901G
    if( HasNoInternalLds )
    then UNDEFINED
    else if( LocalCompAssigned( SpcFuncDefaultsRef ) .AND. LocalStatus( SpcFunc ) < 5 )
    then SpcFuncDefaultsRef:OccDens
    else MinOccDens
    endif endif
  SIZING_PROPOSED : T24N
    OccDens
  SIZING_PROPOSED : S901G
    if( HasNoInternalLds .OR. IfValidAnd( OccDens > 0 ) = 0 )
    then UNDEFINED
    else OccDens
    endif
  SIZING_BASELINE
    zp:OccDens
ENDRULE

// For simulation
RULE Spc:OccNumSim
  DESCRIPTION : T24N_2022
    "The number of people in a space for simulation. It is also used in ventilation 
     calculations if Designed Occupancy is selected."  
  DESCRIPTION
    "The number of people in a space for simulation. It is also used in ventilation 
     calculations following the equation under the Standard Section 120.1( c )3." 
  INPUTCLASS : T24N_2022
    NotInput IgnoreUserInput "Spc:OccNumSim no longer an allowed input as of version 2022.3.0, select Designed Occupancy if the space has expected number of occupants"
  INPUTCLASS : S901G T24N
    Default
  DEFAULT : T24N_2022
    if( HasNoInternalLds ) // Is Unoccupied, Attic/Crawlspace, or Plenum space
    then 0 
    else if( IsRes > 0 ) // Is high-rise res or hotel/motel
    then MinOccNumSim
    else if( DsgnOcc > 0 .AND. IfValidAnd( DsgnOccEligible > 0 ) ) // Designed occupency 
    then DsgnOccNum
    else OccDens * ValidOr( OccFrac, 0 ) * ValidOr( Area, 0 ) / 1000 // Calculated using OccDensSim
    endif endif endif
  DEFAULT 
    if( HasNoInternalLds ) // Is Unoccupied, Attic/Crawlspace, or Plenum space
    then 0
    else if( IsRes > 0 ) // Is high-rise res or hotel/motel
    then MinOccNumSim
    else if( FxdSeat > 0 .AND. IfValidAnd( FxdSeatEligible > 0 ) ) // Fixed seating can be used
    then OccNumFxdSeat
    else OccDens * ValidOr( OccFrac, 0 ) * ValidOr( Area, 0 ) / 1000 // Calculated using OccDensSim
    endif endif endif
  CHECKCODE : T24N
    if( ( IsRes > 0 .OR. HasUnknownHVAC > 0 ) .AND. // Only check if IsRes or UnknownHVAC
        LocalStatus( OccNumSim ) > 4 .AND. // input is user defined
        ( OccNumSim > MinOccNumSim * 1.001 .OR. OccNumSim < MinOccNumSim * 0.999 ) )
    then PostWarning( "Space '%s' is a residential space, or HasUnknownHVAC has been checked.
                       The user-defined value for 'Total Occupants' will be ignored.", Name )
    else if( IsRes = 0 .AND. OccNumSim < MinOccNumSim * 0.999 )
    then PostError( "Space '%s' has a user-defined value for 'Total Occupants' less
                     than the minimum required for the Space Function selected.", Name )
    else UNCHANGED
    endif endif
  SIZING : T24N_2022
    if( HasNoInternalLds )
    then 0 // Is Unoccupied, Attic/Crawlspace, or Plenum space
    else if( IsRes > 0 .OR. HasUnknownHVAC > 0 )
    then MinOccNumSim // Is HRR, hotel/motel, or UnknownHVAC
    else if( DsgnOcc > 0 .AND. IfValidAnd( DsgnOccEligible > 0 ) )
    then DsgnOccNum // Fixed seating can be used
    else OccNumSim // Use OccNumSim, either default calc or user input
    endif endif endif
  SIZING
    if( HasNoInternalLds ) // Is Unoccupied, Attic/Crawlspace, or Plenum space
    then 0
    else if( IsRes > 0 ) // Is high-rise res or hotel/motel
    then MinOccNumSim
    else if( FxdSeat > 0 .AND. IfValidAnd( FxdSeatEligible > 0 ) ) // Fixed seating can be used
    then OccNumFxdSeat
    else OccDens * ValidOr( OccFrac, 0 ) * ValidOr( Area, 0 ) / 1000 // Calculated using OccDensSim
    endif endif endif
ENDRULE
RULE Spc:OccDensSim
  DESCRIPTION
    "The density of people of in a space for simulation and ventilation calculations." 
  INPUTCLASS
    NotInput
  UNITS 
    people/1000ft2
  DEFAULT : T24N
    if( HasNoInternalLds )
    then UNDEFINED
    else if( IfValidAnd( Area > 0 ) )
    then OccNumSim / Area * 1000
    else 0
    endif endif
  DEFAULT : S901G
    if( HasNoInternalLds )
    then UNDEFINED
    else if( LocalCompAssigned( SpcFuncDefaultsRef ) .AND. 
            LocalStatus( SpcFunc ) < 5 )
    then SpcFuncDefaultsRef:OccDens
    else OccDens
    endif endif
  // See below for SIZING/ANNUAL rule
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW ThrmlZn:OccDens
  DATATYPE
    Float
  LONGFORM
    OccupantDensity
  DESCRIPTION
    "The density of occupants in the ThermalZone for egress/DCV 
     design purposes."
  INPUTCLASS
    NotInput
  UNITS 
    people/1000ft2
  REPORTPRECISION
    0
  DEFAULT
    if( IfValidAnd( FlrArea > 0 ) = 0 )
    then 0
    else SumRevRef( Spc:ThrmlZnRef, Spc:OccNum ) / FlrArea * 1000
    endif
  SIZING
    if( IfValidAnd( FlrArea > 0 ) = 0 )
    then 0
    else SumRevRef( Spc:ThrmlZnRef, Spc:OccNum ) / FlrArea * 1000
    endif
ENDRULE
RULE ThrmlZn:OccNumSim
  DESCRIPTION
    "The minimum number of people of in a ThermalZone for simulation."
  INPUTCLASS
    NotInput
  UNITS 
    people
  REPORTPRECISION
    2
  DEFAULT
    SumRevRef( Spc:ThrmlZnRef, Spc:OccNumSim )
  SIZING
    SumRevRef( Spc:ThrmlZnRef, Spc:OccNumSim )
ENDRULE
RULE NEW ThrmlZn:OccDensSim
  DATATYPE
    Float
  LONGFORM
    OccupancyDensity
  DESCRIPTION
    "The density of people in the ThermalZone at design occupancy."
  INPUTCLASS
    NotInput
  UNITS 
    people/1000ft2
  DEFAULT
    if( IfValidAnd( FlrArea > 0 ) = 0 )
    then 0
    else OccNumSim / FlrArea * 1000
    endif
  SIZING
    if( FlrArea = 0 )
    then 0
    else OccNumSim / FlrArea * 1000
    endif
ENDRULE


// ---------- Number of Occupants with Multiplier --------------
RULE NEW Spc:OccNumSimWithMult
  DATATYPE
    Float
  LONGFORM
    OccupancyNumberSimulatedWithMultiplier
  DESCRIPTION
    "The simulated number of people in the Space, including BuildingStory multiplier."
  INPUTCLASS
    NotInput
  UNITS 
    people
  DEFAULT 
    OccNumSim * Mult
  SIZING
    OccNumSim * Mult
ENDRULE
RULE NEW Story:OccNumSimWithMult
  DATATYPE
    Float
  LONGFORM
    OccupancyNumberSimulatedWithMultiplier
  DESCRIPTION
    "The simulated number of people on the BuildingStory, including multiplier."
  INPUTCLASS
    NotInput
  UNITS 
    people
  DEFAULT 
    SumChildren( Spc:OccNumSimWithMult )
ENDRULE


// -------------- Occupancy Schedule --------------------
RULE Spc:OccSchRef
  DESCRIPTION
    "Reference to a schedule that describes the fraction of occupancy on an 
     hourly basis."  
  INPUTCLASS : T24N
    Prescribed
  INPUTCLASS : S901G
    Default
  DEFAULT
    if( HasNoInternalLds .OR. LocalStatus( OccDens ) = 0 )
    then UNDEFINED
    else if( LocalCompAssigned( SpcFuncDefaultsRef ) .AND. LocalStatus( SpcFunc )<5 )
    then SpcFuncDefaultsRef:OccSchRef
    else UNDEFINED
    endif endif
  SIZING_PROPOSED : S901G
    if( HasNoInternalLds .OR. LocalStatus( OccDens ) = 0 )
    then UNDEFINED
    else if( ( u:OccSchRef = "- none -" .OR.
             LocalCompAssigned( u:OccSchRef ) = 0 ) .AND.
	           IfValidAnd( u:OccDens > 0 ) )
    then RuleLibrary( Schedule,( SpaceFunctionGroups:OccSchRef( "FuncGroup",FuncSchGrp ) ) )
    else if( u:OccSchRef != "- none -" .AND. IfValidAnd( u:OccDens > 0 ) )
    then u:OccSchRef
    else UNDEFINED
    endif endif endif
  SIZING_PROPOSED
    if( HasNoInternalLds .OR. LocalStatus( OccDens ) = 0 )
    then UNDEFINED
    else RuleLibrary( Schedule,( SpaceFunctionGroups:OccSchRef( "FuncGroup",FuncSchGrpSim ) ) )
    endif
  SIZING_BASELINE
    zp:OccSchRef  
ENDRULE
  

// -------------- Occupant Heat Rates --------------------
RULE Spc:OccSensHtRt
  DESCRIPTION
    "The rate of sensible heat released per person which is a function of activity"  
  INPUTCLASS : T24N
    Prescribed
  INPUTCLASS : S901G
    Default
  MINIMUM 
    0
  COMMONMINIMUM
    100
  COMMONMAXIMUM
    1000
  MAXIMUM 
    2000
  UNITS 
    Btu/hr-person
  DEFAULT
    if( HasNoInternalLds .OR. LocalStatus( OccDens ) = 0 )
    then UNDEFINED
    else if( LocalCompAssigned( SpcFuncDefaultsRef ) .AND. LocalStatus( SpcFunc )<5 )
    then SpcFuncDefaultsRef:OccSensHtRt
    else if( LocalStatus( SpcFunc ) > 1 )
    then SpaceFunctionData:OccSensHtRt( "FuncType",SpcFunc )
    else UNDEFINED
    endif endif endif
  SIZING_PROPOSED : S901G
    if( HasNoInternalLds .OR. IfValidAnd( u:OccDens = 0 ) )
    then UNDEFINED
    else if( IfValidAnd( u:OccSensHtRt = 0 ) .AND. IfValidAnd( u:OccDens > 0 ) )
    then SpaceFunctionData:OccSensHtRt( "FuncType",SpcFunc )
    else if( IfValidAnd( u:OccSensHtRt > 0 ) .AND. IfValidAnd( u:OccDens > 0 ) )
    then u:OccSensHtRt
    else UNDEFINED
    endif endif endif
  SIZING_PROPOSED
    if( HasNoInternalLds .OR. LocalStatus( OccDens ) = 0 )
    then UNDEFINED
    else SpaceFunctionData:OccSensHtRt( "FuncType",SpcFunc )  
    endif
  SIZING_BASELINE
    zp:OccSensHtRt
ENDRULE
RULE Spc:OccLatHtRt
  DESCRIPTION
    "The rate of latent heat released per person which is a function of activity"  
  INPUTCLASS : T24N
    Prescribed
  INPUTCLASS : S901G
    Default
  MINIMUM 
    0
  COMMONMINIMUM
    100
  COMMONMAXIMUM
    1000
  MAXIMUM 
    2000
  UNITS 
    Btu/hr-person
  DEFAULT
    if( HasNoInternalLds .OR. LocalStatus( OccDens ) = 0 )
    then UNDEFINED
    else if( LocalCompAssigned( SpcFuncDefaultsRef ) .AND. LocalStatus( SpcFunc )<5 )
    then SpcFuncDefaultsRef:OccLatHtRt
    else if( LocalStatus( SpcFunc ) > 1 )
    then SpaceFunctionData:OccLatHtRt( "FuncType",SpcFunc )
    else UNDEFINED
    endif endif endif
  SIZING_PROPOSED : S901G
    if( HasNoInternalLds .OR. IfValidAnd( u:OccDens = 0 ) )
    then UNDEFINED
    else if( IfValidAnd( u:OccLatHtRt = 0 ) .AND. IfValidAnd( u:OccDens > 0 ) )
    then SpaceFunctionData:OccLatHtRt( "FuncType",SpcFunc ) 
    else if( IfValidAnd( u:OccLatHtRt > 0 ) .AND. IfValidAnd( u:OccDens > 0 ) )
    then u:OccLatHtRt
    else UNDEFINED
    endif endif endif
  SIZING_PROPOSED
    if( HasNoInternalLds .OR. LocalStatus( OccDens ) = 0 )
    then UNDEFINED
    else SpaceFunctionData:OccLatHtRt( "FuncType",SpcFunc )  
    endif
  SIZING_BASELINE
    zp:OccLatHtRt
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Spc:HaveResDHW
  DATATYPE
    Integer
  LONGFORM
    HaveResidentialDHW
  DESCRIPTION
    "flag indicating that this Spc is residential and served by a ResDHWSys"
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( OccClass = "Residential" ) .AND.
        IfValidAnd( CondgType != "Plenum" ) .AND.
        IfValidAnd( CondgType != "Unconditioned" ) .AND.
        ( LocalCompAssigned( ResDHWSysRef ) .OR.
        ExcludeWtrHtg ) .AND.
        DwellingUnitSpcTotArea > 0 )
    then 1
    else 0
    endif
ENDRULE
